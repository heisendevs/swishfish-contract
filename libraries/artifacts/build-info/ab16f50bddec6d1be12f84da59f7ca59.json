{
	"id": "ab16f50bddec6d1be12f84da59f7ca59",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"metadata": {
				"useLiteralContent": true
			},
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"id",
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"libraries/SafeMathUint.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity 0.8.15;\r\n\r\n/**\r\n * @title SafeMathUint\r\n * @dev Math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMathUint {\r\n    function toInt256Safe(uint256 a) internal pure returns (int256) {\r\n        int256 b = int256(a);\r\n        require(b >= 0);\r\n        return b;\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"libraries/SafeMathUint.sol": {
				"SafeMathUint": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathUint",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeMathUint.sol\":236:415  library SafeMathUint {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeMathUint.sol\":236:415  library SafeMathUint {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093f6c965fc3df0902f7310b5f348088c322c1affed7ffb11b7e25b22cbac7f9f64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122093f6c965fc3df0902f7310b5f348088c322c1affed7ffb11b7e25b22cbac7f9f64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xF6 0xC9 PUSH6 0xFC3DF0902F73 LT 0xB5 RETURN BASEFEE ADDMOD DUP13 ORIGIN 0x2C BYTE SELFDESTRUCT 0xED PUSH32 0xFB11B7E25B22CBAC7F9F64736F6C634300080F00330000000000000000000000 ",
							"sourceMap": "236:179:0:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea264697066735822122093f6c965fc3df0902f7310b5f348088c322c1affed7ffb11b7e25b22cbac7f9f64736f6c634300080f0033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xF6 0xC9 PUSH6 0xFC3DF0902F73 LT 0xB5 RETURN BASEFEE ADDMOD DUP13 ORIGIN 0x2C BYTE SELFDESTRUCT 0xED PUSH32 0xFB11B7E25B22CBAC7F9F64736F6C634300080F00330000000000000000000000 ",
							"sourceMap": "236:179:0:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"toInt256Safe(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 236,
									"end": 415,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "library_deploy_address"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 415,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 415,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093f6c965fc3df0902f7310b5f348088c322c1affed7ffb11b7e25b22cbac7f9f64736f6c634300080f0033",
									".code": [
										{
											"begin": 236,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 415,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"libraries/SafeMathUint.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathUint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeMathUint.sol\":\"SafeMathUint\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"libraries/SafeMathUint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\n/**\\r\\n * @title SafeMathUint\\r\\n * @dev Math operations with safety checks that revert on error\\r\\n */\\r\\nlibrary SafeMathUint {\\r\\n    function toInt256Safe(uint256 a) internal pure returns (int256) {\\r\\n        int256 b = int256(a);\\r\\n        require(b >= 0);\\r\\n        return b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd7080f0c56bbd37c1cd6c3e4fd2961c18a6ecf764fd229770920b0a783f8309a\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"libraries/SafeMathUint.sol": {
				"ast": {
					"absolutePath": "libraries/SafeMathUint.sol",
					"exportedSymbols": {
						"SafeMathUint": [
							26
						]
					},
					"id": 27,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathUint",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:97:0",
								"text": " @title SafeMathUint\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "SafeMathUint",
							"nameLocation": "244:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "328:84:0",
										"statements": [
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "346:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 24,
														"src": "339:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 9,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"arguments": [
														{
															"id": 13,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "357:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "350:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 11,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "350:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "350:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "339:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "378:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "383:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "378:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "370:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "370:15:0"
											},
											{
												"expression": {
													"id": 22,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "403:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 8,
												"id": 23,
												"nodeType": "Return",
												"src": "396:8:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256Safe",
									"nameLocation": "273:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "294:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "286:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:11:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "320:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "320:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:8:0"
									},
									"scope": 26,
									"src": "264:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 27,
							"src": "236:179:0",
							"usedErrors": []
						}
					],
					"src": "110:307:0"
				},
				"id": 0
			}
		}
	}
}