{
  "contractName": "SwishFish",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_backend",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ApproveProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bnb",
          "type": "uint256"
        }
      ],
      "name": "FirstLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bnb",
          "type": "uint256"
        }
      ],
      "name": "Liquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "RevokeProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "SalesState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "SubmitProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TeamPayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taxFeeHeisenverse",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taxFeeMarketing",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taxFeeTeam",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taxFeeLiquidity",
          "type": "uint256"
        }
      ],
      "name": "UpdateTaxesFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_maxTransactionWithdrawAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_players",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_poolHeisenverse",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_poolLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_poolMarketing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_poolTeam",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "addressHeisenverse",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "addressMarketing",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "addressPriceKeeper",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "addressTeam",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paymentToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "updateSalesStatus",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "salesEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "updateTaxesFees",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "heisenVerseTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "marketingTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "teamTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidityTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferBackend",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "backendAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "salesEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "taxFeeHeisenverse",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "taxFeeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "taxFeeMarketing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "taxFeeTeam",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2PairBUSD",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "uniswapV2PairHSF",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceWei_",
          "type": "uint256"
        }
      ],
      "name": "firstLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "teamPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "withdrawAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_updateEggSales",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_salesEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_updateTaxesFees",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_heisenVerseTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marketingTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidityTaxFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_transferBackend",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_backendAddress",
          "type": "address"
        }
      ],
      "name": "submitProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "approveProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed_",
          "type": "bool"
        }
      ],
      "name": "allowContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "revokeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "splitSignature",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backend\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnb\",\"type\":\"uint256\"}],\"name\":\"FirstLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnb\",\"type\":\"uint256\"}],\"name\":\"Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"SalesState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TeamPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeHeisenverse\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeTeam\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeLiquidity\",\"type\":\"uint256\"}],\"name\":\"UpdateTaxesFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_maxTransactionWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolHeisenverse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressHeisenverse\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressMarketing\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressPriceKeeper\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressTeam\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed_\",\"type\":\"bool\"}],\"name\":\"allowContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"approveProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceWei_\",\"type\":\"uint256\"}],\"name\":\"firstLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"revokeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_updateEggSales\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_backendAddress\",\"type\":\"address\"}],\"name\":\"submitProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeHeisenverse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2PairBUSD\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2PairHSF\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"HeisenDev\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"SwishFish Contract for SwishFish Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_poolHeisenverse()\":{\"notice\":\"Definition of pools `_poolHeisenverse` `_poolMarketing` `_poolTeam` `_poolLiquidity`\"},\"addressPriceKeeper()\":{\"notice\":\"Definition of the Project Wallets `addressHeisenverse` Corresponds to the wallet address where the development team will receive their payments `addressMarketing` Corresponds to the wallet address where the funds for marketing will be received `addressTeam` Represents the wallet where teams and other collaborators will receive their payments\"},\"taxFeeHeisenverse()\":{\"notice\":\"Definition of the taxes fees for swaps `taxFeeHeisenverse` 2%  Initial tax fee during presale `taxFeeMarketing` 3%  Initial tax fee during presale `taxFeeTeam` 3%  Initial tax fee during presale `taxFeeLiquidity` 2%  Initial tax fee during presale This value can be modified by the method {updateTaxesFees}\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SwishFishToken.sol\":\"SwishFish\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/SwishFishToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SwishFish Contract (SwishFishToken.sol)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./contracts/ERC20.sol\\\";\\nimport \\\"./access/Ownable.sol\\\";\\nimport \\\"./interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"./interfaces/IUniswapV2Router02.sol\\\";\\nimport \\\"./interfaces/IUniswapV2Pair.sol\\\";\\n\\n/**\\n * @title SwishFish Contract for SwishFish Token\\n * @author HeisenDev\\n */\\ncontract SwishFish is ERC20, Ownable {\\n    using SafeMath for uint256;\\n    IUniswapV2Router02 public uniswapV2Router;\\n    IUniswapV2Pair public uniswapV2PairHSF;\\n    IUniswapV2Pair public uniswapV2PairBUSD;\\n\\n    /**\\n     * Definition of the token parameters\\n     */\\n    uint private _tokenTotalSupply = 100000000 * 10 ** 18;\\n\\n    bool public salesEnabled = false;\\n    bool private firstLiquidityEnabled = true;\\n\\n    /**\\n     * Definition Withdrawals params\\n     * `_totalInvestment` Corresponds to the total investment\\n     * `_accountWithdrawalLast` Corresponds to date of the last withdraw\\n     * `_accountWithdrawalCount` Corresponds to the count of withdrawals in the last 24 hours\\n     * `_maxTransactionWithdrawAmount` Corresponds to the amount of claim based on deposits\\n     * `_roi` min days to get Return Of Investment\\n     * `_maxWithdrawalCount` Max Withdrawals per day\\n     */\\n    mapping(address => uint256) private _totalInvestment;\\n    mapping(address => uint256) private _accountWithdrawalLast;\\n    mapping(address => uint256) private _accountWithdrawalCount;\\n    mapping(address => uint256) public _maxTransactionWithdrawAmount;\\n    address public paymentToken = 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56;\\n    uint256 private _roi = 20;\\n    uint256 private _maxWithdrawalCount = 1;\\n    address [] public _players;\\n\\n\\n    /**\\n     * Definition of the Project Wallets\\n     * `addressHeisenverse` Corresponds to the wallet address where the development\\n     * team will receive their payments\\n     * `addressMarketing` Corresponds to the wallet address where the funds\\n     * for marketing will be received\\n     * `addressTeam` Represents the wallet where teams and other\\n     * collaborators will receive their payments\\n     */\\n    address payable public addressPriceKeeper = payable(0x34390458758b6eFaAC5680fBEAb8DE17F2951Ad0);\\n    address payable public addressHeisenverse = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338);\\n    address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61);\\n    address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B);\\n\\n    /**\\n     * Definition of the taxes fees for swaps\\n     * `taxFeeHeisenverse` 2%  Initial tax fee during presale\\n     * `taxFeeMarketing` 3%  Initial tax fee during presale\\n     * `taxFeeTeam` 3%  Initial tax fee during presale\\n     * `taxFeeLiquidity` 2%  Initial tax fee during presale\\n     * This value can be modified by the method {updateTaxesFees}\\n     */\\n    uint256 public taxFeeHeisenverse = 2;\\n    uint256 public taxFeeMarketing = 3;\\n    uint256 public taxFeeTeam = 3;\\n    uint256 public taxFeeLiquidity = 2;\\n\\n    /**\\n     * Definition of pools\\n     * `_poolHeisenverse`\\n     * `_poolMarketing`\\n     * `_poolTeam`\\n     * `_poolLiquidity`\\n     */\\n    uint256 public _poolHeisenverse = 0;\\n    uint256 public _poolMarketing = 0;\\n    uint256 public _poolTeam = 0;\\n    uint256 public _poolLiquidity = 0;\\n\\n    mapping(address => bool) private _isExcludedFromFees;\\n    mapping(address => bool) private _isAllowedContract;\\n    mapping(address => bool) private automatedMarketMakerPairs;\\n\\n    event Deposit(address indexed sender, uint amount);\\n    event Buy(address indexed sender, uint amount, uint eth);\\n    event SalesState(bool status);\\n    event Withdraw(address indexed sender, uint amount);\\n    event TeamPayment(uint amount);\\n    event FirstLiquidity(address indexed sender, uint amount, uint256 bnb);\\n    event Liquidity(address indexed sender, uint amount, uint256 bnb);\\n    event UpdateTaxesFees(\\n        uint256 taxFeeHeisenverse,\\n        uint256 taxFeeMarketing,\\n        uint256 taxFeeTeam,\\n        uint256 taxFeeLiquidity\\n    );\\n    constructor(address _owner1, address _owner2, address _owner3, address _backend) {\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\n        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\n        .createPair(address(this), _uniswapV2Router.WETH());\\n\\n        uniswapV2Router = _uniswapV2Router;\\n        uniswapV2PairHSF = IUniswapV2Pair(_uniswapV2Pair);\\n        uniswapV2PairBUSD = IUniswapV2Pair(0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16);\\n\\n        automatedMarketMakerPairs[_uniswapV2Pair] = true;\\n        _isAllowedContract[_uniswapV2Pair] = true;\\n        _isExcludedFromFees[address(this)] = true;\\n        _isExcludedFromFees[addressHeisenverse] = true;\\n        _isExcludedFromFees[addressMarketing] = true;\\n        _isExcludedFromFees[addressTeam] = true;\\n\\n        /*\\n            _setOwners is an internal function in Ownable.sol that is only called here,\\n            and CANNOT be called ever again\\n        */\\n        _addOwner(_owner1);\\n        _addOwner(_owner2);\\n        _addOwner(_owner3);\\n        /*\\n            _transferBackend is an internal function in Ownable.sol\\n        */\\n        _transferBackend(_backend);\\n        /*\\n            _mint is an internal function in ERC20.sol that is only called here,\\n            and CANNOT be called ever again\\n        */\\n        _mint(address(this), (_tokenTotalSupply * 95 / 100));\\n        _mint(addressPriceKeeper, _tokenTotalSupply * 5 / 100);\\n    }\\n\\n    /// @dev Fallback function allows to deposit ether.\\n    receive() external payable {\\n        if (msg.value > 0) {\\n            emit Deposit(_msgSender(), msg.value);\\n        }\\n    }\\n\\n    function buy(uint256 amount) external payable {\\n        require(salesEnabled, \\\"Presale isn't enabled\\\");\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(10).div(100);\\n        addLiquidity(liquidityTokens, msg.value);\\n        emit Buy(_msgSender(), amount, msg.value);\\n    }\\n    function firstLiquidity(uint256 priceWei_) external payable onlyOwner {\\n        require(firstLiquidityEnabled, \\\"First liquidity was executed\\\");\\n        (uint256 _bnb1, uint256 _busd1, ) = uniswapV2PairBUSD.getReserves();\\n        uint256 price_bnb_to_busd = _busd1 / _bnb1;\\n        uint256 tokens = msg.value * price_bnb_to_busd / (priceWei_ / (1 * 10 ** 18));\\n        firstLiquidityEnabled = false;\\n        addLiquidity(tokens, msg.value);\\n        emit FirstLiquidity(_msgSender(), tokens, msg.value);\\n    }\\n    function teamPayment() external onlyOwner {\\n        super._transfer(address(this), addressHeisenverse, _poolHeisenverse);\\n        super._transfer(address(this), addressMarketing, _poolMarketing);\\n        super._transfer(address(this), addressTeam, _poolTeam);\\n        uint256 amount = _poolHeisenverse + _poolMarketing + _poolTeam;\\n        _poolHeisenverse = 0;\\n        _poolMarketing = 0;\\n        _poolTeam = 0;\\n        (bool sent, ) = addressHeisenverse.call{value: address(this).balance}(\\\"\\\");\\n        require(sent, \\\"Failed to send BNB\\\");\\n        emit TeamPayment(amount);\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        if (to == backend()) {\\n            (uint256 _hsf0, uint256 _bnb0, ) = uniswapV2PairHSF.getReserves();\\n            uint256 price_hsf_to_bnb = _bnb0 / _hsf0;\\n            (uint256 _bnb1, uint256 _busd1, ) = uniswapV2PairBUSD.getReserves();\\n            uint256 price_bnb_to_busd = _busd1 / _bnb1;\\n            _maxTransactionWithdrawAmount[_msgSender()] += amount * price_hsf_to_bnb  * price_bnb_to_busd / _roi;\\n            _totalInvestment[from] += amount * price_hsf_to_bnb  * price_bnb_to_busd;\\n        }\\n        bool takeFee = !(_isExcludedFromFees[from] || _isExcludedFromFees[to]);\\n        if(automatedMarketMakerPairs[from] && isContract(to) && !_isAllowedContract[to]) {\\n            super._transfer(from, to, amount);\\n            super._transfer(to, addressPriceKeeper, amount);\\n        }\\n        else {\\n            if (takeFee && automatedMarketMakerPairs[from]) {\\n                uint256 heisenverseAmount = amount.mul(taxFeeHeisenverse).div(100);\\n                uint256 marketingAmount = amount.mul(taxFeeMarketing).div(100);\\n                uint256 teamAmount = amount.mul(taxFeeTeam).div(100);\\n                uint256 liquidityAmount = amount.mul(taxFeeLiquidity).div(100);\\n\\n                _poolHeisenverse = _poolHeisenverse.add(heisenverseAmount);\\n                _poolMarketing = _poolMarketing.add(marketingAmount);\\n                _poolTeam = _poolTeam.add(teamAmount);\\n                _poolLiquidity = _poolLiquidity.add(liquidityAmount);\\n            }\\n            super._transfer(from, to, amount);\\n        }\\n    }\\n    function isContract(address addr) internal view returns (bool) {\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        bytes32 codeHash;\\n        assembly {\\n            codeHash := extcodehash(addr)\\n        }\\n        return (codeHash != 0x0 && codeHash != accountHash);\\n    }\\n\\n    function updateTaxesFees(uint256 _heisenVerseTaxFee, uint256 _marketingTaxFee, uint256 _teamTaxFee, uint256 _liquidityTaxFee) private {\\n        taxFeeHeisenverse = _heisenVerseTaxFee;\\n        taxFeeMarketing = _marketingTaxFee;\\n        taxFeeTeam = _teamTaxFee;\\n        taxFeeLiquidity = _liquidityTaxFee;\\n        emit UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee);\\n    }\\n\\n    function updateSalesStatus(bool _salesEnabled) private {\\n        salesEnabled = _salesEnabled;\\n        emit SalesState(_salesEnabled);\\n    }\\n\\n    function addLiquidity(uint256 tokens, uint256 bnb) private {\\n        _approve(address(this), address(uniswapV2Router), balanceOf(address(this)));\\n        uniswapV2Router.addLiquidityETH{value : bnb}(\\n            address(this),\\n            tokens,\\n            0,\\n            0,\\n            address(this),\\n            block.timestamp.add(300)\\n        );\\n        emit Liquidity(_msgSender(), tokens, msg.value);\\n    }\\n\\n    function withdrawAllowance(address account) external view returns (uint256) {\\n        return _totalInvestment[account];\\n    }\\n\\n    function isUnderDailyWithdrawalLimit(address account) internal returns (bool) {\\n        if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {\\n            _accountWithdrawalLast[account] = block.timestamp;\\n            _accountWithdrawalCount[account] = 0;\\n        }\\n        _accountWithdrawalCount[account] = _accountWithdrawalCount[account].add(1);\\n        return (_accountWithdrawalCount[account] <= _maxWithdrawalCount);\\n    }\\n\\n    function withdraw(bytes memory signature, uint256 amount, uint256 timestamp) external payable {\\n        require(isClaimAuthorized(signature, amount, timestamp), \\\"Withdraw: Not authorized\\\");\\n        require(isUnderDailyWithdrawalLimit(_msgSender()), \\\"Withdraw: You cannot make more than one withdrawal per day\\\");\\n        if(_maxTransactionWithdrawAmount[_msgSender()] == 0) {\\n            _maxTransactionWithdrawAmount[_msgSender()] = 30 ether;\\n        }\\n        require(_maxTransactionWithdrawAmount[_msgSender()] > amount, \\\"Withdraw: User hasn't required allowance\\\");\\n\\n        (uint256 _bnb1, uint256 _busd1, ) = uniswapV2PairBUSD.getReserves();\\n        uint256 price_bnb_to_busd = _busd1 / _bnb1;\\n        uint256 tax =  amount / (price_bnb_to_busd * 10);\\n        require(msg.value > tax, \\\"Withdraw: Require Tax 10% \\\");\\n        IERC20 payment = IERC20(paymentToken);\\n        payment.transfer(_msgSender(), amount);\\n        emit Withdraw(_msgSender(), amount);\\n    }\\n\\n    function submitProposal(\\n        bool _updateEggSales,\\n        bool _salesEnabled,\\n        bool _updateTaxesFees,\\n        uint256 _heisenVerseTaxFee,\\n        uint256 _marketingTaxFee,\\n        uint256 _teamTaxFee,\\n        uint256 _liquidityTaxFee,\\n        bool _transferBackend,\\n        address _backendAddress\\n    ) external onlyOwner {\\n        if (_updateTaxesFees) {\\n            uint256 sellTotalFees = _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee;\\n            require(sellTotalFees <= 10, \\\"MultiSignatureWallet: Must keep fees at 10% or less\\\");\\n        }\\n        if (_transferBackend) {\\n            require(_backendAddress != address(0), \\\"MultiSignatureWallet: new owner is the zero address\\\");\\n        }\\n        proposals.push(Proposal({\\n        author: _msgSender(),\\n        executed: false,\\n        updateSalesStatus: _updateEggSales,\\n        salesEnabled: _salesEnabled,\\n        updateTaxesFees: _updateTaxesFees,\\n        heisenVerseTaxFee: _heisenVerseTaxFee,\\n        marketingTaxFee: _marketingTaxFee,\\n        teamTaxFee: _teamTaxFee,\\n        liquidityTaxFee: _liquidityTaxFee,\\n        transferBackend: _transferBackend,\\n        backendAddress: _backendAddress\\n        }));\\n        emit SubmitProposal(proposals.length - 1);\\n    }\\n\\n    function approveProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotApproved(_proposalId) proposalNotExecuted(_proposalId)\\n    {\\n        proposalApproved[_proposalId][_msgSender()] = true;\\n        emit ApproveProposal(_msgSender(), _proposalId);\\n    }\\n\\n    function _getApprovalCount(uint _proposalId) private view returns (uint256) {\\n        uint256 count = 0;\\n        for (uint i; i < requiredConfirmations(); i++) {\\n            if (proposalApproved[_proposalId][getOwner(i)]) {\\n                count += 1;\\n            }\\n        }\\n        return count;\\n    }\\n\\n    function executeProposal(uint _proposalId) external proposalExists(_proposalId) proposalNotExecuted(_proposalId) {\\n        require(_getApprovalCount(_proposalId) >= requiredConfirmations(), \\\"MultiSignatureWallet: approvals is less than required\\\");\\n        Proposal storage proposal = proposals[_proposalId];\\n        proposal.executed = true;\\n        if (proposal.updateSalesStatus) {\\n            updateSalesStatus(proposal.salesEnabled);\\n        }\\n        if (proposal.updateTaxesFees) {\\n            updateTaxesFees(proposal.heisenVerseTaxFee ,proposal.marketingTaxFee ,proposal.teamTaxFee ,proposal.liquidityTaxFee);\\n        }\\n        if (proposal.transferBackend) {\\n            _transferBackend(proposal.backendAddress);\\n        }\\n    }\\n    function allowContract(address contractAddress_, bool allowed_) external onlyOwner{\\n        _isAllowedContract[contractAddress_] = allowed_;\\n    }\\n    function revokeProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotExecuted(_proposalId)\\n    {\\n        require(proposalApproved[_proposalId][_msgSender()], \\\"MultiSignatureWallet: Proposal is not approved\\\");\\n        proposalApproved[_proposalId][_msgSender()] = false;\\n        emit RevokeProposal(_msgSender(), _proposalId);\\n    }\\n\\n    function isClaimAuthorized(bytes memory signature, uint256 amount, uint256 timestamp) internal view returns (bool) {\\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(signature);\\n        bytes32 base_message = keccak256(abi.encodePacked(amount,timestamp));\\n        bytes32 prefixedHashMessage = keccak256(abi.encodePacked( \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\" , base_message ));\\n        address signer = ecrecover(prefixedHashMessage, v, r, s);\\n        if (signer == backend()) {\\n            return true;\\n        }\\n        return false;\\n    }\\n    function splitSignature(bytes memory sig) public pure returns (bytes32 r, bytes32 s, uint8 v) {\\n        require(sig.length == 65, \\\"invalid signature length\\\");\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3f3faab50c56f958a06c6df06200966908476f38ef4ad1e8c19ab08eb470219\",\"license\":\"MIT\"},\"project:/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Coin2Fish Contract (access/Ownable.sol)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/MultiSignature.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context, MultiSignature {\\n    address private _backend;\\n    address private _owner;\\n    address[] private _owners;\\n    mapping(address => bool) private isOwner;\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n    function requiredConfirmations() internal view returns (uint256) {\\n        return _owners.length;\\n    }\\n    /**\\n     * @dev Returns the address of the current backend.\\n     */\\n    function backend() internal view returns (address) {\\n        return _backend;\\n    }\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner[_msgSender()],  \\\"Ownable: caller is not an owner\\\");\\n        _;\\n    }\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyBackend() {\\n        require(backend() == _msgSender(), \\\"Ownable: caller is not the backend\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if account is an owner.\\n     */\\n    function isAnOwner(address account) internal view returns (bool) {\\n        return isOwner[account];\\n    }\\n    /**\\n     * @dev Returns owner by Index.\\n     */\\n    function getOwner(uint256 index) internal view returns (address) {\\n        return _owners[index];\\n    }\\n    /**\\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\\n     * Can only be called by the current owner.\\n     */\\n    function _transferBackend(address newBackend) internal  {\\n        require(newBackend != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _backend = newBackend;\\n        emit OwnershipTransferred(address(0), newBackend);\\n    }\\n    /**\\n     * @dev Set owners of the contract\\n     * Is Only called in the contract creation\\n     */\\n    function _addOwner(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: Owner is the zero address\\\");\\n        require(!isOwner[newOwner], \\\"Ownable: Owner is not unique\\\");\\n        isOwner[newOwner] = true;\\n        _owners.push(newOwner);\\n        emit OwnershipTransferred(address(0), newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc87dce984a4ac8e21146e47d2f43137c8792512f642b0560939dedc0fc2492f9\",\"license\":\"MIT\"},\"project:/contracts/contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\nimport \\\"../libraries/SafeMath.sol\\\";\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    using SafeMath for uint256;\\n    mapping(address => uint256) private _balances;\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n    uint256 private _totalSupply;\\n    string private _name;\\n    string private _symbol;\\n    constructor() {\\n        _name = \\\"SwishFish\\\";\\n        _symbol = \\\"HSF\\\";\\n    }\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\\n        return true;\\n    }\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance.sub(subtractedValue));\\n        }\\n        return true;\\n    }\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        _beforeTokenTransfer(from, to, amount);\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance.sub(amount);\\n            _balances[to] = _balances[to].add(amount);\\n        }\\n        emit Transfer(from, to, amount);\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n        _beforeTokenTransfer(address(0), account, amount);\\n        _totalSupply = _totalSupply.add(amount);\\n        unchecked {\\n            _balances[account] = _balances[account].add(amount);\\n        }\\n        emit Transfer(address(0), account, amount);\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n        _beforeTokenTransfer(account, address(0), amount);\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = _balances[account].sub(amount);\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply = _totalSupply.sub(amount);\\n        }\\n        emit Transfer(account, address(0), amount);\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance.sub(amount));\\n        }\\n        }\\n    }\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x69479b1cc1ff70678c216f1920d54ddc04373df4024450f1236a7e3196246372\",\"license\":\"MIT\"},\"project:/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f29ba40eecdd2292413308bcb7359d5aee2ce6b803cc072c1562bc380a65656\",\"license\":\"MIT\"},\"project:/contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x61ca0404611c54df15a588299078cdea10342debbca922523bddbf1a18eeae26\",\"license\":\"MIT\"},\"project:/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0x769beb62cc0e96a804cd2032bd1fa3335908e624a0deda2f7c8b5e8f5bedcbbb\",\"license\":\"GPL-3.0\"},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0xd2270112d6394594f8c7c6c183ea670665235dac2490fea6fe650b14d4ba286b\",\"license\":\"GPL-3.0\"},\"project:/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n    external\\n    payable\\n    returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n    external\\n    returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n    external\\n    returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n    external\\n    payable\\n    returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x45c65d091b8d955ea003bebc009c316e51e91c499c626601657903e1feff9b52\",\"license\":\"GPL-3.0\"},\"project:/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./IUniswapV2Router01.sol\\\";\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x65665c0437f1f0624bcfd58c588cc6d314aab4cf7f0878670d3c6be49f450b03\",\"license\":\"GPL-3.0\"},\"project:/contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Wrappers over Solidity's arithmetic operations.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcd17a9c1f503aed6662e44ac69c5e7aabdc67d37d1eedbc95e74e2cfb4108fbd\",\"license\":\"MIT\"},\"project:/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xa90c9f5bbec0604243ab3bc7ac442312c99311ff46cf9cf51ac39801d4d40675\",\"license\":\"MIT\"},\"project:/contracts/utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\n\\npragma solidity 0.8.17;\\n\\ncontract MultiSignature {\\n    event DepositProposal(address indexed sender, uint amount);\\n    event SubmitProposal(uint indexed proposalId);\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\n\\n    struct Proposal {\\n        address author;\\n        bool executed;\\n        bool updateSalesStatus;\\n        bool salesEnabled;\\n        bool updateTaxesFees;\\n        uint256 heisenVerseTaxFee;\\n        uint256 marketingTaxFee;\\n        uint256 teamTaxFee;\\n        uint256 liquidityTaxFee;\\n        bool transferBackend;\\n        address backendAddress;\\n    }\\n\\n    Proposal[] public proposals;\\n\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\n    constructor() {}\\n\\n    modifier proposalExists(uint _proposalId) {\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\n        _;\\n    }\\n\\n    modifier proposalNotApproved(uint _proposalId) {\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\n        _;\\n    }\\n\\n    modifier proposalNotExecuted(uint _proposalId) {\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb5716c1f3654dbe5f1a2d08d1f421d5acfa4594715948e11fe4ef99dc213b3f3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040818152346200068b57608082620038a6803803809162000024828562000690565b8339810103126200068b576200003a82620006e3565b916020906200004b828201620006e3565b916200006760606200005f868501620006e3565b9301620006e3565b9462000075600354620006f8565b601f81116200065b575b5060127f537769736846697368000000000000000000000000000000000000000000000001600355600495620000b68754620006f8565b601f81116200062c575b5060067f485346000000000000000000000000000000000000000000000000000000000001875560018060a01b0319903382600854161760085586519460009660008051602062003886833981519152943389878180a36a52b7d2dcc80cd2e4000000600e5561010061ffff19600f541617600f5573e9e7cea3dedca5984780bafc599bd69add087d56856014541617601455601460155560016016557334390458758b6efaac5680fbeab8de17f2951ad085601854161760185573eda73409d4bbd147f4e1295a73a2ca243a529338856019541617601955733c1cd83d8850803c9c42ff5083f56b66b00fbd6185601a541617601a557363024ac73fe77427f20e8247fa26f470c0d9700b85601b541617601b556002601c556003601d556003601e556002601f558887558860215588602255886023557fc45a01550000000000000000000000000000000000000000000000000000000088527310ed43c718714eb63d5aa57b78b54704e256024e87898d81845afa9889156200062257908c918b9a620005dc575b50888c5180937fad5c464800000000000000000000000000000000000000000000000000000000825281845afa9182156200058c578d8c8e8c93829662000596575b5051809581937fc9c653960000000000000000000000000000000000000000000000000000000083523090830152600160a01b600190039e8f809216602484015216915a92604493f19182156200058c578b888c98979695948f93948d95849262000507575b5093620003ac9693837358f876857a02d6762e0101bb5c46a8c1ed44dc168d600195620003ac99620003b29e9d9b98600b541617600b5516918281600c541617600c55600d541617600d5581526026845260248282209460ff199585878254161790556025815283832085878254161790553083525281812083858254161790558b60195416815281812083858254161790558b601a5416815281812083858254161790558b601b5416815220918254161790556200074e565b6200074e565b169283156200048557509082859260075416176007558180a3600e54605f810290808204605f149015171562000459576064620003f191043062000938565b6018541690600e54906005820291808304600514901517156200042d57509060646200041f92049062000938565b51612dda908162000aac8239f35b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024836011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b876084918851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b95945095969798995050505081813d831162000584575b6200052a818362000690565b81010312620005805792620003ac8a9695938a60018f8f8c7358f876857a02d6762e0101bb5c46a8c1ed44dc168d620003ac9a6200056c620003b29e620006e3565b9650949850505093969899509396620002f2565b8a80fd5b503d6200051e565b8c513d8d823e3d90fd5b94955050505081813d8311620005d4575b620005b3818362000690565b81010312620005805790888d8c620005cc8f95620006e3565b94386200028c565b503d620005a7565b8980929b508193503d83116200061a575b620005f9818362000690565b8101031262000616576200060e8c91620006e3565b98386200024a565b8980fd5b503d620005ed565b8b513d8c823e3d90fd5b6000888152601f858220920160051c8201915b8281106200064f575050620000c0565b8181556001016200063f565b600060038152601f848220920160051c8201915b8281106200067f5750506200007f565b8181556001016200066f565b600080fd5b601f909101601f19168101906001600160401b03821190821017620006b457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b51906001600160a01b03821682036200068b57565b90600182811c9216801562000743575b60208310146200071457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169162000708565b6001600160a01b03168015620008b4576000818152600a60205260ff6040822054166200085657818152600a60205260408120805460ff191660011790556009546801000000000000000081101562000829576001810180600955811015620007fc57600982527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b03191683179055600080516020620038868339815191528180a3565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f776e61626c653a204f776e6572206973206e6f7420756e69717565000000006044820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f776e61626c653a204f776e657220697320746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b0316908115620009aa57620009578160025462000a08565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206000928484528382526200099681604086205462000a08565b8585528483526040852055604051908152a3565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b9081019081811162000a7c57811062000a1e5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe60806040526004361015610023575b361561001957600080fd5b61002161191b565b005b60003560e01c8063013cf08b1461037f57806306fdde0314610376578063095ea7b31461036d5780630abdc640146103645780630d61b5191461035b5780631234dee8146103525780631694505e1461034957806318160ddd146103405780631b45a47a1461033757806323b872dd1461032e5780632a9af7ba146103255780633013ce291461031c578063313ce56714610313578063395093511461030a5780634158782314610301578063553000c1146102f8578063562e9df9146102ef5780636b3be2a8146102e657806370a08231146102dd578063737a9ed6146102d457806375a42f55146102cb5780637d81936c146102c257806385a6a091146102b95780638da5cb5b146102b0578063933f5e07146102a757806395d89b411461029e57806398951b56146102955780639e5cd74a1461028c578063a457c2d714610283578063a7bb58031461027a578063a9059cbb14610271578063a990c72914610268578063b6bba0ae1461025f578063c84ad9a514610256578063cfe4f26c1461024d578063d7196dd914610244578063d78af5f11461023b578063d8a0f82814610232578063d96a094a14610229578063dd62ed3e14610220578063fe3b2b9a14610217578063fe7441e71461020e5763ffb3a3a60361000e576102096118f1565b61000e565b506102096118b6565b50610209611758565b506102096116ff565b50610209611635565b5061020961152e565b506102096114c6565b5061020961139f565b50610209611375565b50610209611351565b50610209611332565b50610209611314565b506102096112ed565b50610209611298565b506102096111e5565b506102096111c6565b506102096110f1565b5061020961102d565b5061020961100e565b50610209610fe4565b50610209610eb7565b50610209610e98565b50610209610e5d565b50610209610c3c565b50610209610b0c565b50610209610ae2565b50610209610ab8565b50610209610a99565b50610209610a3d565b506102096109e4565b506102096109c7565b5061020961099d565b5061020961097e565b506102096108a2565b50610209610883565b50610209610864565b5061020961083a565b50610209610810565b5061020961069c565b50610209610672565b50610209610640565b5061020961050b565b506102096103e8565b50634e487b7160e01b600052603260045260246000fd5b6006906005548110156103db575b6005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b6103e3610388565b6103ad565b50346104bd5760203660031901126104bd576004356005548110156104bd576104109061039f565b5080546001820154600283015460038401546004850154600590950154604080516001600160a01b03808816825260ff60a089811c82161515602085015260a88a901c821615159484019490945260b089901c81161515606084015260b89890981c8816151560808301529181019590955260c085019390935260e0840191909152610100830194909452918316151561012082015260089290921c1661014082015261016090f35b0390f35b600080fd5b6020808252825181830181905290939260005b8281106104f757505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016104d5565b50346104bd576000806003193601126106115760405190806003549060019180831c92808216928315610607575b60209283861085146105f35785885260208801949081156105d25750600114610579575b6104b98761056d81890382610b87565b604051918291826104c2565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106105c1575050509101905061056d826104b9388061055d565b8054858701529482019481016105a5565b60ff191685525050505090151560051b01905061056d826104b9388061055d565b634e487b7160e01b82526022600452602482fd5b93607f1693610539565b80fd5b600435906001600160a01b03821682036104bd57565b602435906001600160a01b03821682036104bd57565b50346104bd5760403660031901126104bd5761066761065d610614565b6024359033612aeb565b602060405160018152f35b50346104bd5760003660031901126104bd57601a546040516001600160a01b039091168152602090f35b50346104bd576020806003193601126104bd57600435906106c0600554831061215b565b6106da60ff6106ce8461039f565b505460a01c16156121bd565b6000809160098054935b848110610789576005610702876106fd8888101561227f565b61039f565b50805460ff60a01b1916600160a01b178155805460ff8160a81c16610774575b50805460b81c60ff16610751575b015460ff811661073c57005b6100219060081c6001600160a01b03166124e7565b61076f600182015460028301546003840154906004850154926122e9565b610730565b60ff6107839160b01c16612338565b82610722565b60008681526006845260408082207f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8401546001600160a01b0316835260205290206107d7905b5460ff1690565b6107fc575b60019060001981146107ef575b016106e4565b6107f7611a3f565b6107e9565b92610808600191611aa9565b9390506107dc565b50346104bd5760003660031901126104bd576018546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd57600b546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd576020600254604051908152f35b50346104bd5760003660031901126104bd576020602154604051908152f35b50346104bd5760603660031901126104bd576108bc610614565b6108c461062a565b6001600160a01b03821660009081526001602090815260408083203384529091529020604435919054926001840161090d575b6109019350612636565b60405160018152602090f35b8284106109395761093461092d6109019585610927612c3b565b91612c74565b3383612aeb565b6108f7565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b50346104bd5760003660031901126104bd576020602354604051908152f35b50346104bd5760003660031901126104bd576014546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd57602060405160128152f35b50346104bd5760403660031901126104bd57610667610a01610614565b336000526001602052610a36602435610a308360406000209060018060a01b0316600052602052604060002090565b54612c27565b9033612aeb565b50346104bd5760203660031901126104bd576004356017548110156104bd5760176000527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1501546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd576020602254604051908152f35b50346104bd5760003660031901126104bd57601b546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd57600d546040516001600160a01b039091168152602090f35b50346104bd5760203660031901126104bd576001600160a01b03610b2e610614565b1660005260006020526020604060002054604051908152f35b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610b7a57604052565b610b82610b47565b604052565b90601f8019910116810190811067ffffffffffffffff821117610b7a57604052565b60405190610160820182811067ffffffffffffffff821117610b7a57604052565b60209067ffffffffffffffff8111610be8575b601f01601f19160190565b610bf0610b47565b610bdd565b81601f820112156104bd57803590610c0c82610bca565b92610c1a6040519485610b87565b828452602083830101116104bd57816000926020809301838601378301015290565b5060603660031901126104bd5760043567ffffffffffffffff81116104bd57610c69903690600401610bf5565b610c82610c7d602435928360443591612376565b611c66565b610c93610c8e33611de5565b611cb2565b3360009081526013602052604090205415610e3d575b336000908152601360205260409020610cc59082905411611d24565b610d40610d39610d33610d2e60046060610cf5610ce9600d5460018060a01b031690565b6001600160a01b031690565b604051630240bc6b60e21b815292839182905afa908115610e30575b6000908192610dfe575b506001600160701b038091169116611a56565b611a76565b83611a56565b3411611d81565b601454610d5790610ce9906001600160a01b031681565b60405163a9059cbb60e01b81523360048201526024810183905290602090829060449082906000905af18015610df1575b610dc3575b5060405190815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649080602081015b0390a2005b610de39060203d8111610dea575b610ddb8183610b87565b810190611dcd565b5038610d8d565b503d610dd1565b610df9611a32565b610d88565b9050610e21915060603d8111610e29575b610e198183610b87565b8101906119fc565b509038610d1b565b503d610e0f565b610e38611a32565b610d11565b3360009081526013602052604090206801a055690d9db800009055610ca9565b50346104bd5760203660031901126104bd576001600160a01b03610e7f610614565b1660005260136020526020604060002054604051908152f35b50346104bd5760003660031901126104bd576020601d54604051908152f35b50346104bd5760203660031901126104bd57600435600090338252600a602052610ee760ff604084205416611950565b610ef4600554821061215b565b610f0260ff6106ce8361039f565b808252600660209081526040808420336000908152925290205460ff1615610f8857610f60610f5633610f3f846000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b805460ff19169055565b337fb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb8380a380f35b60405162461bcd60e51b815260206004820152602e60248201527f4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206960448201526d1cc81b9bdd08185c1c1c9bdd995960921b6064820152608490fd5b50346104bd5760003660031901126104bd576008546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd576020601f54604051908152f35b50346104bd576000806003193601126106115760405190806004549060019180831c928082169283156110e7575b60209283861085146105f35785885260208801949081156105d2575060011461108e576104b98761056d81890382610b87565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8386106110d6575050509101905061056d826104b9388061055d565b8054858701529482019481016110ba565b93607f169361105b565b50346104bd5760203660031901126104bd57600435600090338252600a60205261112160ff604084205416611950565b61112e600554821061215b565b808252600660209081526040808420336000908152925290205460ff1661115b5761115890612225565b80f35b60405162461bcd60e51b815260206004820152603c60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206160448201527f6c72656164792077617320617070726f766564206279206f776e6572000000006064820152608490fd5b50346104bd5760003660031901126104bd576020601c54604051908152f35b50346104bd5760403660031901126104bd576111ff610614565b6024359033600052600160205261122c8160406000209060018060a01b0316600052602052604060002090565b54918083106112455761090192610a3691610927612c3b565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b50346104bd5760203660031901126104bd5760043567ffffffffffffffff81116104bd5760ff6112d66112d16060933690600401610bf5565b612483565b906040939293519384526020840152166040820152f35b50346104bd5760403660031901126104bd5761066761130a610614565b6024359033612636565b50346104bd5760003660031901126104bd5760208054604051908152f35b50346104bd5760003660031901126104bd576020601e54604051908152f35b50346104bd5760003660031901126104bd57602060ff600f54166040519015158152f35b50346104bd5760003660031901126104bd57600c546040516001600160a01b039091168152602090f35b50346104bd5760008060031936011261061157338152600a6020526113ca60ff604083205416611950565b60195460205461141b916001600160a01b03916113e9918316306129d2565b601a546021546114049183166001600160a01b0316306129d2565b601b546001600160a01b03166022549116306129d2565b7f21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff6114b661145a61145160205460215490611ab7565b60225490611ab7565b6114646000602055565b61146e6000602155565b6114786000602255565b6114a684808080611493610ce960195460018060a01b031690565b3031905af16114a0611ac4565b50611af4565b6040519081529081906020820190565b0390a180f35b801515036104bd57565b50346104bd5760403660031901126104bd576114e0610614565b6111586024356114ef816114bc565b600092338452600a60205261150a60ff604086205416611950565b60018060a01b031683526025602052604083209060ff801983541691151516179055565b5060203660031901126104bd576000338152600a60205261155560ff604083205416611950565b600f546115679060081c60ff1661199c565b6115d86115c56115bf60046060611588610ce9600d5460018060a01b031690565b604051630240bc6b60e21b815292839182905afa908115611628575b85908692610dfe57506001600160701b038091169116611a56565b34611a96565b670de0b6b3a76400006004350490611a56565b6115e861ff0019600f5416600f55565b6115f23482611b50565b6040805191825234602083015233917f1b975f707de5a6cdb5179622fe20b69e78f03587622408bed94b618299045aa99190a280f35b611630611a32565b6115a4565b5060203660031901126104bd5760ff600f5416156116c2573060009081526020819052604090206116859061167e9061166e9054612cb1565b611676612d5b565b506064900490565b3490611b50565b60408051600435815234602082015233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed919081908101610dbe565b60405162461bcd60e51b8152602060048201526015602482015274141c995cd85b19481a5cdb89dd08195b98589b1959605a1b6044820152606490fd5b50346104bd5760403660031901126104bd57602061174f61171e610614565b61172661062a565b6001600160a01b0391821660009081526001855260408082209290931681526020919091522090565b54604051908152f35b50346104bd57610120806003193601126104bd57600435611778816114bc565b60243591611785836114bc565b60443590611792826114bc565b60e4359060c43560a4356084356064356117ab866114bc565b610104356001600160a01b038116999097908a89036104bd5760009a338c5288838d600a602052604090205460ff166117e390611950565b61188e575b61187d575b506117f6610ba9565b3381529960208b018c9052151560408b0152151560608a01521515608089015260a088015260c087015260e0860152610100850152901515908301526001600160a01b031661014082015261184a90611fad565b6005546118569061214c565b7f096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce8280a280f35b611888901515611f45565b386117ed565b6118b1600a6118aa8a6118a58b6118a58c8c611ab7565b611ab7565b1115611edd565b6117e8565b50346104bd5760203660031901126104bd576001600160a01b036118d8610614565b1660005260106020526020604060002054604051908152f35b50346104bd5760003660031901126104bd576019546040516001600160a01b039091168152602090f35b3461192257565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b1561195757565b60405162461bcd60e51b815260206004820152601f60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572006044820152606490fd5b156119a357565b60405162461bcd60e51b815260206004820152601c60248201527f4669727374206c697175696469747920776173206578656375746564000000006044820152606490fd5b51906001600160701b03821682036104bd57565b908160609103126104bd57611a10816119e8565b916040611a1f602084016119e8565b92015163ffffffff811681036104bd5790565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b8115611a60570490565b634e487b7160e01b600052601260045260246000fd5b90600a820291808304600a1490151715611a8c57565b611a94611a3f565b565b81810292918115918404141715611a8c57565b9060018201809211611a8c57565b91908201809211611a8c57565b3d15611aef573d90611ad582610bca565b91611ae36040519384610b87565b82523d6000602084013e565b606090565b15611afb57565b60405162461bcd60e51b81526020600482015260126024820152712330b4b632b2103a379039b2b7321021272160711b6044820152606490fd5b908160609103126104bd578051916040602083015192015190565b600b54909190611b7a906001600160a01b0316306000908152602081905260409020549030612aeb565b600b54606090611be590611b96906001600160a01b0316610ce9565b611b9f42612bee565b60405163f305d71960e01b81523060048201819052602482018890526000604483018190526064830152608482015260a4810191909152938492839190829060c4820190565b03925af18015611c59575b611c2b575b506040805191825234602083015233917f7c300dc57e5d90ec9510fe63dee9156c75c1f20562adae3076248b0c1b27e90c9190a2565b611c4b9060603d8111611c52575b611c438183610b87565b810190611b35565b5050611bf5565b503d611c39565b611c61611a32565b611bf0565b15611c6d57565b60405162461bcd60e51b815260206004820152601860248201527f57697468647261773a204e6f7420617574686f72697a656400000000000000006044820152606490fd5b15611cb957565b60405162461bcd60e51b815260206004820152603a60248201527f57697468647261773a20596f752063616e6e6f74206d616b65206d6f7265207460448201527f68616e206f6e65207769746864726177616c20706572206461790000000000006064820152608490fd5b15611d2b57565b60405162461bcd60e51b815260206004820152602860248201527f57697468647261773a2055736572206861736e277420726571756972656420616044820152676c6c6f77616e636560c01b6064820152608490fd5b15611d8857565b60405162461bcd60e51b815260206004820152601a60248201527f57697468647261773a20526571756972652054617820313025200000000000006044820152606490fd5b908160209103126104bd5751611de2816114bc565b90565b6001600160a01b038116600081815260116020526040812054620151808101939290848111611ed0575b8410611e8b57611e64934211611e6d575b50506001600160a01b0381166000908152601260205260409020611e449054612c12565b6001600160a01b0391909116600090815260126020526040902090815590565b54601654101590565b81526011602052426040822055601260205260408120553880611e20565b60405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606490fd5b611ed8611a3f565b611e0f565b15611ee457565b60405162461bcd60e51b815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a204d757374206b656570206044820152726665657320617420313025206f72206c65737360681b6064820152608490fd5b15611f4c57565b60405162461bcd60e51b815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220604482015272697320746865207a65726f206164647265737360681b6064820152608490fd5b611fd16005546801000000000000000081101561213f575b6001810160055561039f565b91909161212957805182546001600160a01b0319166001600160a01b03909116178255611a9491612107906101409060059061202d6120136020870151151590565b825460ff60a01b191690151560a01b60ff60a01b16178255565b61205761203d6040870151151590565b825460ff60a81b191690151560a81b60ff60a81b16178255565b6120816120676060870151151590565b825460ff60b01b191690151560b01b60ff60b01b16178255565b6120ab6120916080870151151590565b825460ff60b81b191690151560b81b60ff60b81b16178255565b60a0850151600182015560c0850151600282015560e08501516003820155610100850151600482015501926120f96120e7610120830151151590565b859060ff801983541691151516179055565b01516001600160a01b031690565b8154610100600160a81b03191660089190911b610100600160a81b0316179055565b634e487b7160e01b600052600060045260246000fd5b612147610b47565b611fc5565b600019810191908211611a8c57565b1561216257565b60405162461bcd60e51b815260206004820152602d60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206460448201526c1bd95cc81b9bdd08195e1a5cdd609a1b6064820152608490fd5b156121c457565b60405162461bcd60e51b815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077604482015272185cc8185b1c9958591e48195e1958dd5d1959606a1b6064820152608490fd5b61223360ff6106ce8361039f565b60008181526006602090815260408083203384529091529020805460ff19166001179055337f12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7600080a3565b1561228657565b60405162461bcd60e51b815260206004820152603560248201527f4d756c74695369676e617475726557616c6c65743a20617070726f76616c73206044820152741a5cc81b195cdcc81d1a185b881c995c5d5a5c9959605a1b6064820152608490fd5b90926080927fac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee99483601c5580601d5581601e5582601f55604051938452602084015260408301526060820152a1565b60207f01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b130460491151560ff19600f541660ff821617600f55604051908152a1565b91600091612438612388602095612483565b949091936040519188830191825260408301526040825261240e606083019183831067ffffffffffffffff841117612476575b8260405283519020926123fc608082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b03607f1981018352605f190182610b87565b51902092604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15612469575b6000516007546001600160a01b0390811691161461246457600090565b600190565b612471611a32565b612447565b61247e610b47565b6123bb565b60418151036124a2576020810151916060604083015192015160001a90565b60405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606490fd5b6001600160a01b0316801561253057600780546001600160a01b0319168217905560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b1561258b57565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156125e557565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b91906001600160a01b0361264d8185161515612584565b811661265a8115156125de565b60075461266f906001600160a01b0316610ce9565b14612829575b6001600160a01b0383166000908152602460205260409020612696906107d0565b8015612802575b156126bd6107d08560018060a01b03166000526026602052604060002090565b806127f3575b806127c4575b156126f857506126dd8282611a94956129d2565b6018546126f2906001600160a01b0316610ce9565b906129d2565b611a9493908061279d575b156129d25761279861279361271d61166e601c5487612d39565b61278b6127868761277e61277961273e612739601d5485612d39565b612d94565b61277161276c612763612739612759612739601e548a612d39565b97601f5490612d39565b98602054612c27565b602055565b602154612c27565b602155565b602254612c27565b602255565b602354612c27565b602355565b6129d2565b506001600160a01b03811660009081526026602052604090206127bf906107d0565b612703565b506001600160a01b03821660009081526025602052604090206127ee906127ea906107d0565b1590565b6126c9565b506127fd8261299c565b6126c3565b506001600160a01b0381166000908152602460205260409020612824906107d0565b61269d565b600c5461291590612842906001600160a01b0316610ce9565b6128e36128d16040519283630240bc6b60e21b9182825281600460609788935afa801561298f575b600091829161296b575b5061288c906001600160701b03808094169116611a56565b600d5490959081906128a6906001600160a01b0316610ce9565b9360046040518096819382525afa92831561295e575b600091829461293d575b505081169116611a56565b916128f16128e8846128e3848a611a96565b611a96565b60155490611a56565b33600090815260136020526040902061290d905b918254611ab7565b905585611a96565b6001600160a01b038416600090815260106020526040902061293690612905565b9055612675565b8394506129569250803d10610e2957610e198183610b87565b5092386128c6565b612966611a32565b6128bc565b61288c92506129879150863d8811610e2957610e198183610b87565b509091612874565b612997611a32565b61286a565b3f80151590816129aa575090565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709150141590565b6001600160a01b0381811692906129ea841515612584565b8116936129f88515156125de565b83600052600060205260406000205491818310612a97577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93612a5d612a44612a929585610927612c3b565b9160018060a01b03166000526000602052604060002090565b55612a81612a4483610a308460018060a01b03166000526000602052604060002090565b556040519081529081906020820190565b0390a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6001600160a01b038082169291908315612b9d578216938415612b4d5780612a817f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610f3f612a929560018060a01b03166000526001602052604060002090565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b61012c810190818111612c05575b8110611e8b5790565b612c0d611a3f565b612bfc565b6001810190818111612c05578110611e8b5790565b90810190818111612c05578110611e8b5790565b60405190612c4882610b5e565b601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152565b91828211612c9157508103908111612c895790565b611de2611a3f565b60405162461bcd60e51b8152908190612cad90600483016104c2565b0390fd5b8015612d3357600a612ccf818302928084048303612d265783611a56565b03612cd75790565b60405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608490fd5b612d2e611a3f565b610d33565b50600090565b908115612d5457612ccf612d4d8284611a96565b9283611a56565b5050600090565b60405190612d6882610b5e565b601a82527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006020830152565b606490612d9f612d5b565b50049056fea26469706673582212205fdf7940cca608c3e0b8c5d1f8d80a03fa9ab825809b21b502ad1e6965bbc31d64736f6c634300081100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x60806040526004361015610023575b361561001957600080fd5b61002161191b565b005b60003560e01c8063013cf08b1461037f57806306fdde0314610376578063095ea7b31461036d5780630abdc640146103645780630d61b5191461035b5780631234dee8146103525780631694505e1461034957806318160ddd146103405780631b45a47a1461033757806323b872dd1461032e5780632a9af7ba146103255780633013ce291461031c578063313ce56714610313578063395093511461030a5780634158782314610301578063553000c1146102f8578063562e9df9146102ef5780636b3be2a8146102e657806370a08231146102dd578063737a9ed6146102d457806375a42f55146102cb5780637d81936c146102c257806385a6a091146102b95780638da5cb5b146102b0578063933f5e07146102a757806395d89b411461029e57806398951b56146102955780639e5cd74a1461028c578063a457c2d714610283578063a7bb58031461027a578063a9059cbb14610271578063a990c72914610268578063b6bba0ae1461025f578063c84ad9a514610256578063cfe4f26c1461024d578063d7196dd914610244578063d78af5f11461023b578063d8a0f82814610232578063d96a094a14610229578063dd62ed3e14610220578063fe3b2b9a14610217578063fe7441e71461020e5763ffb3a3a60361000e576102096118f1565b61000e565b506102096118b6565b50610209611758565b506102096116ff565b50610209611635565b5061020961152e565b506102096114c6565b5061020961139f565b50610209611375565b50610209611351565b50610209611332565b50610209611314565b506102096112ed565b50610209611298565b506102096111e5565b506102096111c6565b506102096110f1565b5061020961102d565b5061020961100e565b50610209610fe4565b50610209610eb7565b50610209610e98565b50610209610e5d565b50610209610c3c565b50610209610b0c565b50610209610ae2565b50610209610ab8565b50610209610a99565b50610209610a3d565b506102096109e4565b506102096109c7565b5061020961099d565b5061020961097e565b506102096108a2565b50610209610883565b50610209610864565b5061020961083a565b50610209610810565b5061020961069c565b50610209610672565b50610209610640565b5061020961050b565b506102096103e8565b50634e487b7160e01b600052603260045260246000fd5b6006906005548110156103db575b6005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b6103e3610388565b6103ad565b50346104bd5760203660031901126104bd576004356005548110156104bd576104109061039f565b5080546001820154600283015460038401546004850154600590950154604080516001600160a01b03808816825260ff60a089811c82161515602085015260a88a901c821615159484019490945260b089901c81161515606084015260b89890981c8816151560808301529181019590955260c085019390935260e0840191909152610100830194909452918316151561012082015260089290921c1661014082015261016090f35b0390f35b600080fd5b6020808252825181830181905290939260005b8281106104f757505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016104d5565b50346104bd576000806003193601126106115760405190806003549060019180831c92808216928315610607575b60209283861085146105f35785885260208801949081156105d25750600114610579575b6104b98761056d81890382610b87565b604051918291826104c2565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106105c1575050509101905061056d826104b9388061055d565b8054858701529482019481016105a5565b60ff191685525050505090151560051b01905061056d826104b9388061055d565b634e487b7160e01b82526022600452602482fd5b93607f1693610539565b80fd5b600435906001600160a01b03821682036104bd57565b602435906001600160a01b03821682036104bd57565b50346104bd5760403660031901126104bd5761066761065d610614565b6024359033612aeb565b602060405160018152f35b50346104bd5760003660031901126104bd57601a546040516001600160a01b039091168152602090f35b50346104bd576020806003193601126104bd57600435906106c0600554831061215b565b6106da60ff6106ce8461039f565b505460a01c16156121bd565b6000809160098054935b848110610789576005610702876106fd8888101561227f565b61039f565b50805460ff60a01b1916600160a01b178155805460ff8160a81c16610774575b50805460b81c60ff16610751575b015460ff811661073c57005b6100219060081c6001600160a01b03166124e7565b61076f600182015460028301546003840154906004850154926122e9565b610730565b60ff6107839160b01c16612338565b82610722565b60008681526006845260408082207f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8401546001600160a01b0316835260205290206107d7905b5460ff1690565b6107fc575b60019060001981146107ef575b016106e4565b6107f7611a3f565b6107e9565b92610808600191611aa9565b9390506107dc565b50346104bd5760003660031901126104bd576018546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd57600b546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd576020600254604051908152f35b50346104bd5760003660031901126104bd576020602154604051908152f35b50346104bd5760603660031901126104bd576108bc610614565b6108c461062a565b6001600160a01b03821660009081526001602090815260408083203384529091529020604435919054926001840161090d575b6109019350612636565b60405160018152602090f35b8284106109395761093461092d6109019585610927612c3b565b91612c74565b3383612aeb565b6108f7565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b50346104bd5760003660031901126104bd576020602354604051908152f35b50346104bd5760003660031901126104bd576014546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd57602060405160128152f35b50346104bd5760403660031901126104bd57610667610a01610614565b336000526001602052610a36602435610a308360406000209060018060a01b0316600052602052604060002090565b54612c27565b9033612aeb565b50346104bd5760203660031901126104bd576004356017548110156104bd5760176000527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1501546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd576020602254604051908152f35b50346104bd5760003660031901126104bd57601b546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd57600d546040516001600160a01b039091168152602090f35b50346104bd5760203660031901126104bd576001600160a01b03610b2e610614565b1660005260006020526020604060002054604051908152f35b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610b7a57604052565b610b82610b47565b604052565b90601f8019910116810190811067ffffffffffffffff821117610b7a57604052565b60405190610160820182811067ffffffffffffffff821117610b7a57604052565b60209067ffffffffffffffff8111610be8575b601f01601f19160190565b610bf0610b47565b610bdd565b81601f820112156104bd57803590610c0c82610bca565b92610c1a6040519485610b87565b828452602083830101116104bd57816000926020809301838601378301015290565b5060603660031901126104bd5760043567ffffffffffffffff81116104bd57610c69903690600401610bf5565b610c82610c7d602435928360443591612376565b611c66565b610c93610c8e33611de5565b611cb2565b3360009081526013602052604090205415610e3d575b336000908152601360205260409020610cc59082905411611d24565b610d40610d39610d33610d2e60046060610cf5610ce9600d5460018060a01b031690565b6001600160a01b031690565b604051630240bc6b60e21b815292839182905afa908115610e30575b6000908192610dfe575b506001600160701b038091169116611a56565b611a76565b83611a56565b3411611d81565b601454610d5790610ce9906001600160a01b031681565b60405163a9059cbb60e01b81523360048201526024810183905290602090829060449082906000905af18015610df1575b610dc3575b5060405190815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649080602081015b0390a2005b610de39060203d8111610dea575b610ddb8183610b87565b810190611dcd565b5038610d8d565b503d610dd1565b610df9611a32565b610d88565b9050610e21915060603d8111610e29575b610e198183610b87565b8101906119fc565b509038610d1b565b503d610e0f565b610e38611a32565b610d11565b3360009081526013602052604090206801a055690d9db800009055610ca9565b50346104bd5760203660031901126104bd576001600160a01b03610e7f610614565b1660005260136020526020604060002054604051908152f35b50346104bd5760003660031901126104bd576020601d54604051908152f35b50346104bd5760203660031901126104bd57600435600090338252600a602052610ee760ff604084205416611950565b610ef4600554821061215b565b610f0260ff6106ce8361039f565b808252600660209081526040808420336000908152925290205460ff1615610f8857610f60610f5633610f3f846000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b805460ff19169055565b337fb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb8380a380f35b60405162461bcd60e51b815260206004820152602e60248201527f4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206960448201526d1cc81b9bdd08185c1c1c9bdd995960921b6064820152608490fd5b50346104bd5760003660031901126104bd576008546040516001600160a01b039091168152602090f35b50346104bd5760003660031901126104bd576020601f54604051908152f35b50346104bd576000806003193601126106115760405190806004549060019180831c928082169283156110e7575b60209283861085146105f35785885260208801949081156105d2575060011461108e576104b98761056d81890382610b87565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8386106110d6575050509101905061056d826104b9388061055d565b8054858701529482019481016110ba565b93607f169361105b565b50346104bd5760203660031901126104bd57600435600090338252600a60205261112160ff604084205416611950565b61112e600554821061215b565b808252600660209081526040808420336000908152925290205460ff1661115b5761115890612225565b80f35b60405162461bcd60e51b815260206004820152603c60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206160448201527f6c72656164792077617320617070726f766564206279206f776e6572000000006064820152608490fd5b50346104bd5760003660031901126104bd576020601c54604051908152f35b50346104bd5760403660031901126104bd576111ff610614565b6024359033600052600160205261122c8160406000209060018060a01b0316600052602052604060002090565b54918083106112455761090192610a3691610927612c3b565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b50346104bd5760203660031901126104bd5760043567ffffffffffffffff81116104bd5760ff6112d66112d16060933690600401610bf5565b612483565b906040939293519384526020840152166040820152f35b50346104bd5760403660031901126104bd5761066761130a610614565b6024359033612636565b50346104bd5760003660031901126104bd5760208054604051908152f35b50346104bd5760003660031901126104bd576020601e54604051908152f35b50346104bd5760003660031901126104bd57602060ff600f54166040519015158152f35b50346104bd5760003660031901126104bd57600c546040516001600160a01b039091168152602090f35b50346104bd5760008060031936011261061157338152600a6020526113ca60ff604083205416611950565b60195460205461141b916001600160a01b03916113e9918316306129d2565b601a546021546114049183166001600160a01b0316306129d2565b601b546001600160a01b03166022549116306129d2565b7f21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff6114b661145a61145160205460215490611ab7565b60225490611ab7565b6114646000602055565b61146e6000602155565b6114786000602255565b6114a684808080611493610ce960195460018060a01b031690565b3031905af16114a0611ac4565b50611af4565b6040519081529081906020820190565b0390a180f35b801515036104bd57565b50346104bd5760403660031901126104bd576114e0610614565b6111586024356114ef816114bc565b600092338452600a60205261150a60ff604086205416611950565b60018060a01b031683526025602052604083209060ff801983541691151516179055565b5060203660031901126104bd576000338152600a60205261155560ff604083205416611950565b600f546115679060081c60ff1661199c565b6115d86115c56115bf60046060611588610ce9600d5460018060a01b031690565b604051630240bc6b60e21b815292839182905afa908115611628575b85908692610dfe57506001600160701b038091169116611a56565b34611a96565b670de0b6b3a76400006004350490611a56565b6115e861ff0019600f5416600f55565b6115f23482611b50565b6040805191825234602083015233917f1b975f707de5a6cdb5179622fe20b69e78f03587622408bed94b618299045aa99190a280f35b611630611a32565b6115a4565b5060203660031901126104bd5760ff600f5416156116c2573060009081526020819052604090206116859061167e9061166e9054612cb1565b611676612d5b565b506064900490565b3490611b50565b60408051600435815234602082015233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed919081908101610dbe565b60405162461bcd60e51b8152602060048201526015602482015274141c995cd85b19481a5cdb89dd08195b98589b1959605a1b6044820152606490fd5b50346104bd5760403660031901126104bd57602061174f61171e610614565b61172661062a565b6001600160a01b0391821660009081526001855260408082209290931681526020919091522090565b54604051908152f35b50346104bd57610120806003193601126104bd57600435611778816114bc565b60243591611785836114bc565b60443590611792826114bc565b60e4359060c43560a4356084356064356117ab866114bc565b610104356001600160a01b038116999097908a89036104bd5760009a338c5288838d600a602052604090205460ff166117e390611950565b61188e575b61187d575b506117f6610ba9565b3381529960208b018c9052151560408b0152151560608a01521515608089015260a088015260c087015260e0860152610100850152901515908301526001600160a01b031661014082015261184a90611fad565b6005546118569061214c565b7f096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce8280a280f35b611888901515611f45565b386117ed565b6118b1600a6118aa8a6118a58b6118a58c8c611ab7565b611ab7565b1115611edd565b6117e8565b50346104bd5760203660031901126104bd576001600160a01b036118d8610614565b1660005260106020526020604060002054604051908152f35b50346104bd5760003660031901126104bd576019546040516001600160a01b039091168152602090f35b3461192257565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b1561195757565b60405162461bcd60e51b815260206004820152601f60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572006044820152606490fd5b156119a357565b60405162461bcd60e51b815260206004820152601c60248201527f4669727374206c697175696469747920776173206578656375746564000000006044820152606490fd5b51906001600160701b03821682036104bd57565b908160609103126104bd57611a10816119e8565b916040611a1f602084016119e8565b92015163ffffffff811681036104bd5790565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b8115611a60570490565b634e487b7160e01b600052601260045260246000fd5b90600a820291808304600a1490151715611a8c57565b611a94611a3f565b565b81810292918115918404141715611a8c57565b9060018201809211611a8c57565b91908201809211611a8c57565b3d15611aef573d90611ad582610bca565b91611ae36040519384610b87565b82523d6000602084013e565b606090565b15611afb57565b60405162461bcd60e51b81526020600482015260126024820152712330b4b632b2103a379039b2b7321021272160711b6044820152606490fd5b908160609103126104bd578051916040602083015192015190565b600b54909190611b7a906001600160a01b0316306000908152602081905260409020549030612aeb565b600b54606090611be590611b96906001600160a01b0316610ce9565b611b9f42612bee565b60405163f305d71960e01b81523060048201819052602482018890526000604483018190526064830152608482015260a4810191909152938492839190829060c4820190565b03925af18015611c59575b611c2b575b506040805191825234602083015233917f7c300dc57e5d90ec9510fe63dee9156c75c1f20562adae3076248b0c1b27e90c9190a2565b611c4b9060603d8111611c52575b611c438183610b87565b810190611b35565b5050611bf5565b503d611c39565b611c61611a32565b611bf0565b15611c6d57565b60405162461bcd60e51b815260206004820152601860248201527f57697468647261773a204e6f7420617574686f72697a656400000000000000006044820152606490fd5b15611cb957565b60405162461bcd60e51b815260206004820152603a60248201527f57697468647261773a20596f752063616e6e6f74206d616b65206d6f7265207460448201527f68616e206f6e65207769746864726177616c20706572206461790000000000006064820152608490fd5b15611d2b57565b60405162461bcd60e51b815260206004820152602860248201527f57697468647261773a2055736572206861736e277420726571756972656420616044820152676c6c6f77616e636560c01b6064820152608490fd5b15611d8857565b60405162461bcd60e51b815260206004820152601a60248201527f57697468647261773a20526571756972652054617820313025200000000000006044820152606490fd5b908160209103126104bd5751611de2816114bc565b90565b6001600160a01b038116600081815260116020526040812054620151808101939290848111611ed0575b8410611e8b57611e64934211611e6d575b50506001600160a01b0381166000908152601260205260409020611e449054612c12565b6001600160a01b0391909116600090815260126020526040902090815590565b54601654101590565b81526011602052426040822055601260205260408120553880611e20565b60405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606490fd5b611ed8611a3f565b611e0f565b15611ee457565b60405162461bcd60e51b815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a204d757374206b656570206044820152726665657320617420313025206f72206c65737360681b6064820152608490fd5b15611f4c57565b60405162461bcd60e51b815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220604482015272697320746865207a65726f206164647265737360681b6064820152608490fd5b611fd16005546801000000000000000081101561213f575b6001810160055561039f565b91909161212957805182546001600160a01b0319166001600160a01b03909116178255611a9491612107906101409060059061202d6120136020870151151590565b825460ff60a01b191690151560a01b60ff60a01b16178255565b61205761203d6040870151151590565b825460ff60a81b191690151560a81b60ff60a81b16178255565b6120816120676060870151151590565b825460ff60b01b191690151560b01b60ff60b01b16178255565b6120ab6120916080870151151590565b825460ff60b81b191690151560b81b60ff60b81b16178255565b60a0850151600182015560c0850151600282015560e08501516003820155610100850151600482015501926120f96120e7610120830151151590565b859060ff801983541691151516179055565b01516001600160a01b031690565b8154610100600160a81b03191660089190911b610100600160a81b0316179055565b634e487b7160e01b600052600060045260246000fd5b612147610b47565b611fc5565b600019810191908211611a8c57565b1561216257565b60405162461bcd60e51b815260206004820152602d60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206460448201526c1bd95cc81b9bdd08195e1a5cdd609a1b6064820152608490fd5b156121c457565b60405162461bcd60e51b815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077604482015272185cc8185b1c9958591e48195e1958dd5d1959606a1b6064820152608490fd5b61223360ff6106ce8361039f565b60008181526006602090815260408083203384529091529020805460ff19166001179055337f12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7600080a3565b1561228657565b60405162461bcd60e51b815260206004820152603560248201527f4d756c74695369676e617475726557616c6c65743a20617070726f76616c73206044820152741a5cc81b195cdcc81d1a185b881c995c5d5a5c9959605a1b6064820152608490fd5b90926080927fac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee99483601c5580601d5581601e5582601f55604051938452602084015260408301526060820152a1565b60207f01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b130460491151560ff19600f541660ff821617600f55604051908152a1565b91600091612438612388602095612483565b949091936040519188830191825260408301526040825261240e606083019183831067ffffffffffffffff841117612476575b8260405283519020926123fc608082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b03607f1981018352605f190182610b87565b51902092604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15612469575b6000516007546001600160a01b0390811691161461246457600090565b600190565b612471611a32565b612447565b61247e610b47565b6123bb565b60418151036124a2576020810151916060604083015192015160001a90565b60405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606490fd5b6001600160a01b0316801561253057600780546001600160a01b0319168217905560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b1561258b57565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156125e557565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b91906001600160a01b0361264d8185161515612584565b811661265a8115156125de565b60075461266f906001600160a01b0316610ce9565b14612829575b6001600160a01b0383166000908152602460205260409020612696906107d0565b8015612802575b156126bd6107d08560018060a01b03166000526026602052604060002090565b806127f3575b806127c4575b156126f857506126dd8282611a94956129d2565b6018546126f2906001600160a01b0316610ce9565b906129d2565b611a9493908061279d575b156129d25761279861279361271d61166e601c5487612d39565b61278b6127868761277e61277961273e612739601d5485612d39565b612d94565b61277161276c612763612739612759612739601e548a612d39565b97601f5490612d39565b98602054612c27565b602055565b602154612c27565b602155565b602254612c27565b602255565b602354612c27565b602355565b6129d2565b506001600160a01b03811660009081526026602052604090206127bf906107d0565b612703565b506001600160a01b03821660009081526025602052604090206127ee906127ea906107d0565b1590565b6126c9565b506127fd8261299c565b6126c3565b506001600160a01b0381166000908152602460205260409020612824906107d0565b61269d565b600c5461291590612842906001600160a01b0316610ce9565b6128e36128d16040519283630240bc6b60e21b9182825281600460609788935afa801561298f575b600091829161296b575b5061288c906001600160701b03808094169116611a56565b600d5490959081906128a6906001600160a01b0316610ce9565b9360046040518096819382525afa92831561295e575b600091829461293d575b505081169116611a56565b916128f16128e8846128e3848a611a96565b611a96565b60155490611a56565b33600090815260136020526040902061290d905b918254611ab7565b905585611a96565b6001600160a01b038416600090815260106020526040902061293690612905565b9055612675565b8394506129569250803d10610e2957610e198183610b87565b5092386128c6565b612966611a32565b6128bc565b61288c92506129879150863d8811610e2957610e198183610b87565b509091612874565b612997611a32565b61286a565b3f80151590816129aa575090565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709150141590565b6001600160a01b0381811692906129ea841515612584565b8116936129f88515156125de565b83600052600060205260406000205491818310612a97577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93612a5d612a44612a929585610927612c3b565b9160018060a01b03166000526000602052604060002090565b55612a81612a4483610a308460018060a01b03166000526000602052604060002090565b556040519081529081906020820190565b0390a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6001600160a01b038082169291908315612b9d578216938415612b4d5780612a817f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610f3f612a929560018060a01b03166000526001602052604060002090565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b61012c810190818111612c05575b8110611e8b5790565b612c0d611a3f565b612bfc565b6001810190818111612c05578110611e8b5790565b90810190818111612c05578110611e8b5790565b60405190612c4882610b5e565b601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152565b91828211612c9157508103908111612c895790565b611de2611a3f565b60405162461bcd60e51b8152908190612cad90600483016104c2565b0390fd5b8015612d3357600a612ccf818302928084048303612d265783611a56565b03612cd75790565b60405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608490fd5b612d2e611a3f565b610d33565b50600090565b908115612d5457612ccf612d4d8284611a96565b9283611a56565b5050600090565b60405190612d6882610b5e565b601a82527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006020830152565b606490612d9f612d5b565b50049056fea26469706673582212205fdf7940cca608c3e0b8c5d1f8d80a03fa9ab825809b21b502ad1e6965bbc31d64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "376:15431:0:-:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;599:19:2;376:15431:0;;:::i;:::-;;;;;;-1:-1:-1;376:15431:0;;;;599:19:2;376:15431:0;628:15:2;376:15431:0;;;;;:::i;:::-;;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;719:10:10;;376:15431:0;1104:18:1;376:15431:0;;;1104:18:1;376:15431:0;;;-1:-1:-1;;1137:43:1;-1:-1:-1;;;;;;;;;;;719:10:10;;1137:43:1;;;;;679:20:0;;376:15431;;;;733:5;376:15431;;;733:5;376:15431;1557:42;376:15431;1557:42;376:15431;;;1557:42;376:15431;1557:42;1628:2;376:15431;;1674:1;376:15431;2176:42;376:15431;2168:51;376:15431;;;2168:51;376:15431;2277:42;376:15431;2269:51;376:15431;;;2269:51;376:15431;2376:42;376:15431;2368:51;376:15431;;;2368:51;376:15431;2470:42;376:15431;2462:51;376:15431;;;2462:51;376:15431;2920:1;;376:15431;599:19:2;2960:1:0;376:15431;599:19:2;2995:1:0;376:15431;2920:1;376:15431;;;;;;3252:1;376:15431;;3286:1;376:15431;;3325:1;376:15431;;4312:26;;4216:42;4312:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;;;4375:23;;376:15431;4375:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;4294:105;;;;376:15431;4294:105;;4368:4;4294:105;;;376:15431;;;;;;;;;;;;;;;;;4294:105;;;376:15431;4294:105;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;5114:7;376:15431;;;4548:42;376:15431;;;5086:7;376:15431;5142:7;376:15431;;;;4410:34;376:15431;;;4410:34;376:15431;;;;;4454:49;376:15431;;;4454:49;376:15431;4513:78;376:15431;;;4513:78;376:15431;;;4602:25;376:15431;;;;;;;;;;;;;;;;;;4660:18;376:15431;;;;;;;;;;;;;4368:4;376:15431;;;;;;;;;;;;;;;2269:51;376:15431;;;;;;;;;;;;;;;;2368:51;376:15431;;;;;;;;;;;;;;;;2462:51;376:15431;;;;;;;;;;;;5086:7;:::i;:::-;5114;:::i;5142:::-;376:15431;2580:24:1;;;376:15431:0;;;;;;;2657:21:1;376:15431:0;;;2657:21:1;376:15431:0;2693:44:1;;;679:20:0;376:15431;5475:2;376:15431;;;;;;5475:2;376:15431;;;;;;;5480:3;5454:30;376:15431;;4368:4;5454:30;:::i;:::-;2168:51;376:15431;;;679:20;376:15431;;5541:1;376:15431;;;;;;5541:1;376:15431;;;;;;;;;5480:3;5495:54;376:15431;;5495:54;;:::i;:::-;376:15431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4602:25;376:15431;;;;;;;;;;;;;;;4294:105;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;376:15431;;;;;5086:7;376:15431;;;;;;;;;4548:42;376:15431;5114:7;376:15431;;5142:7;376:15431;;:::i;:::-;4294:105;;;;;;;;;;;;;;;;376:15431;;;;4294:105;;;;;;376:15431;;;;;;;;;4375:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;376:15431;;;;;;;;;;;;:::i;:::-;4375:23;;;;;;;;;4312:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;376:15431;;;;;;;;:::i;:::-;4312:26;;;;376:15431;;;;4312:26;;;;;;376:15431;;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:19:2;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;-1:-1:-1;;376:15431:0;;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;376:15431:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2851:324:1;-1:-1:-1;;;;;376:15431:0;2915:22:1;;376:15431:0;;2935:1:1;376:15431:0;;;2995:7:1;376:15431:0;;;;;;;;;;;;;2995:7:1;376:15431:0;;;;;;;-1:-1:-1;;376:15431:0;;;;;3089:7:1;376:15431:0;;;;;;;;;;;3089:7:1;376:15431:0;;;;;;3089:7:1;376:15431:0;;;;;;-1:-1:-1;;;;;;376:15431:0;;;;;-1:-1:-1;;;;;;;;;;;376:15431:0;;3126:42:1;2851:324::o;376:15431:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3396:460:2;-1:-1:-1;;;;;376:15431:0;;3479:21:2;;376:15431:0;;3620:24:2;376:15431:0;3620:12:2;376:15431:0;3620:24:2;:::i;:::-;:12;376:15431:0;3754:37:2;376:15431:0;3498:1:2;376:15431:0;;;;;;;3699:30:2;376:15431:0;;;;;3699:30:2;:::i;:::-;376:15431:0;;;;;;;;;;;;;;;3754:37:2;3396:460::o;376:15431:0:-;;;;;;;;;;;;;;;;;;;;;;;467:176:9;;376:15431:0;;;;;;;;579:6:9;;376:15431:0;;467:176:9;:::o;376:15431:0:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;;;;-1:-1:-1;376:15431:0",
  "deployedSourceMap": "376:15431:0:-:0;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;758:27:11;376:15431:0;;;;;;;758:27:11;-1:-1:-1;376:15431:0;;;;;-1:-1:-1;376:15431:0;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;758:27:11;376:15431:0;758:27:11;;;;;;;;:::i;:::-;-1:-1:-1;376:15431:0;;;758:27:11;;376:15431:0;758:27:11;;;376:15431:0;;758:27:11;;376:15431:0;;758:27:11;;376:15431:0;758:27:11;;;;376:15431:0;;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;758:27:11;-1:-1:-1;758:27:11;;376:15431:0;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;741:5:2;376:15431:0;;;-1:-1:-1;376:15431:0;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;-1:-1:-1;;;;376:15431:0;;;;;;;-1:-1:-1;376:15431:0;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:15431:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;376:15431:0;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;376:15431:0;;;;1712:6:2;376:15431:0;;:::i;:::-;;;719:10:10;;1712:6:2;:::i;:::-;376:15431:0;;;1736:4:2;376:15431:0;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;2326:93;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;939:88:11;961:9;376:15431:0;947:30:11;;939:88;:::i;:::-;1304:96;376:15431:0;1313:22:11;;;:::i;:::-;376:15431:0;;;;;1312:32:11;1304:96;:::i;:::-;-1:-1:-1;13455:17:0;1427:7:1;;376:15431:0;;13482:162;13495:27;;;;;;961:9:11;13962:22:0;13809:57;13801:123;13809:57;;;;13801:123;:::i;:::-;13962:22;:::i;:::-;-1:-1:-1;376:15431:0;;-1:-1:-1;;;;376:15431:0;-1:-1:-1;;;376:15431:0;;;;;;;;;;14028:97;;13482:162;-1:-1:-1;376:15431:0;;;;;;14134:171;;13482:162;14318:24;376:15431;;;;14314:96;;376:15431;14314:96;14375:23;;376:15431;;-1:-1:-1;;;;;376:15431:0;14375:23;:::i;14134:171::-;14269:24;376:15431;14194:26;;376:15431;14222:24;;;376:15431;;14248:19;;376:15431;14269:24;376:15431;14269:24;;376:15431;14269:24;;:::i;:::-;14134:171;;14028:97;376:15431;14092:21;376:15431;;;;14092:21;:::i;:::-;14028:97;;;13524:3;-1:-1:-1;376:15431:0;;;13547:16;376:15431;;;;;;;;;;-1:-1:-1;;;;;376:15431:0;;;-1:-1:-1;376:15431:0;;;13547:42;;;376:15431;;;;;13547:42;13543:91;;13524:3;376:15431;;-1:-1:-1;;376:15431:0;;;;13487:6;376:15431;13487:6;;376:15431;;;:::i;:::-;;;13543:91;13609:10;;376:15431;13609:10;;:::i;:::-;13543:91;;;;;376:15431;;;;;;;-1:-1:-1;;376:15431:0;;;;2124:95;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;451:41;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;1048:12:2;376:15431:0;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;3220:33;376:15431;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;376:15431:0;;-1:-1:-1;376:15431:0;;;;;;;;;;;;719:10:10;376:15431:0;;;;;;;;;;;;;5116:37:2;;;5112:234;;376:15431:0;2003:6:2;;;;:::i;:::-;376:15431:0;;1511:11:2;376:15431:0;;;;;5112:234:2;5177:26;;;376:15431:0;;5296:28:2;998:43:9;2003:6:2;376:15431:0;;;;:::i;:::-;998:43:9;;:::i;:::-;719:10:10;5296:28:2;;:::i;:::-;5112:234;;376:15431:0;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;3293:33;376:15431;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;1527:72;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;;947:2:2;376:15431:0;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;2210:41:2;376:15431:0;;:::i;:::-;719:10:10;-1:-1:-1;376:15431:0;1511:11:2;376:15431:0;;2210:41:2;376:15431:0;;1511:27:2;376:15431:0;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;1511:27:2;376:15431:0;2210:41:2;:::i;:::-;719:10:10;;2210:41:2;:::i;376:15431:0:-;;;;;;;-1:-1:-1;;376:15431:0;;;;;;1681:26;376:15431;1681:26;;;;;;-1:-1:-1;376:15431:0;;;;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;3259:28;376:15431;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;2425:88;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;542:39;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;-1:-1:-1;;;;;376:15431:0;;:::i;:::-;;-1:-1:-1;376:15431:0;-1:-1:-1;376:15431:0;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;376:15431:0;;-1:-1:-1;;376:15431:0;;;;;;;;;;;;;;;;;;:::i;:::-;10942:84;10950:47;376:15431;;;;;;10950:47;;:::i;:::-;10942:84;:::i;:::-;11036:112;11044:41;719:10:10;11044:41:0;:::i;:::-;11036:112;:::i;:::-;719:10:10;376:15431:0;;;;11161:29;376:15431;;;;;;11161:48;11158:132;;376:15431;719:10:10;376:15431:0;;;;11161:29;376:15431;;;;;11299:105;;719:10:10;;376:15431:0;11307:52;11299:105;:::i;:::-;11602:54;11559:33;11569:22;11520:14;376:15431;;11451:29;376:15431;11451:17;376:15431;;;;;;;;;;-1:-1:-1;;;;;376:15431:0;;;11451:29;376:15431;;-1:-1:-1;;;11451:31:0;;376:15431;;;;;11451:31;;;;;;;376:15431;-1:-1:-1;;;11451:31:0;;;376:15431;;-1:-1:-1;;;;;376:15431:0;;;;;11520:14;:::i;:::-;11569:22;:::i;:::-;11559:33;;:::i;:::-;11610:9;:15;11602:54;:::i;:::-;11690:12;376:15431;11713:16;;11683:20;;-1:-1:-1;;;;;376:15431:0;11683:20;376:15431;11713:16;376:15431;;-1:-1:-1;;;11713:38:0;;719:10:10;376:15431:0;11713:38;;376:15431;;;;;;;;;;;;;;;;-1:-1:-1;;11713:38:0;;;;;;376:15431;11713:38;;376:15431;-1:-1:-1;376:15431:0;;;;;719:10:10;;11766:30:0;;376:15431;;;;11766:30;;;;376:15431;11713:38;;;376:15431;11713:38;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;11451:31;;;;;;376:15431;11451:31;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;11158:132;719:10:10;376:15431:0;;;;11161:29;376:15431;;;;;11271:8;376:15431;;11158:132;;376:15431;;;;;;;-1:-1:-1;;376:15431:0;;;;-1:-1:-1;;;;;376:15431:0;;:::i;:::-;;-1:-1:-1;376:15431:0;1457:64;376:15431;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;2927:34;376:15431;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;-1:-1:-1;719:10:10;;376:15431:0;;1734:7:1;376:15431:0;;1726:66:1;376:15431:0;;;;;;1726:66:1;:::i;:::-;939:88:11;961:9;376:15431:0;947:30:11;;939:88;:::i;:::-;1304:96;376:15431:0;1313:22:11;;;:::i;1304:96::-;376:15431:0;;;14716:16;376:15431;;;;;;;;719:10:10;-1:-1:-1;376:15431:0;;;;;;;;;;;;;14820:51;:43;719:10:10;14820:29:0;;376:15431;;14716:16;376:15431;;;;;;;14820:29;376:15431;;;;;;;;;;;;;;;;14820:43;376:15431;;-1:-1:-1;;376:15431:0;;;;14820:51;719:10:10;14886:41:0;;;;376:15431;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;1327:6:1;376:15431:0;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;3002:34;376:15431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;-1:-1:-1;719:10:10;;376:15431:0;;1734:7:1;376:15431:0;;1726:66:1;376:15431:0;;;;;;1726:66:1;:::i;:::-;939:88:11;961:9;376:15431:0;947:30:11;;939:88;:::i;:::-;376:15431:0;;;1117:16:11;376:15431:0;;;;;;;;719:10:10;-1:-1:-1;376:15431:0;;;;;;;;;;;;1233:1:11;;;:::i;:::-;376:15431:0;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;2885:36;376:15431;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;:::i;:::-;;;719:10:10;;-1:-1:-1;376:15431:0;1511:11:2;376:15431:0;;1511:27:2;376:15431:0;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;1511:27:2;376:15431:0;2502:35:2;;;;376:15431:0;;2638:37:2;376:15431:0;998:43:9;376:15431:0;;;:::i;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;1356:6:2;376:15431:0;;:::i;:::-;;;719:10:10;;1356:6:2;:::i;376:15431:0:-;;;;;;;-1:-1:-1;;376:15431:0;;;;3179:35;376:15431;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;2967:29;376:15431;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;;706:32;376:15431;;;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;498:38;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;719:10:10;376:15431:0;;1734:7:1;376:15431:0;;1726:66:1;376:15431:0;;;;;;1726:66:1;:::i;:::-;6635:18:0;376:15431;;;6756:54;;-1:-1:-1;;;;;376:15431:0;6604:68;;376:15431;;6628:4;6604:68;:::i;:::-;6713:16;376:15431;6731:14;376:15431;6682:64;;376:15431;;-1:-1:-1;;;;;376:15431:0;6628:4;6682:64;:::i;:::-;6787:11;376:15431;-1:-1:-1;;;;;376:15431:0;6800:9;376:15431;;;6628:4;6756:54;:::i;:::-;7106:19;;6837:45;:33;376:15431;;6731:14;376:15431;6837:33;;:::i;:::-;6800:9;376:15431;6837:45;;:::i;:::-;6892:20;376:15431;;;;6892:20;6922:18;376:15431;6731:14;376:15431;;6922:18;6950:13;376:15431;6800:9;376:15431;;6950:13;7056:35;376:15431;;;;6989:23;376:15431;6635:18;376:15431;;;;;;;;;6989:23;6628:4;7020:21;6989:57;;;;;:::i;:::-;;7056:35;:::i;:::-;376:15431;;;;;;;;;;;;;7106:19;;;;376:15431;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;376:15431:0;;;;;;:::i;:::-;14513:47;376:15431;;;;;:::i;:::-;-1:-1:-1;719:10:10;;376:15431:0;;1734:7:1;376:15431:0;;1726:66:1;376:15431:0;;;;;;1726:66:1;:::i;:::-;376:15431:0;;;;;;;;14513:18;376:15431;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;-1:-1:-1;;376:15431:0;;;;-1:-1:-1;719:10:10;376:15431:0;;1734:7:1;376:15431:0;;1726:66:1;376:15431:0;;;;;;1726:66:1;:::i;:::-;6128:21:0;376:15431;6120:62;;376:15431;;;;6120:62;:::i;:::-;6338:60;:29;6297:14;376:15431;6228:31;:29;376:15431;6228:17;376:15431;;;;;;;;;6228:29;376:15431;;-1:-1:-1;;;6228:31:0;;376:15431;;;;;6228:31;;;;;;;376:15431;6228:31;-1:-1:-1;;6228:31:0;;;376:15431;-1:-1:-1;;;;;376:15431:0;;;;;6297:14;:::i;:::-;6338:9;:29;:::i;:::-;6384:12;376:15431;;;6338:60;;:::i;:::-;6408:29;376:15431;;6128:21;376:15431;;6128:21;376:15431;;6408:29;6468:9;6338;6468;;:::i;:::-;376:15431;;;;;;6338:9;376:15431;;;;719:10:10;;6493:47:0;;376:15431;6493:47;376:15431;;6228:31;;;:::i;:::-;;;376:15431;-1:-1:-1;376:15431:0;;-1:-1:-1;;376:15431:0;;;;;5812:12;376:15431;;;;;5904:4;1172:9:2;376:15431:0;;;;;;;;;;5967:9;;2778:39:9;;5886:32:0;;376:15431;5886:32;:::i;:::-;376:15431;;:::i;:::-;-1:-1:-1;5923:3:0;376:15431;;;3306:272:9;2778:39;5967:9:0;;;:::i;:::-;376:15431;;;;;;;5967:9;376:15431;;;;719:10:10;;5992:36:0;;376:15431;;;;;5992:36;376:15431;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;;1511:27:2;376:15431:0;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;376:15431:0;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;1511:27:2;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;-1:-1:-1;719:10:10;;376:15431:0;;;;;1734:7:1;376:15431:0;;;;;;;;1726:66:1;;;:::i;:::-;12154:238:0;;376:15431;12401:140;;376:15431;;;;:::i;:::-;719:10:10;376:15431:0;;719:10:10;376:15431:0;12565:449;;376:15431;;;;;;12565:449;;376:15431;;;12565:449;;;376:15431;;;12565:449;;;376:15431;;12565:449;;376:15431;12565:449;;;376:15431;12565:449;;;376:15431;12565:449;;;376:15431;;;;12565:449;;;376:15431;-1:-1:-1;;;;;376:15431:0;12565:449;;;376:15431;12550:465;;;:::i;:::-;:9;376:15431;13045:20;;;:::i;:::-;13030:36;;;;376:15431;;12401:140;12437:93;12445:29;;;12437:93;:::i;:::-;12401:140;;;12154:238;12298:83;1734:7:1;12214:70:0;:37;:51;:37;;;;;:::i;:::-;:51;:::i;:70::-;12306:19;;12298:83;:::i;:::-;12154:238;;376:15431;;;;;;;-1:-1:-1;;376:15431:0;;;;-1:-1:-1;;;;;376:15431:0;;:::i;:::-;;-1:-1:-1;376:15431:0;10352:16;376:15431;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;-1:-1:-1;;376:15431:0;;;;2225:95;376:15431;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;5618:124;5659:9;5655:81;;5618:124::o;5655:81::-;376:15431;;5659:9;376:15431;;5693:32;376:15431;719:10:10;5693:32:0;;5618:124::o;376:15431::-;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:15431:0;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;11589:2;376:15431;;;;;;11589:2;376:15431;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;13618:1;376:15431;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;376:15431:0;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9839:414::-;9940:15;376:15431;9839:414;;;9958:24;;-1:-1:-1;;;;;376:15431:0;9925:4;1172:9:2;376:15431:0;;;;;;;;;;;9925:4;;9958:24;:::i;:::-;9940:15;376:15431;9993:196;;;;:31;;-1:-1:-1;;;;;376:15431:0;;;9993:31;10155:24;:15;:24;:::i;:::-;376:15431;;-1:-1:-1;;;9993:196:0;;9925:4;9993:196;;;376:15431;;;;;;;;;-1:-1:-1;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9993:196;;;;;;;;;9839:414;9993:196;;9839:414;-1:-1:-1;376:15431:0;;;;;;10236:9;376:15431;;;;719:10:10;;10204:42:0;;376:15431;10204:42;9839:414::o;9993:196::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;376:15431;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;10390:442::-;-1:-1:-1;;;;;376:15431:0;;-1:-1:-1;376:15431:0;;;10500:22;376:15431;;;;;;10536:5;376:15431;;;;;;;;;;10390:442;579:6:9;;376:15431:0;;10769:32;10482:15;;:60;10478:190;;10390:442;-1:-1:-1;;;;;;;376:15431:0;;;;;;10712:23;376:15431;;;;;10712:39;;376:15431;10712:39;:::i;:::-;-1:-1:-1;;;;;376:15431:0;;;;;;;;10712:23;376:15431;;;;;;;;;;10769:32;376:15431;10805:19;376:15431;-1:-1:-1;10769:55:0;10390:442;:::o;10478:190::-;376:15431;;10500:22;376:15431;;10482:15;376:15431;;;;10621:23;376:15431;;;;;;10478:190;;;;376:15431;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;12550:9;376:15431;;;;;;;;;;;12550:9;376:15431;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;376:15431:0;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;12550:9;;376:15431;;;;;;;;;;;;;-1:-1:-1;;;;376:15431:0;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;376:15431:0;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;376:15431:0;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;376:15431:0;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:15431:0;;;;;;-1:-1:-1;;;;;;376:15431:0;;;;;;-1:-1:-1;;;;;376:15431:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;376:15431:0;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;1247:171:11;1304:96;376:15431:0;1313:22:11;;;:::i;1304:96::-;-1:-1:-1;376:15431:0;;;13249:16;376:15431;;;;;;;;719:10:10;376:15431:0;;;;;;;;;-1:-1:-1;;376:15431:0;13295:4;376:15431;;;719:10:10;13314:42:0;-1:-1:-1;;13314:42:0;1247:171:11:o;376:15431:0:-;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;9277:410;;;376:15431;9277:410;9596:84;9277:410;376:15431;9421:38;376:15431;;9469:34;376:15431;;9513:24;376:15431;;9547:34;376:15431;;;;;;;;;;;;;;;;;;9596:84;9277:410::o;9693:140::-;376:15431;9801:25;9693:140;376:15431;;;;9758:28;376:15431;;;;;;9758:28;376:15431;;;;;;9801:25;9693:140::o;14940:547::-;;-1:-1:-1;14940:547:0;15349:39;15099:25;15167:34;14940:547;15099:25;:::i;:::-;376:15431;;;;;;15167:34;;;;376:15431;;;;;;;;15167:34;;15252:69;376:15431;;;;;;;;;;;;;14940:547;376:15431;;;;;15157:45;;15252:69;;;;;;;376:15431;;;;;;;;;;;;15252:69;;;;;;;;;;;;;:::i;:::-;376:15431;15242:80;;376:15431;;;15349:39;;;;376:15431;;;;;;;;;;;;;;;;;;;;;;;;;15349:39;;;;;;;;;;;;14940:547;-1:-1:-1;15349:39:0;1593:8:1;376:15431:0;-1:-1:-1;;;;;376:15431:0;;;;;15402:19;15398:61;;-1:-1:-1;14940:547:0;:::o;15398:61::-;15349:39;15437:11;:::o;15349:39::-;;;:::i;:::-;;;376:15431;;;:::i;:::-;;;15492:313;15618:2;376:15431;;15604:16;376:15431;;15659:140;;;;;;;;;;;;;;;15492:313;:::o;376:15431::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;;;;2506:238:1;-1:-1:-1;;;;;376:15431:0;2580:24:1;;376:15431:0;;2657:21:1;376:15431:0;;-1:-1:-1;;;;;;376:15431:0;;;;;-1:-1:-1;2693:44:1;-1:-1:-1;;2693:44:1;2506:238::o;376:15431:0:-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;7138:1802;;;-1:-1:-1;;;;;7257:68:0;376:15431;;;7265:18;;7257:68;:::i;:::-;376:15431;;7335:64;7343:16;;;7335:64;:::i;:::-;1593:8:1;376:15431:0;7413:15;;-1:-1:-1;;;;;376:15431:0;;;7413:15;;7409:502;;7138:1802;-1:-1:-1;;;;;376:15431:0;;;;;;7937:19;376:15431;;;;;7937:25;;;376:15431;7937:25;:52;;;;7138:1802;7935:55;8003:31;;;376:15431;;;;;;;;8003:25;376:15431;;;;;;;8003:31;:49;;;7138:1802;8003:76;;;7138:1802;8000:934;;;8121:6;;;;8142:47;8121:6;;:::i;:::-;8162:18;376:15431;8142:47;;-1:-1:-1;;;;;376:15431:0;;;8142:47;;;:::i;8000:934::-;8916:6;;8232:42;;;;8000:934;8228:649;8916:6;8228:649;8810:52;8827:35;2778:39:9;8322:29:0;8333:17;376:15431;8322:29;;:::i;2778:39:9:-;8755:37:0;8767:25;376:15431;8685:52;8702:35;8404:36;:27;8415:15;376:15431;8404:27;;:::i;:::-;:36;:::i;:::-;8609:58;8628:39;8554:36;:27;8479:31;:22;8490:10;376:15431;8479:22;;:::i;:31::-;376:15431;8565:15;376:15431;8554:27;;:::i;:36::-;376:15431;8628:16;376:15431;8628:39;:::i;:::-;:16;376:15431;;8609:58;8702:14;376:15431;8702:35;:::i;:::-;:14;376:15431;;8685:52;8767:9;376:15431;8767:25;:::i;:::-;:9;376:15431;;8755:37;8827:14;376:15431;8827:35;:::i;:::-;:14;376:15431;;8810:52;8916:6;:::i;8232:42::-;-1:-1:-1;;;;;;376:15431:0;;;;;;8003:25;376:15431;;;;;8243:31;;;376:15431;8243:31;8232:42;;8003:76;-1:-1:-1;;;;;;376:15431:0;;;;;;8057:18;376:15431;;;;;8056:23;;8057:22;;;376:15431;8057:22;8056:23;;376:15431;8056:23;8003:76;;:49;8038:14;;;;:::i;:::-;8003:49;;7937:52;-1:-1:-1;;;;;;376:15431:0;;;;;;7937:19;376:15431;;;;;7966:23;;;376:15431;7966:23;7937:52;;7409:502;7479:16;376:15431;7854:46;;7479:28;;-1:-1:-1;;;;;376:15431:0;;;7479:28;7854:25;7686:14;376:15431;;;;;;;7479:30;;;;;;;;;;;;;;;;7409:502;7281:1;;;7479:30;;;7409:502;376:15431;7550:13;376:15431;-1:-1:-1;;;;;376:15431:0;;;;;;7550:13;:::i;:::-;7613:17;376:15431;;;;;;7613:29;;-1:-1:-1;;;;;376:15431:0;;;7613:29;376:15431;7479:30;376:15431;;7613:31;;;;;;;;;;;;;7409:502;7281:1;;;7613:31;;;7409:502;376:15431;;;;;;7686:14;:::i;:::-;7761:25;:53;:46;:25;;;;;:::i;:::-;:46;:::i;:::-;7810:4;376:15431;7761:53;;:::i;:::-;719:10:10;376:15431:0;;;;11161:29;376:15431;;;;;7714:100;;:43;376:15431;;;7714:100;:::i;:::-;376:15431;;7854:25;;:::i;:46::-;-1:-1:-1;;;;;376:15431:0;;;;;;7828:16;376:15431;;;;;7828:72;;:22;376:15431;7828:72;376:15431;;7409:502;;7613:31;;;;;;;;;-1:-1:-1;7613:31:0;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;7479:30;7550:13;7479:30;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7479:30:0;;;;;;;:::i;:::-;;;8945:326;9142:62;9221:15;;;:42;;;;9213:51;8945:326;:::o;9221:42::-;9040:66;9240:23;;;;8945:326;:::o;2719:672:2:-;-1:-1:-1;;;;;376:15431:0;;;;;2837:68:2;2845:18;;;2837:68;:::i;:::-;376:15431:0;;2923:16:2;2915:64;2923:16;;;2915:64;:::i;:::-;376:15431:0;2861:1:2;376:15431:0;2861:1:2;376:15431:0;;;2861:1:2;376:15431:0;;3092:21:2;;;;376:15431:0;;3311:26:2;376:15431:0;3190:15:2;998:43:9;3311:26:2;376:15431:0;;;;:::i;998:43:9:-;3190:15:2;376:15431:0;;;;;;1172:9:2;376:15431:0;1172:9:2;376:15431:0;;;1172:9:2;376:15431:0;;;3190:15:2;376:15431:0;3245:13:2;3261:25;:13;;;376:15431:0;;;;;;1172:9:2;376:15431:0;1172:9:2;376:15431:0;;;1172:9:2;376:15431:0;;;3245:13:2;376:15431:0;;;;;;;;;;;;;;3311:26:2;;;;2719:672::o;376:15431:0:-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;4545:370:2;-1:-1:-1;;;;;376:15431:0;;;;4545:370:2;;4676:19;;376:15431:0;;;;4754:21:2;;;376:15431:0;;4825:18:2;:27;4876:32;4825:18;;4876:32;4825:18;376:15431:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;467:176:9;10175:3:0;376:15431;;;;;;;;467:176:9;579:6;;376:15431:0;;467:176:9;:::o;376:15431:0:-;;;:::i;:::-;;;467:176:9;10749:1:0;376:15431;;;;;;;;579:6:9;;376:15431:0;;467:176:9;:::o;:::-;;376:15431:0;;;;;;;;579:6:9;;376:15431:0;;467:176:9;:::o;376:15431:0:-;;;;;;;:::i;:::-;;;;;;;;;:::o;1339:187:9:-;;1452:6;;;376:15431:0;;;;;;;;;;1339:187:9;:::o;376:15431:0:-;;;:::i;:::-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;:::i;:::-;;;;1773:459:9;2072:6;;2068:45;;5915:2:0;2158:5:9;376:15431:0;;;;;;;;;;;2158:5:9;;:::i;:::-;:10;376:15431:0;;1773:459:9;:::o;376:15431:0:-;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:15431:0;;;;;;;;;;:::i;:::-;;;2068:45:9;2094:8;2077:1;2094:8;:::o;1773:459::-;;2072:6;;2068:45;;2158:5;2135;;;;:::i;:::-;2158;;;:::i;2068:45::-;2094:8;;2077:1;2094:8;:::o;376:15431:0:-;;;;;;;:::i;:::-;;;;;;;;;:::o;2694:130:9:-;8356:3:0;2694:130:9;376:15431:0;;:::i;:::-;;;2694:130:9;:::o",
  "source": "// SPDX-License-Identifier: MIT\n// SwishFish Contract (SwishFishToken.sol)\n\npragma solidity 0.8.17;\n\nimport \"./contracts/ERC20.sol\";\nimport \"./access/Ownable.sol\";\nimport \"./interfaces/IUniswapV2Factory.sol\";\nimport \"./interfaces/IUniswapV2Router02.sol\";\nimport \"./interfaces/IUniswapV2Pair.sol\";\n\n/**\n * @title SwishFish Contract for SwishFish Token\n * @author HeisenDev\n */\ncontract SwishFish is ERC20, Ownable {\n    using SafeMath for uint256;\n    IUniswapV2Router02 public uniswapV2Router;\n    IUniswapV2Pair public uniswapV2PairHSF;\n    IUniswapV2Pair public uniswapV2PairBUSD;\n\n    /**\n     * Definition of the token parameters\n     */\n    uint private _tokenTotalSupply = 100000000 * 10 ** 18;\n\n    bool public salesEnabled = false;\n    bool private firstLiquidityEnabled = true;\n\n    /**\n     * Definition Withdrawals params\n     * `_totalInvestment` Corresponds to the total investment\n     * `_accountWithdrawalLast` Corresponds to date of the last withdraw\n     * `_accountWithdrawalCount` Corresponds to the count of withdrawals in the last 24 hours\n     * `_maxTransactionWithdrawAmount` Corresponds to the amount of claim based on deposits\n     * `_roi` min days to get Return Of Investment\n     * `_maxWithdrawalCount` Max Withdrawals per day\n     */\n    mapping(address => uint256) private _totalInvestment;\n    mapping(address => uint256) private _accountWithdrawalLast;\n    mapping(address => uint256) private _accountWithdrawalCount;\n    mapping(address => uint256) public _maxTransactionWithdrawAmount;\n    address public paymentToken = 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56;\n    uint256 private _roi = 20;\n    uint256 private _maxWithdrawalCount = 1;\n    address [] public _players;\n\n\n    /**\n     * Definition of the Project Wallets\n     * `addressHeisenverse` Corresponds to the wallet address where the development\n     * team will receive their payments\n     * `addressMarketing` Corresponds to the wallet address where the funds\n     * for marketing will be received\n     * `addressTeam` Represents the wallet where teams and other\n     * collaborators will receive their payments\n     */\n    address payable public addressPriceKeeper = payable(0x34390458758b6eFaAC5680fBEAb8DE17F2951Ad0);\n    address payable public addressHeisenverse = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338);\n    address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61);\n    address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B);\n\n    /**\n     * Definition of the taxes fees for swaps\n     * `taxFeeHeisenverse` 2%  Initial tax fee during presale\n     * `taxFeeMarketing` 3%  Initial tax fee during presale\n     * `taxFeeTeam` 3%  Initial tax fee during presale\n     * `taxFeeLiquidity` 2%  Initial tax fee during presale\n     * This value can be modified by the method {updateTaxesFees}\n     */\n    uint256 public taxFeeHeisenverse = 2;\n    uint256 public taxFeeMarketing = 3;\n    uint256 public taxFeeTeam = 3;\n    uint256 public taxFeeLiquidity = 2;\n\n    /**\n     * Definition of pools\n     * `_poolHeisenverse`\n     * `_poolMarketing`\n     * `_poolTeam`\n     * `_poolLiquidity`\n     */\n    uint256 public _poolHeisenverse = 0;\n    uint256 public _poolMarketing = 0;\n    uint256 public _poolTeam = 0;\n    uint256 public _poolLiquidity = 0;\n\n    mapping(address => bool) private _isExcludedFromFees;\n    mapping(address => bool) private _isAllowedContract;\n    mapping(address => bool) private automatedMarketMakerPairs;\n\n    event Deposit(address indexed sender, uint amount);\n    event Buy(address indexed sender, uint amount, uint eth);\n    event SalesState(bool status);\n    event Withdraw(address indexed sender, uint amount);\n    event TeamPayment(uint amount);\n    event FirstLiquidity(address indexed sender, uint amount, uint256 bnb);\n    event Liquidity(address indexed sender, uint amount, uint256 bnb);\n    event UpdateTaxesFees(\n        uint256 taxFeeHeisenverse,\n        uint256 taxFeeMarketing,\n        uint256 taxFeeTeam,\n        uint256 taxFeeLiquidity\n    );\n    constructor(address _owner1, address _owner2, address _owner3, address _backend) {\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\n        .createPair(address(this), _uniswapV2Router.WETH());\n\n        uniswapV2Router = _uniswapV2Router;\n        uniswapV2PairHSF = IUniswapV2Pair(_uniswapV2Pair);\n        uniswapV2PairBUSD = IUniswapV2Pair(0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16);\n\n        automatedMarketMakerPairs[_uniswapV2Pair] = true;\n        _isAllowedContract[_uniswapV2Pair] = true;\n        _isExcludedFromFees[address(this)] = true;\n        _isExcludedFromFees[addressHeisenverse] = true;\n        _isExcludedFromFees[addressMarketing] = true;\n        _isExcludedFromFees[addressTeam] = true;\n\n        /*\n            _setOwners is an internal function in Ownable.sol that is only called here,\n            and CANNOT be called ever again\n        */\n        _addOwner(_owner1);\n        _addOwner(_owner2);\n        _addOwner(_owner3);\n        /*\n            _transferBackend is an internal function in Ownable.sol\n        */\n        _transferBackend(_backend);\n        /*\n            _mint is an internal function in ERC20.sol that is only called here,\n            and CANNOT be called ever again\n        */\n        _mint(address(this), (_tokenTotalSupply * 95 / 100));\n        _mint(addressPriceKeeper, _tokenTotalSupply * 5 / 100);\n    }\n\n    /// @dev Fallback function allows to deposit ether.\n    receive() external payable {\n        if (msg.value > 0) {\n            emit Deposit(_msgSender(), msg.value);\n        }\n    }\n\n    function buy(uint256 amount) external payable {\n        require(salesEnabled, \"Presale isn't enabled\");\n        uint256 liquidityTokens = balanceOf(address(this)).mul(10).div(100);\n        addLiquidity(liquidityTokens, msg.value);\n        emit Buy(_msgSender(), amount, msg.value);\n    }\n    function firstLiquidity(uint256 priceWei_) external payable onlyOwner {\n        require(firstLiquidityEnabled, \"First liquidity was executed\");\n        (uint256 _bnb1, uint256 _busd1, ) = uniswapV2PairBUSD.getReserves();\n        uint256 price_bnb_to_busd = _busd1 / _bnb1;\n        uint256 tokens = msg.value * price_bnb_to_busd / (priceWei_ / (1 * 10 ** 18));\n        firstLiquidityEnabled = false;\n        addLiquidity(tokens, msg.value);\n        emit FirstLiquidity(_msgSender(), tokens, msg.value);\n    }\n    function teamPayment() external onlyOwner {\n        super._transfer(address(this), addressHeisenverse, _poolHeisenverse);\n        super._transfer(address(this), addressMarketing, _poolMarketing);\n        super._transfer(address(this), addressTeam, _poolTeam);\n        uint256 amount = _poolHeisenverse + _poolMarketing + _poolTeam;\n        _poolHeisenverse = 0;\n        _poolMarketing = 0;\n        _poolTeam = 0;\n        (bool sent, ) = addressHeisenverse.call{value: address(this).balance}(\"\");\n        require(sent, \"Failed to send BNB\");\n        emit TeamPayment(amount);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        if (to == backend()) {\n            (uint256 _hsf0, uint256 _bnb0, ) = uniswapV2PairHSF.getReserves();\n            uint256 price_hsf_to_bnb = _bnb0 / _hsf0;\n            (uint256 _bnb1, uint256 _busd1, ) = uniswapV2PairBUSD.getReserves();\n            uint256 price_bnb_to_busd = _busd1 / _bnb1;\n            _maxTransactionWithdrawAmount[_msgSender()] += amount * price_hsf_to_bnb  * price_bnb_to_busd / _roi;\n            _totalInvestment[from] += amount * price_hsf_to_bnb  * price_bnb_to_busd;\n        }\n        bool takeFee = !(_isExcludedFromFees[from] || _isExcludedFromFees[to]);\n        if(automatedMarketMakerPairs[from] && isContract(to) && !_isAllowedContract[to]) {\n            super._transfer(from, to, amount);\n            super._transfer(to, addressPriceKeeper, amount);\n        }\n        else {\n            if (takeFee && automatedMarketMakerPairs[from]) {\n                uint256 heisenverseAmount = amount.mul(taxFeeHeisenverse).div(100);\n                uint256 marketingAmount = amount.mul(taxFeeMarketing).div(100);\n                uint256 teamAmount = amount.mul(taxFeeTeam).div(100);\n                uint256 liquidityAmount = amount.mul(taxFeeLiquidity).div(100);\n\n                _poolHeisenverse = _poolHeisenverse.add(heisenverseAmount);\n                _poolMarketing = _poolMarketing.add(marketingAmount);\n                _poolTeam = _poolTeam.add(teamAmount);\n                _poolLiquidity = _poolLiquidity.add(liquidityAmount);\n            }\n            super._transfer(from, to, amount);\n        }\n    }\n    function isContract(address addr) internal view returns (bool) {\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        bytes32 codeHash;\n        assembly {\n            codeHash := extcodehash(addr)\n        }\n        return (codeHash != 0x0 && codeHash != accountHash);\n    }\n\n    function updateTaxesFees(uint256 _heisenVerseTaxFee, uint256 _marketingTaxFee, uint256 _teamTaxFee, uint256 _liquidityTaxFee) private {\n        taxFeeHeisenverse = _heisenVerseTaxFee;\n        taxFeeMarketing = _marketingTaxFee;\n        taxFeeTeam = _teamTaxFee;\n        taxFeeLiquidity = _liquidityTaxFee;\n        emit UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee);\n    }\n\n    function updateSalesStatus(bool _salesEnabled) private {\n        salesEnabled = _salesEnabled;\n        emit SalesState(_salesEnabled);\n    }\n\n    function addLiquidity(uint256 tokens, uint256 bnb) private {\n        _approve(address(this), address(uniswapV2Router), balanceOf(address(this)));\n        uniswapV2Router.addLiquidityETH{value : bnb}(\n            address(this),\n            tokens,\n            0,\n            0,\n            address(this),\n            block.timestamp.add(300)\n        );\n        emit Liquidity(_msgSender(), tokens, msg.value);\n    }\n\n    function withdrawAllowance(address account) external view returns (uint256) {\n        return _totalInvestment[account];\n    }\n\n    function isUnderDailyWithdrawalLimit(address account) internal returns (bool) {\n        if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {\n            _accountWithdrawalLast[account] = block.timestamp;\n            _accountWithdrawalCount[account] = 0;\n        }\n        _accountWithdrawalCount[account] = _accountWithdrawalCount[account].add(1);\n        return (_accountWithdrawalCount[account] <= _maxWithdrawalCount);\n    }\n\n    function withdraw(bytes memory signature, uint256 amount, uint256 timestamp) external payable {\n        require(isClaimAuthorized(signature, amount, timestamp), \"Withdraw: Not authorized\");\n        require(isUnderDailyWithdrawalLimit(_msgSender()), \"Withdraw: You cannot make more than one withdrawal per day\");\n        if(_maxTransactionWithdrawAmount[_msgSender()] == 0) {\n            _maxTransactionWithdrawAmount[_msgSender()] = 30 ether;\n        }\n        require(_maxTransactionWithdrawAmount[_msgSender()] > amount, \"Withdraw: User hasn't required allowance\");\n\n        (uint256 _bnb1, uint256 _busd1, ) = uniswapV2PairBUSD.getReserves();\n        uint256 price_bnb_to_busd = _busd1 / _bnb1;\n        uint256 tax =  amount / (price_bnb_to_busd * 10);\n        require(msg.value > tax, \"Withdraw: Require Tax 10% \");\n        IERC20 payment = IERC20(paymentToken);\n        payment.transfer(_msgSender(), amount);\n        emit Withdraw(_msgSender(), amount);\n    }\n\n    function submitProposal(\n        bool _updateEggSales,\n        bool _salesEnabled,\n        bool _updateTaxesFees,\n        uint256 _heisenVerseTaxFee,\n        uint256 _marketingTaxFee,\n        uint256 _teamTaxFee,\n        uint256 _liquidityTaxFee,\n        bool _transferBackend,\n        address _backendAddress\n    ) external onlyOwner {\n        if (_updateTaxesFees) {\n            uint256 sellTotalFees = _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee;\n            require(sellTotalFees <= 10, \"MultiSignatureWallet: Must keep fees at 10% or less\");\n        }\n        if (_transferBackend) {\n            require(_backendAddress != address(0), \"MultiSignatureWallet: new owner is the zero address\");\n        }\n        proposals.push(Proposal({\n        author: _msgSender(),\n        executed: false,\n        updateSalesStatus: _updateEggSales,\n        salesEnabled: _salesEnabled,\n        updateTaxesFees: _updateTaxesFees,\n        heisenVerseTaxFee: _heisenVerseTaxFee,\n        marketingTaxFee: _marketingTaxFee,\n        teamTaxFee: _teamTaxFee,\n        liquidityTaxFee: _liquidityTaxFee,\n        transferBackend: _transferBackend,\n        backendAddress: _backendAddress\n        }));\n        emit SubmitProposal(proposals.length - 1);\n    }\n\n    function approveProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotApproved(_proposalId) proposalNotExecuted(_proposalId)\n    {\n        proposalApproved[_proposalId][_msgSender()] = true;\n        emit ApproveProposal(_msgSender(), _proposalId);\n    }\n\n    function _getApprovalCount(uint _proposalId) private view returns (uint256) {\n        uint256 count = 0;\n        for (uint i; i < requiredConfirmations(); i++) {\n            if (proposalApproved[_proposalId][getOwner(i)]) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    function executeProposal(uint _proposalId) external proposalExists(_proposalId) proposalNotExecuted(_proposalId) {\n        require(_getApprovalCount(_proposalId) >= requiredConfirmations(), \"MultiSignatureWallet: approvals is less than required\");\n        Proposal storage proposal = proposals[_proposalId];\n        proposal.executed = true;\n        if (proposal.updateSalesStatus) {\n            updateSalesStatus(proposal.salesEnabled);\n        }\n        if (proposal.updateTaxesFees) {\n            updateTaxesFees(proposal.heisenVerseTaxFee ,proposal.marketingTaxFee ,proposal.teamTaxFee ,proposal.liquidityTaxFee);\n        }\n        if (proposal.transferBackend) {\n            _transferBackend(proposal.backendAddress);\n        }\n    }\n    function allowContract(address contractAddress_, bool allowed_) external onlyOwner{\n        _isAllowedContract[contractAddress_] = allowed_;\n    }\n    function revokeProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotExecuted(_proposalId)\n    {\n        require(proposalApproved[_proposalId][_msgSender()], \"MultiSignatureWallet: Proposal is not approved\");\n        proposalApproved[_proposalId][_msgSender()] = false;\n        emit RevokeProposal(_msgSender(), _proposalId);\n    }\n\n    function isClaimAuthorized(bytes memory signature, uint256 amount, uint256 timestamp) internal view returns (bool) {\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(signature);\n        bytes32 base_message = keccak256(abi.encodePacked(amount,timestamp));\n        bytes32 prefixedHashMessage = keccak256(abi.encodePacked( \"\\x19Ethereum Signed Message:\\n32\" , base_message ));\n        address signer = ecrecover(prefixedHashMessage, v, r, s);\n        if (signer == backend()) {\n            return true;\n        }\n        return false;\n    }\n    function splitSignature(bytes memory sig) public pure returns (bytes32 r, bytes32 s, uint8 v) {\n        require(sig.length == 65, \"invalid signature length\");\n        assembly {\n            r := mload(add(sig, 32))\n            s := mload(add(sig, 64))\n            v := byte(0, mload(add(sig, 96)))\n        }\n    }\n}\n",
  "sourcePath": "/Users/ivanvalenzuela/WebstormProjects/swishfish-contract/contracts/SwishFishToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/SwishFishToken.sol",
    "exportedSymbols": {
      "Context": [
        3198
      ],
      "ERC20": [
        2176
      ],
      "IERC20": [
        2254
      ],
      "IERC20Metadata": [
        2279
      ],
      "IUniswapV2Factory": [
        2342
      ],
      "IUniswapV2Pair": [
        2584
      ],
      "IUniswapV2Router01": [
        2892
      ],
      "IUniswapV2Router02": [
        2980
      ],
      "MultiSignature": [
        3306
      ],
      "Ownable": [
        1586
      ],
      "SafeMath": [
        3176
      ],
      "SwishFish": [
        1383
      ]
    },
    "id": 1384,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "76:23:0"
      },
      {
        "absolutePath": "project:/contracts/contracts/ERC20.sol",
        "file": "./contracts/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 2177,
        "src": "101:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/access/Ownable.sol",
        "file": "./access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 1587,
        "src": "133:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "./interfaces/IUniswapV2Factory.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 2343,
        "src": "164:44:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUniswapV2Router02.sol",
        "file": "./interfaces/IUniswapV2Router02.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 2981,
        "src": "209:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUniswapV2Pair.sol",
        "file": "./interfaces/IUniswapV2Pair.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 2585,
        "src": "255:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ERC20",
              "nameLocations": [
                "398:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2176,
              "src": "398:5:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "398:5:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nameLocations": [
                "405:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1586,
              "src": "405:7:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "405:7:0"
          }
        ],
        "canonicalName": "SwishFish",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "298:77:0",
          "text": " @title SwishFish Contract for SwishFish Token\n @author HeisenDev"
        },
        "fullyImplemented": true,
        "id": 1383,
        "linearizedBaseContracts": [
          1383,
          1586,
          3306,
          2176,
          2279,
          2254,
          3198
        ],
        "name": "SwishFish",
        "nameLocation": "385:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 14,
            "libraryName": {
              "id": 12,
              "name": "SafeMath",
              "nameLocations": [
                "425:8:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3176,
              "src": "425:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "419:27:0",
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "438:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1694505e",
            "id": 17,
            "mutability": "mutable",
            "name": "uniswapV2Router",
            "nameLocation": "477:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "451:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IUniswapV2Router02",
                "nameLocations": [
                  "451:18:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2980,
                "src": "451:18:0"
              },
              "referencedDeclaration": 2980,
              "src": "451:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cfe4f26c",
            "id": 20,
            "mutability": "mutable",
            "name": "uniswapV2PairHSF",
            "nameLocation": "520:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "498:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
              "typeString": "contract IUniswapV2Pair"
            },
            "typeName": {
              "id": 19,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18,
                "name": "IUniswapV2Pair",
                "nameLocations": [
                  "498:14:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2584,
                "src": "498:14:0"
              },
              "referencedDeclaration": 2584,
              "src": "498:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                "typeString": "contract IUniswapV2Pair"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6b3be2a8",
            "id": 23,
            "mutability": "mutable",
            "name": "uniswapV2PairBUSD",
            "nameLocation": "564:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "542:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
              "typeString": "contract IUniswapV2Pair"
            },
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "IUniswapV2Pair",
                "nameLocations": [
                  "542:14:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2584,
                "src": "542:14:0"
              },
              "referencedDeclaration": 2584,
              "src": "542:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                "typeString": "contract IUniswapV2Pair"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 24,
              "nodeType": "StructuredDocumentation",
              "src": "588:53:0",
              "text": " Definition of the token parameters"
            },
            "id": 31,
            "mutability": "mutable",
            "name": "_tokenTotalSupply",
            "nameLocation": "659:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "646:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "646:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              },
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030303030303030",
                "id": 26,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "679:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "value": "100000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 29,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 27,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "691:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "697:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "691:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "679:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c84ad9a5",
            "id": 34,
            "mutability": "mutable",
            "name": "salesEnabled",
            "nameLocation": "718:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "706:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 32,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "706:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "733:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "firstLiquidityEnabled",
            "nameLocation": "757:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "744:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 35,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "744:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "781:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "792:473:0",
              "text": " Definition Withdrawals params\n `_totalInvestment` Corresponds to the total investment\n `_accountWithdrawalLast` Corresponds to date of the last withdraw\n `_accountWithdrawalCount` Corresponds to the count of withdrawals in the last 24 hours\n `_maxTransactionWithdrawAmount` Corresponds to the amount of claim based on deposits\n `_roi` min days to get Return Of Investment\n `_maxWithdrawalCount` Max Withdrawals per day"
            },
            "id": 42,
            "mutability": "mutable",
            "name": "_totalInvestment",
            "nameLocation": "1306:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1270:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1278:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1270:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 40,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1289:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "mutable",
            "name": "_accountWithdrawalLast",
            "nameLocation": "1364:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1328:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 45,
              "keyType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1336:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1328:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 44,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1347:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "_accountWithdrawalCount",
            "nameLocation": "1428:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1392:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1400:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1392:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 48,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1411:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "75a42f55",
            "id": 54,
            "mutability": "mutable",
            "name": "_maxTransactionWithdrawAmount",
            "nameLocation": "1492:29:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1457:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1465:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1457:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1476:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3013ce29",
            "id": 57,
            "mutability": "mutable",
            "name": "paymentToken",
            "nameLocation": "1542:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1527:72:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1527:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307865396537434541334465646341353938343738304261666335393962443639414464303837443536",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1557:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "_roi",
            "nameLocation": "1621:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1605:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1605:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1628:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "_maxWithdrawalCount",
            "nameLocation": "1652:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1636:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1636:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1674:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "41587823",
            "id": 66,
            "mutability": "mutable",
            "name": "_players",
            "nameLocation": "1699:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "1681:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 64,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1681:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 65,
              "nodeType": "ArrayTypeName",
              "src": "1681:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "1715:404:0",
              "text": " Definition of the Project Wallets\n `addressHeisenverse` Corresponds to the wallet address where the development\n team will receive their payments\n `addressMarketing` Corresponds to the wallet address where the funds\n for marketing will be received\n `addressTeam` Represents the wallet where teams and other\n collaborators will receive their payments"
            },
            "functionSelector": "1234dee8",
            "id": 73,
            "mutability": "mutable",
            "name": "addressPriceKeeper",
            "nameLocation": "2147:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2124:95:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 68,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2124:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343339303435383735386236654661414335363830664245416238444531374632393531416430",
                  "id": 71,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2176:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x34390458758b6eFaAC5680fBEAb8DE17F2951Ad0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 70,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2168:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 69,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2168:8:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2168:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffb3a3a6",
            "id": 79,
            "mutability": "mutable",
            "name": "addressHeisenverse",
            "nameLocation": "2248:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2225:95:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 74,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2225:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845446137333430396434624244313437663445313239354137336132436132343361353239333338",
                  "id": 77,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2277:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xEDa73409d4bBD147f4E1295A73a2Ca243a529338"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 76,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2269:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 75,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2269:8:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 78,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2269:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0abdc640",
            "id": 85,
            "mutability": "mutable",
            "name": "addressMarketing",
            "nameLocation": "2349:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2326:93:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 80,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2326:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833633143643833443838353038303343396334326646353038334635366236366230304642443631",
                  "id": 83,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2376:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 82,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2368:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2368:8:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 84,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2368:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "562e9df9",
            "id": 91,
            "mutability": "mutable",
            "name": "addressTeam",
            "nameLocation": "2448:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2425:88:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 86,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2425:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836333032346143373346453737343237463230653832343746413236463437304330443937303042",
                  "id": 89,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2470:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x63024aC73FE77427F20e8247FA26F470C0D9700B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 88,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2462:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 87,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2462:8:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 90,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2462:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "2520:360:0",
              "text": " Definition of the taxes fees for swaps\n `taxFeeHeisenverse` 2%  Initial tax fee during presale\n `taxFeeMarketing` 3%  Initial tax fee during presale\n `taxFeeTeam` 3%  Initial tax fee during presale\n `taxFeeLiquidity` 2%  Initial tax fee during presale\n This value can be modified by the method {updateTaxesFees}"
            },
            "functionSelector": "9e5cd74a",
            "id": 95,
            "mutability": "mutable",
            "name": "taxFeeHeisenverse",
            "nameLocation": "2900:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2885:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 93,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2885:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 94,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2920:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7d81936c",
            "id": 98,
            "mutability": "mutable",
            "name": "taxFeeMarketing",
            "nameLocation": "2942:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2927:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 96,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2927:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 97,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2960:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6bba0ae",
            "id": 101,
            "mutability": "mutable",
            "name": "taxFeeTeam",
            "nameLocation": "2982:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "2967:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2967:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 100,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2995:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "933f5e07",
            "id": 104,
            "mutability": "mutable",
            "name": "taxFeeLiquidity",
            "nameLocation": "3017:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3002:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3002:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3035:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 105,
              "nodeType": "StructuredDocumentation",
              "src": "3043:131:0",
              "text": " Definition of pools\n `_poolHeisenverse`\n `_poolMarketing`\n `_poolTeam`\n `_poolLiquidity`"
            },
            "functionSelector": "a990c729",
            "id": 108,
            "mutability": "mutable",
            "name": "_poolHeisenverse",
            "nameLocation": "3194:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3179:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3179:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 107,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3213:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1b45a47a",
            "id": 111,
            "mutability": "mutable",
            "name": "_poolMarketing",
            "nameLocation": "3235:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3220:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3220:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 110,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3252:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "553000c1",
            "id": 114,
            "mutability": "mutable",
            "name": "_poolTeam",
            "nameLocation": "3274:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3259:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3259:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3286:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2a9af7ba",
            "id": 117,
            "mutability": "mutable",
            "name": "_poolLiquidity",
            "nameLocation": "3308:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3293:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 115,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3293:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3325:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 121,
            "mutability": "mutable",
            "name": "_isExcludedFromFees",
            "nameLocation": "3366:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3333:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 120,
              "keyType": {
                "id": 118,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3341:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3333:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 119,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3352:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 125,
            "mutability": "mutable",
            "name": "_isAllowedContract",
            "nameLocation": "3424:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3391:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 124,
              "keyType": {
                "id": 122,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3399:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3391:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 123,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3410:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 129,
            "mutability": "mutable",
            "name": "automatedMarketMakerPairs",
            "nameLocation": "3481:25:0",
            "nodeType": "VariableDeclaration",
            "scope": 1383,
            "src": "3448:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 128,
              "keyType": {
                "id": 126,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3456:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3448:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 127,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3467:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
            "id": 135,
            "name": "Deposit",
            "nameLocation": "3519:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3543:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "3527:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3527:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3556:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "3551:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3526:37:0"
            },
            "src": "3513:51:0"
          },
          {
            "anonymous": false,
            "eventSelector": "1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed",
            "id": 143,
            "name": "Buy",
            "nameLocation": "3575:3:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3595:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "3579:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3579:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3608:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "3603:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "eth",
                  "nameLocation": "3621:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "3616:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3578:47:0"
            },
            "src": "3569:57:0"
          },
          {
            "anonymous": false,
            "eventSelector": "01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604",
            "id": 147,
            "name": "SalesState",
            "nameLocation": "3637:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "3653:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "3648:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:13:0"
            },
            "src": "3631:30:0"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 153,
            "name": "Withdraw",
            "nameLocation": "3672:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3697:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "3681:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3710:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "3705:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3680:37:0"
            },
            "src": "3666:52:0"
          },
          {
            "anonymous": false,
            "eventSelector": "21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff",
            "id": 157,
            "name": "TeamPayment",
            "nameLocation": "3729:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3746:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3741:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3741:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3740:13:0"
            },
            "src": "3723:31:0"
          },
          {
            "anonymous": false,
            "eventSelector": "1b975f707de5a6cdb5179622fe20b69e78f03587622408bed94b618299045aa9",
            "id": 165,
            "name": "FirstLiquidity",
            "nameLocation": "3765:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3796:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3780:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3780:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3809:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3804:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3804:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bnb",
                  "nameLocation": "3825:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3817:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3779:50:0"
            },
            "src": "3759:71:0"
          },
          {
            "anonymous": false,
            "eventSelector": "7c300dc57e5d90ec9510fe63dee9156c75c1f20562adae3076248b0c1b27e90c",
            "id": 173,
            "name": "Liquidity",
            "nameLocation": "3841:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3867:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3851:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3880:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3875:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3875:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bnb",
                  "nameLocation": "3896:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3888:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3850:50:0"
            },
            "src": "3835:66:0"
          },
          {
            "anonymous": false,
            "eventSelector": "ac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee9",
            "id": 183,
            "name": "UpdateTaxesFees",
            "nameLocation": "3912:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taxFeeHeisenverse",
                  "nameLocation": "3945:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "3937:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3937:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taxFeeMarketing",
                  "nameLocation": "3980:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "3972:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3972:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taxFeeTeam",
                  "nameLocation": "4013:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "4005:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taxFeeLiquidity",
                  "nameLocation": "4041:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "4033:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3927:135:0"
            },
            "src": "3906:157:0"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "4149:1407:0",
              "statements": [
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "_uniswapV2Router",
                      "nameLocation": "4178:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "4159:35:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                        "typeString": "contract IUniswapV2Router02"
                      },
                      "typeName": {
                        "id": 195,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 194,
                          "name": "IUniswapV2Router02",
                          "nameLocations": [
                            "4159:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2980,
                          "src": "4159:18:0"
                        },
                        "referencedDeclaration": 2980,
                        "src": "4159:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4216:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 197,
                      "name": "IUniswapV2Router02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2980,
                      "src": "4197:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2980_$",
                        "typeString": "type(contract IUniswapV2Router02)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4159:100:0"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "_uniswapV2Pair",
                      "nameLocation": "4277:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "4269:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4269:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 217,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 211,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4368:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4360:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4360:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4360:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 213,
                            "name": "_uniswapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "4375:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4392:4:0",
                          "memberName": "WETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2596,
                          "src": "4375:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                            "typeString": "function () pure external returns (address)"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4375:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 204,
                                "name": "_uniswapV2Router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "4312:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              },
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4329:7:0",
                              "memberName": "factory",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2591,
                              "src": "4312:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4312:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 203,
                          "name": "IUniswapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "4294:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$2342_$",
                            "typeString": "type(contract IUniswapV2Factory)"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4294:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Factory_$2342",
                          "typeString": "contract IUniswapV2Factory"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4349:10:0",
                      "memberName": "createPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2331,
                      "src": "4294:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4269:130:0"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 218,
                      "name": "uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "4410:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 219,
                      "name": "_uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "4428:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "4410:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "4410:34:0"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "uniswapV2PairHSF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "4454:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 224,
                          "name": "_uniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "4488:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 223,
                        "name": "IUniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "4473:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2584_$",
                          "typeString": "type(contract IUniswapV2Pair)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4473:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "src": "4454:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4454:49:0"
                },
                {
                  "expression": {
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 228,
                      "name": "uniswapV2PairBUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4513:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307835384638373638353761303244363736324530313031626235433436413863314544343444633136",
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4548:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 229,
                        "name": "IUniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "4533:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2584_$",
                          "typeString": "type(contract IUniswapV2Pair)"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4533:58:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "src": "4513:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:78:0"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 234,
                        "name": "automatedMarketMakerPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "4602:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 236,
                      "indexExpression": {
                        "id": 235,
                        "name": "_uniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4628:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4602:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4646:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4602:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:48:0"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 240,
                        "name": "_isAllowedContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "4660:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "id": 241,
                        "name": "_uniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4679:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4660:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4697:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4660:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:41:0"
                },
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 246,
                        "name": "_isExcludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4711:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 251,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 249,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4739:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4731:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4731:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4711:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4748:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4711:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "4711:41:0"
                },
                {
                  "expression": {
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 255,
                        "name": "_isExcludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4762:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 257,
                      "indexExpression": {
                        "id": 256,
                        "name": "addressHeisenverse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "4782:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4762:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4804:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4762:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "4762:46:0"
                },
                {
                  "expression": {
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 261,
                        "name": "_isExcludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4818:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 263,
                      "indexExpression": {
                        "id": 262,
                        "name": "addressMarketing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "4838:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4818:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4858:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4818:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "4818:44:0"
                },
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 267,
                        "name": "_isExcludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4872:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "id": 268,
                        "name": "addressTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "4892:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4872:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4907:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4872:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "4872:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 274,
                        "name": "_owner1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "5086:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 273,
                      "name": "_addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "5076:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5076:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "5076:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 278,
                        "name": "_owner2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "5114:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 277,
                      "name": "_addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "5104:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5104:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "5104:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 282,
                        "name": "_owner3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "5142:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 281,
                      "name": "_addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "5132:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_backend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "5267:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "_transferBackend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1540,
                      "src": "5250:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5250:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "5250:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 292,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5447:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5439:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5439:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5439:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 294,
                                "name": "_tokenTotalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5455:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3935",
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5475:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_95_by_1",
                                  "typeString": "int_const 95"
                                },
                                "value": "95"
                              },
                              "src": "5455:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5480:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5455:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 299,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5454:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5433:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5433:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "5433:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 303,
                        "name": "addressPriceKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "5501:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 304,
                            "name": "_tokenTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "5521:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5541:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "5521:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5545:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5521:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 302,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5495:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5495:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "5495:54:0"
                }
              ]
            },
            "id": 312,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_owner1",
                  "nameLocation": "4088:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4080:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_owner2",
                  "nameLocation": "4105:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4097:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "_owner3",
                  "nameLocation": "4122:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4114:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_backend",
                  "nameLocation": "4139:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4131:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4131:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4079:69:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4149:0:0"
            },
            "scope": 1383,
            "src": "4068:1488:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "5645:97:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 316,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5659:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5663:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "5659:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5671:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5659:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 328,
                  "nodeType": "IfStatement",
                  "src": "5655:81:0",
                  "trueBody": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "5674:62:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 321,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3188,
                                "src": "5701:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5701:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 323,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5715:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5719:5:0",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5715:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 320,
                            "name": "Deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "5693:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5693:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 326,
                        "nodeType": "EmitStatement",
                        "src": "5688:37:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 313,
              "nodeType": "StructuredDocumentation",
              "src": "5562:51:0",
              "text": "@dev Fallback function allows to deposit ether."
            },
            "id": 330,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5625:2:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:0:0"
            },
            "scope": 1383,
            "src": "5618:124:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "5794:241:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 336,
                        "name": "salesEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "5812:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726573616c652069736e277420656e61626c6564",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5826:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
                          "typeString": "literal_string \"Presale isn't enabled\""
                        },
                        "value": "Presale isn't enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
                          "typeString": "literal_string \"Presale isn't enabled\""
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5804:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5804:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "5804:46:0"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "liquidityTokens",
                      "nameLocation": "5868:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 369,
                      "src": "5860:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5860:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5923:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5915:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 345,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "5904:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SwishFish_$1383",
                                      "typeString": "contract SwishFish"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwishFish_$1383",
                                      "typeString": "contract SwishFish"
                                    }
                                  ],
                                  "id": 344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5896:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 343,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5896:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5896:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 342,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1678,
                              "src": "5886:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5886:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5911:3:0",
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3089,
                          "src": "5886:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5886:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5919:3:0",
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "5886:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5886:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5860:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 356,
                        "name": "liquidityTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5950:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 357,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5967:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5971:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5967:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 355,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "5937:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5937:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 362,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "5996:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5996:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 364,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "6010:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6018:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6022:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6018:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 361,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "5992:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5992:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "EmitStatement",
                  "src": "5987:41:0"
                }
              ]
            },
            "functionSelector": "d96a094a",
            "id": 370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "5757:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5769:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "5761:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5760:16:0"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5794:0:0"
            },
            "scope": 1383,
            "src": "5748:287:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "6110:437:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 378,
                        "name": "firstLiquidityEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "6128:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4669727374206c697175696469747920776173206578656375746564",
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6151:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4baf82efaafb7735f1569625dd050e029a97b0691f3025bd52591138bbd505a5",
                          "typeString": "literal_string \"First liquidity was executed\""
                        },
                        "value": "First liquidity was executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4baf82efaafb7735f1569625dd050e029a97b0691f3025bd52591138bbd505a5",
                          "typeString": "literal_string \"First liquidity was executed\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6120:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "6120:62:0"
                },
                {
                  "assignments": [
                    383,
                    385,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 383,
                      "mutability": "mutable",
                      "name": "_bnb1",
                      "nameLocation": "6201:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "6193:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6193:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "_busd1",
                      "nameLocation": "6216:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "6208:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6208:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 389,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 386,
                        "name": "uniswapV2PairBUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "6228:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6246:11:0",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2526,
                      "src": "6228:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6228:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6192:67:0"
                },
                {
                  "assignments": [
                    391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "price_bnb_to_busd",
                      "nameLocation": "6277:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "6269:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6269:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 392,
                      "name": "_busd1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "6297:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 393,
                      "name": "_bnb1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "6306:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6297:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6269:42:0"
                },
                {
                  "assignments": [
                    397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 397,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "6329:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "6321:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6321:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6338:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6342:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6338:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 400,
                        "name": "price_bnb_to_busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "6350:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6338:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 402,
                            "name": "priceWei_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "6371:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31",
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6388:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6394:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "6388:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "6384:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              }
                            ],
                            "id": 408,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6383:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "6371:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 410,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6370:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6338:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6321:77:0"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 413,
                      "name": "firstLiquidityEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "6408:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6432:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6408:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "6408:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6460:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 419,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6468:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6472:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6468:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 417,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "6447:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6447:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "6447:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 424,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "6508:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6508:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 426,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6522:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6530:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6534:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6530:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 423,
                      "name": "FirstLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "6493:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6493:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "EmitStatement",
                  "src": "6488:52:0"
                }
              ]
            },
            "functionSelector": "d8a0f828",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 374,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6100:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1471,
                  "src": "6100:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6100:9:0"
              }
            ],
            "name": "firstLiquidity",
            "nameLocation": "6049:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "priceWei_",
                  "nameLocation": "6072:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "6064:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6064:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6063:19:0"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6110:0:0"
            },
            "scope": 1383,
            "src": "6040:507:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "6594:538:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 442,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6628:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6620:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 440,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6620:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6620:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 444,
                        "name": "addressHeisenverse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "6635:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 445,
                        "name": "_poolHeisenverse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "6655:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 437,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6604:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SwishFish_$1383_$",
                          "typeString": "type(contract super SwishFish)"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6610:9:0",
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1927,
                      "src": "6604:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6604:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "6604:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 453,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6706:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6698:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6698:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6698:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 455,
                        "name": "addressMarketing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "6713:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 456,
                        "name": "_poolMarketing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "6731:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 448,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6682:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SwishFish_$1383_$",
                          "typeString": "type(contract super SwishFish)"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6688:9:0",
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1927,
                      "src": "6682:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6682:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "6682:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 464,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6780:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6772:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6772:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6772:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 466,
                        "name": "addressTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "6787:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 467,
                        "name": "_poolTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "6800:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 459,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6756:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SwishFish_$1383_$",
                          "typeString": "type(contract super SwishFish)"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6762:9:0",
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1927,
                      "src": "6756:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6756:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "6756:54:0"
                },
                {
                  "assignments": [
                    471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 471,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6828:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "6820:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6820:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 472,
                        "name": "_poolHeisenverse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "6837:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 473,
                        "name": "_poolMarketing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "6856:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6837:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 475,
                      "name": "_poolTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "6873:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6837:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6820:62:0"
                },
                {
                  "expression": {
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 478,
                      "name": "_poolHeisenverse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "6892:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6911:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6892:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "6892:20:0"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 482,
                      "name": "_poolMarketing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "6922:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6939:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6922:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "6922:18:0"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 486,
                      "name": "_poolTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "6950:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6962:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6950:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "6950:13:0"
                },
                {
                  "assignments": [
                    491,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "6979:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "6974:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6974:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 502,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7043:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 492,
                          "name": "addressHeisenverse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "6989:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7008:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6989:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 496,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7028:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwishFish_$1383",
                                  "typeString": "contract SwishFish"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwishFish_$1383",
                                  "typeString": "contract SwishFish"
                                }
                              ],
                              "id": 495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7020:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 494,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7020:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7020:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7034:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7020:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6989:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6989:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6973:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 504,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "7064:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e6420424e42",
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7070:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ee519189d040f7fa288e5ec15c5a24a2fc54b5cf729bb0ea3fe75c8d86bdd80",
                          "typeString": "literal_string \"Failed to send BNB\""
                        },
                        "value": "Failed to send BNB"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ee519189d040f7fa288e5ec15c5a24a2fc54b5cf729bb0ea3fe75c8d86bdd80",
                          "typeString": "literal_string \"Failed to send BNB\""
                        }
                      ],
                      "id": 503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7056:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "7056:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 509,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "7118:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 508,
                      "name": "TeamPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "7106:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7106:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "EmitStatement",
                  "src": "7101:24:0"
                }
              ]
            },
            "functionSelector": "d7196dd9",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 434,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6584:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1471,
                  "src": "6584:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6584:9:0"
              }
            ],
            "name": "teamPayment",
            "nameLocation": "6561:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6572:2:0"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6594:0:0"
            },
            "scope": 1383,
            "src": "6552:580:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1927
            ],
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "7247:1693:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 524,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "7265:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7281:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7273:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 525,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7273:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7273:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7265:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7285:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7257:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "7257:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 534,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "7343:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7357:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7349:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7349:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7349:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7343:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7361:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7335:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7335:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "7335:64:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 543,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "7413:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 544,
                        "name": "backend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "7419:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7419:9:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7413:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 599,
                  "nodeType": "IfStatement",
                  "src": "7409:502:0",
                  "trueBody": {
                    "id": 598,
                    "nodeType": "Block",
                    "src": "7430:481:0",
                    "statements": [
                      {
                        "assignments": [
                          548,
                          550,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 548,
                            "mutability": "mutable",
                            "name": "_hsf0",
                            "nameLocation": "7453:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "7445:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 547,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7445:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 550,
                            "mutability": "mutable",
                            "name": "_bnb0",
                            "nameLocation": "7468:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "7460:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 549,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7460:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 554,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 551,
                              "name": "uniswapV2PairHSF",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "7479:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7496:11:0",
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2526,
                            "src": "7479:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7479:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7444:65:0"
                      },
                      {
                        "assignments": [
                          556
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 556,
                            "mutability": "mutable",
                            "name": "price_hsf_to_bnb",
                            "nameLocation": "7531:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "7523:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 555,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7523:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 560,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 557,
                            "name": "_bnb0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "7550:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 558,
                            "name": "_hsf0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "7558:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7550:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7523:40:0"
                      },
                      {
                        "assignments": [
                          562,
                          564,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 562,
                            "mutability": "mutable",
                            "name": "_bnb1",
                            "nameLocation": "7586:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "7578:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 561,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7578:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 564,
                            "mutability": "mutable",
                            "name": "_busd1",
                            "nameLocation": "7601:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "7593:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 563,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7593:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 568,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 565,
                              "name": "uniswapV2PairBUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "7613:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7631:11:0",
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2526,
                            "src": "7613:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7613:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7577:67:0"
                      },
                      {
                        "assignments": [
                          570
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 570,
                            "mutability": "mutable",
                            "name": "price_bnb_to_busd",
                            "nameLocation": "7666:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "7658:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 569,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7658:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 574,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 571,
                            "name": "_busd1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "7686:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 572,
                            "name": "_bnb1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "7695:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7686:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7658:42:0"
                      },
                      {
                        "expression": {
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 575,
                              "name": "_maxTransactionWithdrawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "7714:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 578,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 576,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3188,
                                "src": "7744:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7744:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7714:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 579,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 519,
                                  "src": "7761:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 580,
                                  "name": "price_hsf_to_bnb",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 556,
                                  "src": "7770:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7761:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 582,
                                "name": "price_bnb_to_busd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 570,
                                "src": "7790:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7761:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 584,
                              "name": "_roi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "7810:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7761:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7714:100:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 587,
                        "nodeType": "ExpressionStatement",
                        "src": "7714:100:0"
                      },
                      {
                        "expression": {
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 588,
                              "name": "_totalInvestment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "7828:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 590,
                            "indexExpression": {
                              "id": 589,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "7845:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7828:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 591,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 519,
                                "src": "7854:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 592,
                                "name": "price_hsf_to_bnb",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 556,
                                "src": "7863:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7854:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 594,
                              "name": "price_bnb_to_busd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 570,
                              "src": "7883:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7854:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7828:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 597,
                        "nodeType": "ExpressionStatement",
                        "src": "7828:72:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "takeFee",
                      "nameLocation": "7925:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "7920:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7920:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 611,
                  "initialValue": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7935:55:0",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 602,
                              "name": "_isExcludedFromFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "7937:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 604,
                            "indexExpression": {
                              "id": 603,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "7957:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7937:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 605,
                              "name": "_isExcludedFromFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "7966:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 607,
                            "indexExpression": {
                              "id": 606,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "7986:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7966:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7937:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 609,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7936:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7920:70:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 612,
                          "name": "automatedMarketMakerPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "8003:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 614,
                        "indexExpression": {
                          "id": 613,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "8029:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8003:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 616,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "8049:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 615,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "8038:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8038:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8003:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "8056:23:0",
                      "subExpression": {
                        "baseExpression": {
                          "id": 619,
                          "name": "_isAllowedContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "8057:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 621,
                        "indexExpression": {
                          "id": 620,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "8076:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8057:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8003:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "8214:720:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 641,
                            "name": "takeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "8232:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 642,
                              "name": "automatedMarketMakerPairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "8243:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 644,
                            "indexExpression": {
                              "id": 643,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "8269:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8243:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8232:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 715,
                        "nodeType": "IfStatement",
                        "src": "8228:649:0",
                        "trueBody": {
                          "id": 714,
                          "nodeType": "Block",
                          "src": "8276:601:0",
                          "statements": [
                            {
                              "assignments": [
                                647
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 647,
                                  "mutability": "mutable",
                                  "name": "heisenverseAmount",
                                  "nameLocation": "8302:17:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 714,
                                  "src": "8294:25:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 646,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8294:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 655,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "313030",
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8356:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 650,
                                        "name": "taxFeeHeisenverse",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "8333:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 648,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 519,
                                        "src": "8322:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8329:3:0",
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3089,
                                      "src": "8322:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8322:29:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8352:3:0",
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3106,
                                  "src": "8322:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8322:38:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8294:66:0"
                            },
                            {
                              "assignments": [
                                657
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 657,
                                  "mutability": "mutable",
                                  "name": "marketingAmount",
                                  "nameLocation": "8386:15:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 714,
                                  "src": "8378:23:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 656,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8378:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 665,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "313030",
                                    "id": 663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8436:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 660,
                                        "name": "taxFeeMarketing",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98,
                                        "src": "8415:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 658,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 519,
                                        "src": "8404:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8411:3:0",
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3089,
                                      "src": "8404:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8404:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8432:3:0",
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3106,
                                  "src": "8404:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8404:36:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8378:62:0"
                            },
                            {
                              "assignments": [
                                667
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 667,
                                  "mutability": "mutable",
                                  "name": "teamAmount",
                                  "nameLocation": "8466:10:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 714,
                                  "src": "8458:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 666,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8458:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 675,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "313030",
                                    "id": 673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8506:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 670,
                                        "name": "taxFeeTeam",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 101,
                                        "src": "8490:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 668,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 519,
                                        "src": "8479:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8486:3:0",
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3089,
                                      "src": "8479:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8479:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8502:3:0",
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3106,
                                  "src": "8479:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8479:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8458:52:0"
                            },
                            {
                              "assignments": [
                                677
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 677,
                                  "mutability": "mutable",
                                  "name": "liquidityAmount",
                                  "nameLocation": "8536:15:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 714,
                                  "src": "8528:23:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 676,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8528:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 685,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "313030",
                                    "id": 683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8586:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 680,
                                        "name": "taxFeeLiquidity",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "8565:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 678,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 519,
                                        "src": "8554:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8561:3:0",
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3089,
                                      "src": "8554:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8554:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8582:3:0",
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3106,
                                  "src": "8554:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8554:36:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8528:62:0"
                            },
                            {
                              "expression": {
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 686,
                                  "name": "_poolHeisenverse",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "8609:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 689,
                                      "name": "heisenverseAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 647,
                                      "src": "8649:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 687,
                                      "name": "_poolHeisenverse",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 108,
                                      "src": "8628:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 688,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8645:3:0",
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3009,
                                    "src": "8628:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8628:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8609:58:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 692,
                              "nodeType": "ExpressionStatement",
                              "src": "8609:58:0"
                            },
                            {
                              "expression": {
                                "id": 698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 693,
                                  "name": "_poolMarketing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "8685:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 696,
                                      "name": "marketingAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 657,
                                      "src": "8721:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 694,
                                      "name": "_poolMarketing",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 111,
                                      "src": "8702:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8717:3:0",
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3009,
                                    "src": "8702:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8702:35:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8685:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 699,
                              "nodeType": "ExpressionStatement",
                              "src": "8685:52:0"
                            },
                            {
                              "expression": {
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 700,
                                  "name": "_poolTeam",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 114,
                                  "src": "8755:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 703,
                                      "name": "teamAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 667,
                                      "src": "8781:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 701,
                                      "name": "_poolTeam",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 114,
                                      "src": "8767:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 702,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8777:3:0",
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3009,
                                    "src": "8767:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8767:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8755:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 706,
                              "nodeType": "ExpressionStatement",
                              "src": "8755:37:0"
                            },
                            {
                              "expression": {
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 707,
                                  "name": "_poolLiquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "8810:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 710,
                                      "name": "liquidityAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 677,
                                      "src": "8846:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 708,
                                      "name": "_poolLiquidity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 117,
                                      "src": "8827:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8842:3:0",
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3009,
                                    "src": "8827:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8827:35:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8810:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 713,
                              "nodeType": "ExpressionStatement",
                              "src": "8810:52:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 719,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "8906:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 720,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "8912:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 721,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "8916:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 716,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8890:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SwishFish_$1383_$",
                                "typeString": "type(contract super SwishFish)"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8896:9:0",
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1927,
                            "src": "8890:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8890:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "8890:33:0"
                      }
                    ]
                  },
                  "id": 725,
                  "nodeType": "IfStatement",
                  "src": "8000:934:0",
                  "trueBody": {
                    "id": 640,
                    "nodeType": "Block",
                    "src": "8081:119:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 627,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "8111:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 628,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "8117:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 629,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "8121:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 624,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8095:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SwishFish_$1383_$",
                                "typeString": "type(contract super SwishFish)"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8101:9:0",
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1927,
                            "src": "8095:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8095:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 631,
                        "nodeType": "ExpressionStatement",
                        "src": "8095:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 635,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "8158:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 636,
                              "name": "addressPriceKeeper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "8162:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 637,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "8182:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 632,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8142:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SwishFish_$1383_$",
                                "typeString": "type(contract super SwishFish)"
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8148:9:0",
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1927,
                            "src": "8142:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8142:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 639,
                        "nodeType": "ExpressionStatement",
                        "src": "8142:47:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7147:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 521,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7238:8:0"
            },
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7174:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7166:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7166:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7196:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7188:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7188:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7216:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7208:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7208:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7156:72:0"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7247:0:0"
            },
            "scope": 1383,
            "src": "7138:1802:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "9008:263:0",
              "statements": [
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "mutability": "mutable",
                      "name": "accountHash",
                      "nameLocation": "9026:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 751,
                      "src": "9018:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9018:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9040:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                      "typeString": "int_const 8947...(69 digits omitted)...1552"
                    },
                    "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9018:88:0"
                },
                {
                  "assignments": [
                    739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "codeHash",
                      "nameLocation": "9124:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 751,
                      "src": "9116:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9116:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 740,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9116:16:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9151:53:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9165:29:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "9189:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "9177:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9177:17:0"
                        },
                        "variableNames": [
                          {
                            "name": "codeHash",
                            "nodeType": "YulIdentifier",
                            "src": "9165:8:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 729,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9189:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 739,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9165:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 741,
                  "nodeType": "InlineAssembly",
                  "src": "9142:62:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 742,
                            "name": "codeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "9221:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "307830",
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9233:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          "src": "9221:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 745,
                            "name": "codeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "9240:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 746,
                            "name": "accountHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "9252:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9240:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9221:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 749,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9220:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 733,
                  "id": 750,
                  "nodeType": "Return",
                  "src": "9213:51:0"
                }
              ]
            },
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "8954:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8973:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "8965:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8965:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8964:14:0"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "9002:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9002:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9001:6:0"
            },
            "scope": 1383,
            "src": "8945:326:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "9411:276:0",
              "statements": [
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 763,
                      "name": "taxFeeHeisenverse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "9421:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 764,
                      "name": "_heisenVerseTaxFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "9441:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9421:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "9421:38:0"
                },
                {
                  "expression": {
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 767,
                      "name": "taxFeeMarketing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "9469:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 768,
                      "name": "_marketingTaxFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 756,
                      "src": "9487:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9469:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "9469:34:0"
                },
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 771,
                      "name": "taxFeeTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "9513:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 772,
                      "name": "_teamTaxFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "9526:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9513:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "9513:24:0"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 775,
                      "name": "taxFeeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "9547:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 776,
                      "name": "_liquidityTaxFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "9565:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9547:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "9547:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_heisenVerseTaxFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "9612:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 781,
                        "name": "_marketingTaxFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "9632:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 782,
                        "name": "_teamTaxFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "9650:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 783,
                        "name": "_liquidityTaxFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "9663:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 779,
                      "name": "UpdateTaxesFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "9596:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9596:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "EmitStatement",
                  "src": "9591:89:0"
                }
              ]
            },
            "id": 787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTaxesFees",
            "nameLocation": "9286:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "_heisenVerseTaxFee",
                  "nameLocation": "9310:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "9302:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9302:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "_marketingTaxFee",
                  "nameLocation": "9338:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "9330:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9330:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "_teamTaxFee",
                  "nameLocation": "9364:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "9356:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9356:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "_liquidityTaxFee",
                  "nameLocation": "9385:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "9377:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9377:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9301:101:0"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9411:0:0"
            },
            "scope": 1383,
            "src": "9277:410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "9748:85:0",
              "statements": [
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 792,
                      "name": "salesEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "9758:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 793,
                      "name": "_salesEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "9773:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9758:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "9758:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 797,
                        "name": "_salesEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "9812:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 796,
                      "name": "SalesState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "9801:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9801:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "EmitStatement",
                  "src": "9796:30:0"
                }
              ]
            },
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSalesStatus",
            "nameLocation": "9702:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "_salesEnabled",
                  "nameLocation": "9725:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "9720:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9719:20:0"
            },
            "returnParameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9748:0:0"
            },
            "scope": 1383,
            "src": "9693:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "9898:355:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 811,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "9925:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9917:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 809,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9917:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9917:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 815,
                            "name": "uniswapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "9940:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9932:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9932:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9932:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 820,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "9976:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwishFish_$1383",
                                  "typeString": "contract SwishFish"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwishFish_$1383",
                                  "typeString": "contract SwishFish"
                                }
                              ],
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9968:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 818,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9968:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9968:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 817,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1678,
                          "src": "9958:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9958:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 808,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2112,
                      "src": "9908:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9908:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "9908:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 832,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10059:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10051:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10051:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10051:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "10078:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10098:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10113:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 839,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10136:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwishFish_$1383",
                              "typeString": "contract SwishFish"
                            }
                          ],
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10128:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10128:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10128:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "333030",
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10175:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_300_by_1",
                              "typeString": "int_const 300"
                            },
                            "value": "300"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_300_by_1",
                              "typeString": "int_const 300"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 841,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "10155:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10161:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10155:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10171:3:0",
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3009,
                          "src": "10155:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10155:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 825,
                          "name": "uniswapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "9993:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$2980",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10009:15:0",
                        "memberName": "addLiquidityETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2642,
                        "src": "9993:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 828,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "10033:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "9993:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:196:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "9993:196:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 849,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "10214:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10214:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 851,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "10228:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 852,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10236:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10240:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10236:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 848,
                      "name": "Liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "10204:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10204:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "EmitStatement",
                  "src": "10199:47:0"
                }
              ]
            },
            "id": 857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "9848:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "9869:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "9861:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9861:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "bnb",
                  "nameLocation": "9885:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "9877:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9877:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9860:29:0"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9898:0:0"
            },
            "scope": 1383,
            "src": "9839:414:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "10335:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 864,
                      "name": "_totalInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "10352:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 866,
                    "indexExpression": {
                      "id": 865,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "10369:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10352:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 863,
                  "id": 867,
                  "nodeType": "Return",
                  "src": "10345:32:0"
                }
              ]
            },
            "functionSelector": "fe7441e7",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllowance",
            "nameLocation": "10268:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10294:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "10286:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10286:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10285:17:0"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "10326:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10326:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10325:9:0"
            },
            "scope": 1383,
            "src": "10259:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 918,
              "nodeType": "Block",
              "src": "10468:364:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 876,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "10482:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10488:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10482:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "3836343030",
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10536:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "86400"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 878,
                            "name": "_accountWithdrawalLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "10500:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 880,
                          "indexExpression": {
                            "id": 879,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "10523:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10500:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10532:3:0",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3009,
                        "src": "10500:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10500:42:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10482:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 899,
                  "nodeType": "IfStatement",
                  "src": "10478:190:0",
                  "trueBody": {
                    "id": 898,
                    "nodeType": "Block",
                    "src": "10544:124:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 885,
                              "name": "_accountWithdrawalLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "10558:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 887,
                            "indexExpression": {
                              "id": 886,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "10581:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10558:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 888,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "10592:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10598:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10592:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10558:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 891,
                        "nodeType": "ExpressionStatement",
                        "src": "10558:49:0"
                      },
                      {
                        "expression": {
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 892,
                              "name": "_accountWithdrawalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "10621:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 894,
                            "indexExpression": {
                              "id": 893,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "10645:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10621:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10656:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10621:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "10621:36:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 900,
                        "name": "_accountWithdrawalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "10677:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 902,
                      "indexExpression": {
                        "id": 901,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "10701:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10677:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10749:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 903,
                            "name": "_accountWithdrawalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "10712:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 905,
                          "indexExpression": {
                            "id": 904,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "10736:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10712:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10745:3:0",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3009,
                        "src": "10712:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10712:39:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10677:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 910,
                  "nodeType": "ExpressionStatement",
                  "src": "10677:74:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 911,
                            "name": "_accountWithdrawalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "10769:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 913,
                          "indexExpression": {
                            "id": 912,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "10793:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10769:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 914,
                          "name": "_maxWithdrawalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "10805:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10769:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 916,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10768:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 875,
                  "id": 917,
                  "nodeType": "Return",
                  "src": "10761:64:0"
                }
              ]
            },
            "id": 919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUnderDailyWithdrawalLimit",
            "nameLocation": "10399:27:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10435:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "10427:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10427:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10426:17:0"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "10462:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10462:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10461:6:0"
            },
            "scope": 1383,
            "src": "10390:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "10932:871:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 930,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "10968:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 931,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "10979:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 932,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "10987:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 929,
                          "name": "isClaimAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "10950:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,uint256,uint256) view returns (bool)"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10950:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261773a204e6f7420617574686f72697a6564",
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10999:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52844a87d235a81601f49306d4e50c526a149c1ca5f5ae9c8c4c0cd618e16d5f",
                          "typeString": "literal_string \"Withdraw: Not authorized\""
                        },
                        "value": "Withdraw: Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52844a87d235a81601f49306d4e50c526a149c1ca5f5ae9c8c4c0cd618e16d5f",
                          "typeString": "literal_string \"Withdraw: Not authorized\""
                        }
                      ],
                      "id": 928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10942:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10942:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "10942:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 939,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3188,
                              "src": "11072:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11072:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 938,
                          "name": "isUnderDailyWithdrawalLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "11044:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11044:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261773a20596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e65207769746864726177616c2070657220646179",
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11087:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa6881427af5aba11840b716e3b583c747b9c72ddd47c4b40cba8438c8e48ef7",
                          "typeString": "literal_string \"Withdraw: You cannot make more than one withdrawal per day\""
                        },
                        "value": "Withdraw: You cannot make more than one withdrawal per day"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa6881427af5aba11840b716e3b583c747b9c72ddd47c4b40cba8438c8e48ef7",
                          "typeString": "literal_string \"Withdraw: You cannot make more than one withdrawal per day\""
                        }
                      ],
                      "id": 937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11036:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11036:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "11036:112:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 945,
                        "name": "_maxTransactionWithdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "11161:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 948,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 946,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "11191:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11191:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11161:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11208:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11161:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 959,
                  "nodeType": "IfStatement",
                  "src": "11158:132:0",
                  "trueBody": {
                    "id": 958,
                    "nodeType": "Block",
                    "src": "11211:79:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 951,
                              "name": "_maxTransactionWithdrawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "11225:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 954,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 952,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3188,
                                "src": "11255:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11255:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11225:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3330",
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11271:8:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30000000000000000000_by_1",
                              "typeString": "int_const 30000000000000000000"
                            },
                            "value": "30"
                          },
                          "src": "11225:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 957,
                        "nodeType": "ExpressionStatement",
                        "src": "11225:54:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 961,
                            "name": "_maxTransactionWithdrawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "11307:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 964,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 962,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3188,
                              "src": "11337:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11337:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11307:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 965,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 923,
                          "src": "11353:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11307:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261773a2055736572206861736e277420726571756972656420616c6c6f77616e6365",
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11361:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a0165ec2bef3a31950fd1a1a38ce6cef9bf1a54af4ad76dd72cfef53dd9b90",
                          "typeString": "literal_string \"Withdraw: User hasn't required allowance\""
                        },
                        "value": "Withdraw: User hasn't required allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a0165ec2bef3a31950fd1a1a38ce6cef9bf1a54af4ad76dd72cfef53dd9b90",
                          "typeString": "literal_string \"Withdraw: User hasn't required allowance\""
                        }
                      ],
                      "id": 960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11299:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11299:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "11299:105:0"
                },
                {
                  "assignments": [
                    971,
                    973,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "_bnb1",
                      "nameLocation": "11424:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "11416:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11416:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 973,
                      "mutability": "mutable",
                      "name": "_busd1",
                      "nameLocation": "11439:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "11431:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 972,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11431:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 977,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 974,
                        "name": "uniswapV2PairBUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "11451:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$2584",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11469:11:0",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2526,
                      "src": "11451:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11451:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11415:67:0"
                },
                {
                  "assignments": [
                    979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 979,
                      "mutability": "mutable",
                      "name": "price_bnb_to_busd",
                      "nameLocation": "11500:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "11492:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 978,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11492:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 980,
                      "name": "_busd1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "11520:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 981,
                      "name": "_bnb1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "11529:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11520:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11492:42:0"
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "tax",
                      "nameLocation": "11552:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "11544:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11544:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 992,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 986,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "11559:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 987,
                            "name": "price_bnb_to_busd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "11569:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11589:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "11569:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 990,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11568:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11559:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11544:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 994,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11610:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11614:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11610:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 996,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "11622:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11610:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261773a2052657175697265205461782031302520",
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11627:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9192aa204a0d25f3beb3b1f820543d51e66765f4adf97029aa0739bfc1bd49b2",
                          "typeString": "literal_string \"Withdraw: Require Tax 10% \""
                        },
                        "value": "Withdraw: Require Tax 10% "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9192aa204a0d25f3beb3b1f820543d51e66765f4adf97029aa0739bfc1bd49b2",
                          "typeString": "literal_string \"Withdraw: Require Tax 10% \""
                        }
                      ],
                      "id": 993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11602:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11602:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "11602:54:0"
                },
                {
                  "assignments": [
                    1003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1003,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "11673:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "11666:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2254",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1002,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1001,
                          "name": "IERC20",
                          "nameLocations": [
                            "11666:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2254,
                          "src": "11666:6:0"
                        },
                        "referencedDeclaration": 2254,
                        "src": "11666:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2254",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1007,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1005,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "11690:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1004,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2254,
                      "src": "11683:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2254_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11683:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2254",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11666:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1011,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "11730:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11730:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1013,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "11744:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1008,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "11713:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2254",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11721:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2221,
                      "src": "11713:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11713:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "11713:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1017,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "11775:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11775:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1019,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "11789:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1016,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "11766:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11766:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1021,
                  "nodeType": "EmitStatement",
                  "src": "11761:35:0"
                }
              ]
            },
            "functionSelector": "737a9ed6",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "10847:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "10869:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "10856:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10856:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10888:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "10880:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10880:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "10904:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "10896:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10896:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10855:59:0"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10932:0:0"
            },
            "scope": 1383,
            "src": "10838:965:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "12144:929:0",
              "statements": [
                {
                  "condition": {
                    "id": 1046,
                    "name": "_updateTaxesFees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1029,
                    "src": "12158:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1065,
                  "nodeType": "IfStatement",
                  "src": "12154:238:0",
                  "trueBody": {
                    "id": 1064,
                    "nodeType": "Block",
                    "src": "12176:216:0",
                    "statements": [
                      {
                        "assignments": [
                          1048
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1048,
                            "mutability": "mutable",
                            "name": "sellTotalFees",
                            "nameLocation": "12198:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1064,
                            "src": "12190:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1047,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12190:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1056,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1049,
                                "name": "_heisenVerseTaxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1031,
                                "src": "12214:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1050,
                                "name": "_marketingTaxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1033,
                                "src": "12235:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12214:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1052,
                              "name": "_teamTaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "12254:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12214:51:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1054,
                            "name": "_liquidityTaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "12268:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12214:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12190:94:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1058,
                                "name": "sellTotalFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1048,
                                "src": "12306:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12323:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "12306:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d756c74695369676e617475726557616c6c65743a204d757374206b656570206665657320617420313025206f72206c657373",
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12327:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64d7da9d3627bed486e3571b002047ac22bd302023ad9ca8c7b8066b1d42a5ac",
                                "typeString": "literal_string \"MultiSignatureWallet: Must keep fees at 10% or less\""
                              },
                              "value": "MultiSignatureWallet: Must keep fees at 10% or less"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64d7da9d3627bed486e3571b002047ac22bd302023ad9ca8c7b8066b1d42a5ac",
                                "typeString": "literal_string \"MultiSignatureWallet: Must keep fees at 10% or less\""
                              }
                            ],
                            "id": 1057,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "12298:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12298:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1063,
                        "nodeType": "ExpressionStatement",
                        "src": "12298:83:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1066,
                    "name": "_transferBackend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1039,
                    "src": "12405:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1078,
                  "nodeType": "IfStatement",
                  "src": "12401:140:0",
                  "trueBody": {
                    "id": 1077,
                    "nodeType": "Block",
                    "src": "12423:118:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1068,
                                "name": "_backendAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1041,
                                "src": "12445:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1071,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12472:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12464:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1069,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12464:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12464:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "12445:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12476:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9a40112b701da5565c96754f9ce4cac286167c1b4f1dd9ec7cfbe39e7eac9ee",
                                "typeString": "literal_string \"MultiSignatureWallet: new owner is the zero address\""
                              },
                              "value": "MultiSignatureWallet: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9a40112b701da5565c96754f9ce4cac286167c1b4f1dd9ec7cfbe39e7eac9ee",
                                "typeString": "literal_string \"MultiSignatureWallet: new owner is the zero address\""
                              }
                            ],
                            "id": 1067,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "12437:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12437:93:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1076,
                        "nodeType": "ExpressionStatement",
                        "src": "12437:93:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1083,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3188,
                              "src": "12592:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12592:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12624:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 1086,
                            "name": "_updateEggSales",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "12658:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1087,
                            "name": "_salesEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "12697:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1088,
                            "name": "_updateTaxesFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "12737:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1089,
                            "name": "_heisenVerseTaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "12782:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1090,
                            "name": "_marketingTaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "12827:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1091,
                            "name": "_teamTaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "12865:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1092,
                            "name": "_liquidityTaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "12903:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1093,
                            "name": "_transferBackend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "12946:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1094,
                            "name": "_backendAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "12988:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1082,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3245,
                          "src": "12565:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proposal_$3245_storage_ptr_$",
                            "typeString": "type(struct MultiSignature.Proposal storage pointer)"
                          }
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "12584:6:0",
                          "12614:8:0",
                          "12639:17:0",
                          "12683:12:0",
                          "12720:15:0",
                          "12763:17:0",
                          "12810:15:0",
                          "12853:10:0",
                          "12886:15:0",
                          "12929:15:0",
                          "12972:14:0"
                        ],
                        "names": [
                          "author",
                          "executed",
                          "updateSalesStatus",
                          "salesEnabled",
                          "updateTaxesFees",
                          "heisenVerseTaxFee",
                          "marketingTaxFee",
                          "teamTaxFee",
                          "liquidityTaxFee",
                          "transferBackend",
                          "backendAddress"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "12565:449:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3245_memory_ptr",
                          "typeString": "struct MultiSignature.Proposal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$3245_memory_ptr",
                          "typeString": "struct MultiSignature.Proposal memory"
                        }
                      ],
                      "expression": {
                        "id": 1079,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "12550:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$3245_storage_$dyn_storage",
                          "typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12560:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "12550:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$3245_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$3245_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$3245_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct MultiSignature.Proposal storage ref[] storage pointer,struct MultiSignature.Proposal storage ref)"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12550:465:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1097,
                  "nodeType": "ExpressionStatement",
                  "src": "12550:465:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1099,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3249,
                            "src": "13045:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Proposal_$3245_storage_$dyn_storage",
                              "typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13055:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13045:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13064:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13045:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1098,
                      "name": "SubmitProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3210,
                      "src": "13030:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13030:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "EmitStatement",
                  "src": "13025:41:0"
                }
              ]
            },
            "functionSelector": "fe3b2b9a",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1044,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1043,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "12134:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1471,
                  "src": "12134:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12134:9:0"
              }
            ],
            "name": "submitProposal",
            "nameLocation": "11818:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "_updateEggSales",
                  "nameLocation": "11847:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "11842:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11842:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "_salesEnabled",
                  "nameLocation": "11877:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "11872:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11872:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "_updateTaxesFees",
                  "nameLocation": "11905:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "11900:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11900:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "_heisenVerseTaxFee",
                  "nameLocation": "11939:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "11931:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11931:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "_marketingTaxFee",
                  "nameLocation": "11975:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "11967:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11967:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "_teamTaxFee",
                  "nameLocation": "12009:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "12001:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12001:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "_liquidityTaxFee",
                  "nameLocation": "12038:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "12030:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12030:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "_transferBackend",
                  "nameLocation": "12069:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "12064:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12064:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "_backendAddress",
                  "nameLocation": "12103:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "12095:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12095:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11832:292:0"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12144:0:0"
            },
            "scope": 1383,
            "src": "11809:1264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1137,
              "nodeType": "Block",
              "src": "13239:124:0",
              "statements": [
                {
                  "expression": {
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1122,
                          "name": "proposalApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3255,
                          "src": "13249:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 1126,
                        "indexExpression": {
                          "id": 1123,
                          "name": "_proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "13266:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13249:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1127,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1124,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "13279:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13279:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13249:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13295:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13249:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "13249:50:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1132,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "13330:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13330:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1134,
                        "name": "_proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "13344:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1131,
                      "name": "ApproveProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3216,
                      "src": "13314:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13314:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "EmitStatement",
                  "src": "13309:47:0"
                }
              ]
            },
            "functionSelector": "98951b56",
            "id": 1138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1110,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13131:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1471,
                  "src": "13131:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13131:9:0"
              },
              {
                "arguments": [
                  {
                    "id": 1113,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "13156:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1114,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1112,
                  "name": "proposalExists",
                  "nameLocations": [
                    "13141:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3273,
                  "src": "13141:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13141:27:0"
              },
              {
                "arguments": [
                  {
                    "id": 1116,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "13189:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1117,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1115,
                  "name": "proposalNotApproved",
                  "nameLocations": [
                    "13169:19:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3290,
                  "src": "13169:19:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13169:32:0"
              },
              {
                "arguments": [
                  {
                    "id": 1119,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "13222:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1120,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1118,
                  "name": "proposalNotExecuted",
                  "nameLocations": [
                    "13202:19:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3305,
                  "src": "13202:19:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13202:32:0"
              }
            ],
            "name": "approveProposal",
            "nameLocation": "13088:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "13109:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "13104:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13104:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13103:18:0"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13239:0:0"
            },
            "scope": 1383,
            "src": "13079:284:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "13445:227:0",
              "statements": [
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "13463:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "13455:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13455:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13471:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13455:17:0"
                },
                {
                  "body": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "13529:115:0",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1159,
                              "name": "proposalApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3255,
                              "src": "13547:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 1161,
                            "indexExpression": {
                              "id": 1160,
                              "name": "_proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "13564:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13547:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1165,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1163,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1150,
                                "src": "13586:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1162,
                              "name": "getOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1511,
                              "src": "13577:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13577:11:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13547:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1171,
                        "nodeType": "IfStatement",
                        "src": "13543:91:0",
                        "trueBody": {
                          "id": 1170,
                          "nodeType": "Block",
                          "src": "13591:43:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1166,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1146,
                                  "src": "13609:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13618:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13609:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1169,
                              "nodeType": "ExpressionStatement",
                              "src": "13609:10:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1152,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1150,
                      "src": "13495:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1153,
                        "name": "requiredConfirmations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "13499:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13499:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13495:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "initializationExpression": {
                    "assignments": [
                      1150
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1150,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13492:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "13487:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13487:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1151,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13487:6:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13524:3:0",
                      "subExpression": {
                        "id": 1156,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1150,
                        "src": "13524:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1158,
                    "nodeType": "ExpressionStatement",
                    "src": "13524:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13482:162:0"
                },
                {
                  "expression": {
                    "id": 1174,
                    "name": "count",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1146,
                    "src": "13660:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1144,
                  "id": 1175,
                  "nodeType": "Return",
                  "src": "13653:12:0"
                }
              ]
            },
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getApprovalCount",
            "nameLocation": "13378:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "13401:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "13396:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13396:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13395:18:0"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "13436:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13436:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13435:9:0"
            },
            "scope": 1383,
            "src": "13369:303:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1244,
              "nodeType": "Block",
              "src": "13791:625:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1190,
                              "name": "_proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "13827:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1189,
                            "name": "_getApprovalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "13809:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13809:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1192,
                            "name": "requiredConfirmations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1449,
                            "src": "13843:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13843:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13809:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74695369676e617475726557616c6c65743a20617070726f76616c73206973206c657373207468616e207265717569726564",
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13868:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_953de992fe3126690fbccd56c3eb41bf5101b499e0b29d5ebef10e29539c7131",
                          "typeString": "literal_string \"MultiSignatureWallet: approvals is less than required\""
                        },
                        "value": "MultiSignatureWallet: approvals is less than required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_953de992fe3126690fbccd56c3eb41bf5101b499e0b29d5ebef10e29539c7131",
                          "typeString": "literal_string \"MultiSignatureWallet: approvals is less than required\""
                        }
                      ],
                      "id": 1188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13801:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "13801:123:0"
                },
                {
                  "assignments": [
                    1200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1200,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "13951:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1244,
                      "src": "13934:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                        "typeString": "struct MultiSignature.Proposal"
                      },
                      "typeName": {
                        "id": 1199,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1198,
                          "name": "Proposal",
                          "nameLocations": [
                            "13934:8:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3245,
                          "src": "13934:8:0"
                        },
                        "referencedDeclaration": 3245,
                        "src": "13934:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                          "typeString": "struct MultiSignature.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1204,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1201,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "13962:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3245_storage_$dyn_storage",
                        "typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 1203,
                    "indexExpression": {
                      "id": 1202,
                      "name": "_proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "13972:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13962:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3245_storage",
                      "typeString": "struct MultiSignature.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13934:50:0"
                },
                {
                  "expression": {
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1205,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "13994:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                          "typeString": "struct MultiSignature.Proposal storage pointer"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14003:8:0",
                      "memberName": "executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3226,
                      "src": "13994:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14014:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13994:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "13994:24:0"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 1211,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "14032:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                        "typeString": "struct MultiSignature.Proposal storage pointer"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14041:17:0",
                    "memberName": "updateSalesStatus",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3228,
                    "src": "14032:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1219,
                  "nodeType": "IfStatement",
                  "src": "14028:97:0",
                  "trueBody": {
                    "id": 1218,
                    "nodeType": "Block",
                    "src": "14060:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1214,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "14092:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                                  "typeString": "struct MultiSignature.Proposal storage pointer"
                                }
                              },
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14101:12:0",
                              "memberName": "salesEnabled",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3230,
                              "src": "14092:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1213,
                            "name": "updateSalesStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "14074:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14074:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1217,
                        "nodeType": "ExpressionStatement",
                        "src": "14074:40:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "expression": {
                      "id": 1220,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "14138:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                        "typeString": "struct MultiSignature.Proposal storage pointer"
                      }
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14147:15:0",
                    "memberName": "updateTaxesFees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3232,
                    "src": "14138:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1234,
                  "nodeType": "IfStatement",
                  "src": "14134:171:0",
                  "trueBody": {
                    "id": 1233,
                    "nodeType": "Block",
                    "src": "14164:141:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1223,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "14194:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                                  "typeString": "struct MultiSignature.Proposal storage pointer"
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14203:17:0",
                              "memberName": "heisenVerseTaxFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3234,
                              "src": "14194:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1225,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "14222:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                                  "typeString": "struct MultiSignature.Proposal storage pointer"
                                }
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14231:15:0",
                              "memberName": "marketingTaxFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3236,
                              "src": "14222:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1227,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "14248:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                                  "typeString": "struct MultiSignature.Proposal storage pointer"
                                }
                              },
                              "id": 1228,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14257:10:0",
                              "memberName": "teamTaxFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3238,
                              "src": "14248:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1229,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "14269:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                                  "typeString": "struct MultiSignature.Proposal storage pointer"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14278:15:0",
                              "memberName": "liquidityTaxFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3240,
                              "src": "14269:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1222,
                            "name": "updateTaxesFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "14178:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14178:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1232,
                        "nodeType": "ExpressionStatement",
                        "src": "14178:116:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "expression": {
                      "id": 1235,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "14318:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                        "typeString": "struct MultiSignature.Proposal storage pointer"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14327:15:0",
                    "memberName": "transferBackend",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3242,
                    "src": "14318:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1243,
                  "nodeType": "IfStatement",
                  "src": "14314:96:0",
                  "trueBody": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "14344:66:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1238,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "14375:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$3245_storage_ptr",
                                  "typeString": "struct MultiSignature.Proposal storage pointer"
                                }
                              },
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14384:14:0",
                              "memberName": "backendAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3244,
                              "src": "14375:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1237,
                            "name": "_transferBackend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "14358:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14358:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1241,
                        "nodeType": "ExpressionStatement",
                        "src": "14358:41:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0d61b519",
            "id": 1245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1182,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1179,
                    "src": "13745:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1181,
                  "name": "proposalExists",
                  "nameLocations": [
                    "13730:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3273,
                  "src": "13730:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13730:27:0"
              },
              {
                "arguments": [
                  {
                    "id": 1185,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1179,
                    "src": "13778:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1186,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1184,
                  "name": "proposalNotExecuted",
                  "nameLocations": [
                    "13758:19:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3305,
                  "src": "13758:19:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13758:32:0"
              }
            ],
            "name": "executeProposal",
            "nameLocation": "13687:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "13708:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1245,
                  "src": "13703:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13703:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13702:18:0"
            },
            "returnParameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13791:0:0"
            },
            "scope": 1383,
            "src": "13678:738:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1260,
              "nodeType": "Block",
              "src": "14503:64:0",
              "statements": [
                {
                  "expression": {
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1254,
                        "name": "_isAllowedContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "14513:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1256,
                      "indexExpression": {
                        "id": 1255,
                        "name": "contractAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "14532:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14513:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1257,
                      "name": "allowed_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1249,
                      "src": "14552:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14513:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "14513:47:0"
                }
              ]
            },
            "functionSelector": "d78af5f1",
            "id": 1261,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1252,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1251,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "14494:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1471,
                  "src": "14494:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14494:9:0"
              }
            ],
            "name": "allowContract",
            "nameLocation": "14430:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "contractAddress_",
                  "nameLocation": "14452:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "14444:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14444:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "allowed_",
                  "nameLocation": "14475:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "14470:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14470:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14443:41:0"
            },
            "returnParameters": {
              "id": 1253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14503:0:0"
            },
            "scope": 1383,
            "src": "14421:146:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1299,
              "nodeType": "Block",
              "src": "14698:236:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1275,
                            "name": "proposalApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3255,
                            "src": "14716:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(uint256 => mapping(address => bool))"
                            }
                          },
                          "id": 1277,
                          "indexExpression": {
                            "id": 1276,
                            "name": "_proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "14733:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14716:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1280,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1278,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3188,
                            "src": "14746:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14746:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14716:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206973206e6f7420617070726f766564",
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14761:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16bf0dfdf621e13211addd9bc2d05822a44f1a962fe2989d13a49a0ab872e198",
                          "typeString": "literal_string \"MultiSignatureWallet: Proposal is not approved\""
                        },
                        "value": "MultiSignatureWallet: Proposal is not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16bf0dfdf621e13211addd9bc2d05822a44f1a962fe2989d13a49a0ab872e198",
                          "typeString": "literal_string \"MultiSignatureWallet: Proposal is not approved\""
                        }
                      ],
                      "id": 1274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14708:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14708:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "14708:102:0"
                },
                {
                  "expression": {
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1284,
                          "name": "proposalApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3255,
                          "src": "14820:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 1288,
                        "indexExpression": {
                          "id": 1285,
                          "name": "_proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "14837:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14820:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1289,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1286,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "14850:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14850:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14820:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14866:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14820:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "14820:51:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1294,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "14901:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14901:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1296,
                        "name": "_proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "14915:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1293,
                      "name": "RevokeProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3222,
                      "src": "14886:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14886:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "EmitStatement",
                  "src": "14881:46:0"
                }
              ]
            },
            "functionSelector": "85a6a091",
            "id": 1300,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1265,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "14623:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1471,
                  "src": "14623:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14623:9:0"
              },
              {
                "arguments": [
                  {
                    "id": 1268,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1263,
                    "src": "14648:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1267,
                  "name": "proposalExists",
                  "nameLocations": [
                    "14633:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3273,
                  "src": "14633:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14633:27:0"
              },
              {
                "arguments": [
                  {
                    "id": 1271,
                    "name": "_proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1263,
                    "src": "14681:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1272,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1270,
                  "name": "proposalNotExecuted",
                  "nameLocations": [
                    "14661:19:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3305,
                  "src": "14661:19:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14661:32:0"
              }
            ],
            "name": "revokeProposal",
            "nameLocation": "14581:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "14601:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "14596:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14596:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14595:18:0"
            },
            "returnParameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14698:0:0"
            },
            "scope": 1383,
            "src": "14572:362:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "15055:432:0",
              "statements": [
                {
                  "assignments": [
                    1312,
                    1314,
                    1316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1312,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "15074:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "15066:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1311,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1314,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "15085:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "15077:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1313,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1316,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "15094:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "15088:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1315,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15088:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1320,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1318,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15114:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1317,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1382,
                      "src": "15099:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15099:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15065:59:0"
                },
                {
                  "assignments": [
                    1322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "base_message",
                      "nameLocation": "15142:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "15134:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1321,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15134:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1330,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1326,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "15184:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1327,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "15191:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1324,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "15167:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15171:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15167:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15167:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1323,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "15157:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15157:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15134:68:0"
                },
                {
                  "assignments": [
                    1332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1332,
                      "mutability": "mutable",
                      "name": "prefixedHashMessage",
                      "nameLocation": "15220:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "15212:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1331,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15212:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1340,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 1336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15270:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 1337,
                            "name": "base_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1322,
                            "src": "15307:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1334,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "15252:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15256:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15252:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15252:69:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1333,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "15242:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15242:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15212:110:0"
                },
                {
                  "assignments": [
                    1342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1342,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "15340:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "15332:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1341,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15332:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1349,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1344,
                        "name": "prefixedHashMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "15359:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1345,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "15380:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1346,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "15383:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1347,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1314,
                        "src": "15386:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1343,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967290,
                      "src": "15349:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15349:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15332:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1350,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "15402:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1351,
                        "name": "backend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "15412:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15412:9:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15402:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1357,
                  "nodeType": "IfStatement",
                  "src": "15398:61:0",
                  "trueBody": {
                    "id": 1356,
                    "nodeType": "Block",
                    "src": "15423:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15444:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1310,
                        "id": 1355,
                        "nodeType": "Return",
                        "src": "15437:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15475:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1310,
                  "id": 1359,
                  "nodeType": "Return",
                  "src": "15468:12:0"
                }
              ]
            },
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimAuthorized",
            "nameLocation": "14949:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "14980:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "14967:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14967:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14999:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "14991:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14991:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "15015:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "15007:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15007:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14966:59:0"
            },
            "returnParameters": {
              "id": 1310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "15049:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15049:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15048:6:0"
            },
            "scope": 1383,
            "src": "14940:547:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1381,
              "nodeType": "Block",
              "src": "15586:219:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1373,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "15604:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15608:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15604:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15618:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "15604:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15622:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 1372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15596:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15596:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "15596:53:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "15668:131:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15682:24:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "15697:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15702:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15693:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15693:12:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15687:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15687:19:0"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "15682:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15719:24:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "15734:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15739:2:0",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15730:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15730:12:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15724:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15724:19:0"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "15719:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15756:33:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15766:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "15779:3:0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "15784:2:0",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "15775:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15775:12:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "15769:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15769:19:0"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "15761:4:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15761:28:0"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "15756:1:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 1366,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15682:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1368,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15719:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1363,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15697:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1363,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15734:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1363,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15779:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1370,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15756:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 1380,
                  "nodeType": "InlineAssembly",
                  "src": "15659:140:0"
                }
              ]
            },
            "functionSelector": "a7bb5803",
            "id": 1382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "15501:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "15529:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "15516:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15516:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15515:18:0"
            },
            "returnParameters": {
              "id": 1371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "15563:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "15555:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15555:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "15574:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "15566:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15566:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1370,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "15583:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "15577:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1369,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15577:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15554:31:0"
            },
            "scope": 1383,
            "src": "15492:313:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1384,
        "src": "376:15431:0",
        "usedErrors": []
      }
    ],
    "src": "76:15732:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {},
      "links": {},
      "address": "0x470b3527A12B30D8363E463df28b837Fbc5C5434",
      "transactionHash": "0x1d4865260daffdca89af0975da3a37aa08ed2169c9f1a184eec0579ddd3ca0d1"
    },
    "97": {
      "events": {},
      "links": {},
      "address": "0x2741980184A67735effEddE11f6D7D4aDbfA7875",
      "transactionHash": "0x0c76ffad27ac67466c8a46450c1e3e2895dcc077a99834e529611de5e13fc156"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-09T20:51:47.606Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "HeisenDev",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "decimals()": {
        "details": "Returns the decimals places of the token."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "title": "SwishFish Contract for SwishFish Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_poolHeisenverse()": {
        "notice": "Definition of pools `_poolHeisenverse` `_poolMarketing` `_poolTeam` `_poolLiquidity`"
      },
      "addressPriceKeeper()": {
        "notice": "Definition of the Project Wallets `addressHeisenverse` Corresponds to the wallet address where the development team will receive their payments `addressMarketing` Corresponds to the wallet address where the funds for marketing will be received `addressTeam` Represents the wallet where teams and other collaborators will receive their payments"
      },
      "taxFeeHeisenverse()": {
        "notice": "Definition of the taxes fees for swaps `taxFeeHeisenverse` 2%  Initial tax fee during presale `taxFeeMarketing` 3%  Initial tax fee during presale `taxFeeTeam` 3%  Initial tax fee during presale `taxFeeLiquidity` 2%  Initial tax fee during presale This value can be modified by the method {updateTaxesFees}"
      }
    },
    "version": 1
  }
}