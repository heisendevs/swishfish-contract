{
	"id": "d49b2a290c33b23532f718aae00cacad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"metadata": {
				"useLiteralContent": true
			},
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"id",
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Coin2Fish Contract (access/Ownable.sol)\r\n\r\npragma solidity 0.8.15;\r\n\r\nimport \"../utils/Context.sol\";\r\nimport \"../utils/MultiSignature.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context, MultiSignature {\r\n    address private _backend;\r\n    address private _owner;\r\n    address[] private _owners;\r\n    mapping(address => bool) private isOwner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    function requiredConfirmations() internal view returns (uint256) {\r\n        return _owners.length;\r\n    }\r\n    /**\r\n     * @dev Returns the address of the current backend.\r\n     */\r\n    function backend() internal view returns (address) {\r\n        return _backend;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\");\r\n        _;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyBackend() {\r\n        require(backend() == _msgSender(), \"Ownable: caller is not the backend\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if account is an owner.\r\n     */\r\n    function isAnOwner(address account) internal view returns (bool) {\r\n        return isOwner[account];\r\n    }\r\n    /**\r\n     * @dev Returns owner by Index.\r\n     */\r\n    function getOwner(uint256 index) internal view returns (address) {\r\n        return _owners[index];\r\n    }\r\n    /**\r\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function _transferBackend(address newBackend) internal  {\r\n        require(newBackend != address(0), \"Ownable: new owner is the zero address\");\r\n        _backend = newBackend;\r\n        emit OwnershipTransferred(address(0), newBackend);\r\n    }\r\n    /**\r\n     * @dev Set owners of the contract\r\n     * Is Only called in the contract creation\r\n     */\r\n    function _addOwner(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: Owner is the zero address\");\r\n        require(!isOwner[newOwner], \"Ownable: Owner is not unique\");\r\n        isOwner[newOwner] = true;\r\n        _owners.push(newOwner);\r\n        emit OwnershipTransferred(address(0), newOwner);\r\n    }\r\n}\r\n"
			},
			"utils/MultiSignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\r\n\r\npragma solidity 0.8.15;\r\n\r\ncontract MultiSignature {\r\n    event DepositProposal(address indexed sender, uint amount);\r\n    event SubmitProposal(uint indexed proposalId);\r\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\r\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\r\n\r\n    struct Proposal {\r\n        address author;\r\n        bool executed;\r\n        bool updateSalesStatus;\r\n        bool salesEnabled;\r\n        bool swapAndAddLiquidity;\r\n        bool updateWithdrawOptions;\r\n        uint256 withdrawPrice;\r\n        bool updateTaxesFees;\r\n        uint256 heisenVerseTaxFee;\r\n        uint256 marketingTaxFee;\r\n        uint256 teamTaxFee;\r\n        uint256 liquidityTaxFee;\r\n        bool transferBackend;\r\n        address backendAddress;\r\n    }\r\n\r\n    Proposal[] public proposals;\r\n\r\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\r\n    constructor() {}\r\n\r\n    modifier proposalExists(uint _proposalId) {\r\n        require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier proposalNotApproved(uint _proposalId) {\r\n        require(!proposalApproved[_proposalId][msg.sender], \"MultiSignatureWallet: proposal already was approved by owner\");\r\n        _;\r\n    }\r\n\r\n    modifier proposalNotExecuted(uint _proposalId) {\r\n        require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\");\r\n        _;\r\n    }\r\n}\r\n"
			},
			"utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity 0.8.15;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x03\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  dup2\n  dup5\n  log3\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup3\n      calldataload\n      div\n      swap1\n      dup2\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      pop\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      jumpi(tag_9, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_9\n      jumpi\n      0x20\n      and(sload(0x03), 0xffffffffffffffffffffffffffffffffffffffff)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_9:\n      dup1\n      revert\n    tag_3:\n      swap1\n      pop\n      jumpi(tag_13, callvalue)\n      jumpi(tag_13, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup3\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      0x08\n      swap1\n      dup4\n      0x01c0\n      swap5\n      mstore\n      mul\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup2\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      dup5\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup2\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n      dup3\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup4\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap2\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n      dup6\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      swap6\n      dup6\n      0x01000000000000000000000000000000000000000000000000\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap11\n      dup12\n      dup2\n      and\n      dup14\n      mstore\n      dup13\n      0x20\n      dup5\n      0x010000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x40\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n    tag_15:\n      dup3\n      dup1\n      revert\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n    tag_13:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049451e00f569682f645cafe389451991cece3771576fc8305a46f45ac33d161564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608080604052346100515760038054600160a060020a0319163390811790915560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08184a361032090816100578239f35b600080fdfe608080604052600436101561001357600080fd5b6000907c0100000000000000000000000000000000000000000000000000000000823504908163013cf08b146100895750638da5cb5b1461005357600080fd5b34610086578060031936011261008657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b80fd5b9050346102e65760203660031901126102e65760043582548110156102e257600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea264697066735822122049451e00f569682f645cafe389451991cece3771576fc8305a46f45ac33d161564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP5 LOG3 PUSH2 0x320 SWAP1 DUP2 PUSH2 0x57 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV SWAP1 DUP2 PUSH4 0x13CF08B EQ PUSH2 0x89 JUMPI POP PUSH4 0x8DA5CB5B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x86 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x86 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2E6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E6 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 GASLIMIT 0x1E STOP CREATE2 PUSH10 0x682F645CAFE389451991 0xCE 0xCE CALLDATACOPY PUSH18 0x576FC8305A46F45AC33D161564736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "686:2589:0:-:0;;;;;;;1136:18;686:2589;;-1:-1:-1;;;;;;686:2589:0;736:10:1;686:2589:0;;;;;;-1:-1:-1;1170:43:0;-1:-1:-1;1170:43:0;;686:2589;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b6000907c0100000000000000000000000000000000000000000000000000000000823504908163013cf08b146100895750638da5cb5b1461005357600080fd5b34610086578060031936011261008657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b80fd5b9050346102e65760203660031901126102e65760043582548110156102e257600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea264697066735822122049451e00f569682f645cafe389451991cece3771576fc8305a46f45ac33d161564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV SWAP1 DUP2 PUSH4 0x13CF08B EQ PUSH2 0x89 JUMPI POP PUSH4 0x8DA5CB5B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x86 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x86 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2E6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E6 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 GASLIMIT 0x1E STOP CREATE2 PUSH10 0x682F645CAFE389451991 0xCE 0xCE CALLDATACOPY PUSH18 0x576FC8305A46F45AC33D161564736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "686:2589:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;686:2589:0;;;;;;;;887:27:2;;;;;686:2589:0;;;;;;;;;;;887:27:2;;;;686:2589:0;;887:27:2;;;;686:2589:0;;887:27:2;;;;686:2589:0;887:27:2;;;;686:2589:0;887:27:2;;;686:2589:0;887:27:2;;;;;686:2589:0;887:27:2;;686:2589:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:27:2;;;;686:2589:0;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "160000",
								"executionCost": "22021",
								"totalCost": "182021"
							},
							"external": {
								"owner()": "391",
								"proposals(uint256)": "2470"
							},
							"internal": {
								"_addOwner(address)": "infinite",
								"_transferBackend(address)": "infinite",
								"backend()": "infinite",
								"getOwner(uint256)": "infinite",
								"isAnOwner(address)": "infinite",
								"requiredConfirmations()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049451e00f569682f645cafe389451991cece3771576fc8305a46f45ac33d161564736f6c634300080f0033",
									".code": [
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"access/Ownable.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"proposals(uint256)": "013cf08b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (access/Ownable.sol)\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../utils/MultiSignature.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context, MultiSignature {\\r\\n    address private _backend;\\r\\n    address private _owner;\\r\\n    address[] private _owners;\\r\\n    mapping(address => bool) private isOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n    function requiredConfirmations() internal view returns (uint256) {\\r\\n        return _owners.length;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns the address of the current backend.\\r\\n     */\\r\\n    function backend() internal view returns (address) {\\r\\n        return _backend;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner[_msgSender()],  \\\"Ownable: caller is not an owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyBackend() {\\r\\n        require(backend() == _msgSender(), \\\"Ownable: caller is not the backend\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if account is an owner.\\r\\n     */\\r\\n    function isAnOwner(address account) internal view returns (bool) {\\r\\n        return isOwner[account];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns owner by Index.\\r\\n     */\\r\\n    function getOwner(uint256 index) internal view returns (address) {\\r\\n        return _owners[index];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function _transferBackend(address newBackend) internal  {\\r\\n        require(newBackend != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _backend = newBackend;\\r\\n        emit OwnershipTransferred(address(0), newBackend);\\r\\n    }\\r\\n    /**\\r\\n     * @dev Set owners of the contract\\r\\n     * Is Only called in the contract creation\\r\\n     */\\r\\n    function _addOwner(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: Owner is the zero address\\\");\\r\\n        require(!isOwner[newOwner], \\\"Ownable: Owner is not unique\\\");\\r\\n        isOwner[newOwner] = true;\\r\\n        _owners.push(newOwner);\\r\\n        emit OwnershipTransferred(address(0), newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3d3f04a60c04972e7be54ba49c5508105b47dabc11d100ddc2a3368c0587c2a9\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xbff08ae0f5d4b586d588f19d946eb5efd8f9a18a7108b9db792c5e06d10ae2bf\",\"license\":\"MIT\"},\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x170c62536c9215e255236f7df6d8ae308819c3448a2700c48fc3732c6c793d0e\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 281,
								"contract": "access/Ownable.sol:Ownable",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)277_storage)dyn_storage"
							},
							{
								"astId": 287,
								"contract": "access/Ownable.sol:Ownable",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 10,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_backend",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 12,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owners",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 19,
								"contract": "access/Ownable.sol:Ownable",
								"label": "isOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Proposal)277_storage)dyn_storage": {
								"base": "t_struct(Proposal)277_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Proposal)277_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 250,
										"contract": "access/Ownable.sol:Ownable",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 252,
										"contract": "access/Ownable.sol:Ownable",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 254,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 256,
										"contract": "access/Ownable.sol:Ownable",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 258,
										"contract": "access/Ownable.sol:Ownable",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 262,
										"contract": "access/Ownable.sol:Ownable",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 264,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 266,
										"contract": "access/Ownable.sol:Ownable",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 268,
										"contract": "access/Ownable.sol:Ownable",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 270,
										"contract": "access/Ownable.sol:Ownable",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 272,
										"contract": "access/Ownable.sol:Ownable",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 274,
										"contract": "access/Ownable.sol:Ownable",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 276,
										"contract": "access/Ownable.sol:Ownable",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xbff08ae0f5d4b586d588f19d946eb5efd8f9a18a7108b9db792c5e06d10ae2bf\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/MultiSignature.sol": {
				"MultiSignature": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup3\n      calldataload\n      div\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_7, callvalue)\n      jumpi(tag_7, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup3\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      0x08\n      swap1\n      dup4\n      0x01c0\n      swap5\n      mstore\n      mul\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup2\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      dup5\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup2\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n      dup3\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup4\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap2\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n      dup6\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      swap6\n      dup6\n      0x01000000000000000000000000000000000000000000000000\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap11\n      dup12\n      dup2\n      and\n      dup14\n      mstore\n      dup13\n      0x20\n      dup5\n      0x010000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x40\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n    tag_9:\n      dup3\n      dup1\n      revert\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n    tag_7:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220be5bcc78651a9f344a1e76d7b44642504eae7c78d8eeb5d041790f5afd5af0a464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102db908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000907c010000000000000000000000000000000000000000000000000000000082350463013cf08b1461004657600080fd5b346102a15760203660031901126102a157600435825481101561029d57600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea2646970667358221220be5bcc78651a9f344a1e76d7b44642504eae7c78d8eeb5d041790f5afd5af0a464736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2DB SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV PUSH4 0x13CF08B EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A1 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE JUMPDEST 0xCC PUSH25 0x651A9F344A1E76D7B44642504EAE7C78D8EEB5D041790F5AFD GAS CREATE LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "112:1456:2:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b6000907c010000000000000000000000000000000000000000000000000000000082350463013cf08b1461004657600080fd5b346102a15760203660031901126102a157600435825481101561029d57600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea2646970667358221220be5bcc78651a9f344a1e76d7b44642504eae7c78d8eeb5d041790f5afd5af0a464736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV PUSH4 0x13CF08B EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A1 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE JUMPDEST 0xCC PUSH25 0x651A9F344A1E76D7B44642504EAE7C78D8EEB5D041790F5AFD GAS CREATE LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "112:1456:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;112:1456:2;;;;;;;;887:27;;;;;112:1456;;;;;;;;;;;887:27;;;;112:1456;;887:27;;;;112:1456;;887:27;;;;112:1456;887:27;;;;112:1456;887:27;;;112:1456;887:27;;;;;112:1456;887:27;;112:1456;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:27;;;;112:1456;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "146200",
								"executionCost": "196",
								"totalCost": "146396"
							},
							"external": {
								"proposals(uint256)": "2459"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "REVERT",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be5bcc78651a9f344a1e76d7b44642504eae7c78d8eeb5d041790f5afd5af0a464736f6c634300080f0033",
									".code": [
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "13CF08B"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "1C0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "1A0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 914,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"access/Ownable.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"proposals(uint256)": "013cf08b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/MultiSignature.sol\":\"MultiSignature\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x170c62536c9215e255236f7df6d8ae308819c3448a2700c48fc3732c6c793d0e\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 281,
								"contract": "utils/MultiSignature.sol:MultiSignature",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)277_storage)dyn_storage"
							},
							{
								"astId": 287,
								"contract": "utils/MultiSignature.sol:MultiSignature",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)277_storage)dyn_storage": {
								"base": "t_struct(Proposal)277_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Proposal)277_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 250,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 252,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 254,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 256,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 258,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 262,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 264,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 266,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 268,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 270,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 272,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 274,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 276,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"access/Ownable.sol": {
				"ast": {
					"absolutePath": "access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							224
						],
						"MultiSignature": [
							338
						],
						"Ownable": [
							202
						]
					},
					"id": 203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:0"
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 203,
							"sourceUnit": 225,
							"src": "106:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "utils/MultiSignature.sol",
							"file": "../utils/MultiSignature.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 203,
							"sourceUnit": 339,
							"src": "138:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "706:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "MultiSignature",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 338,
										"src": "715:14:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "715:14:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "179:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 202,
							"linearizedBaseContracts": [
								202,
								338,
								224
							],
							"name": "Ownable",
							"nameLocation": "695:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_backend",
									"nameLocation": "753:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 202,
									"src": "737:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "784:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 202,
									"src": "768:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "815:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 202,
									"src": "797:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 13,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 14,
										"nodeType": "ArrayTypeName",
										"src": "797:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "isOwner",
									"nameLocation": "862:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 202,
									"src": "829:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "829:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 17,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "848:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 25,
									"name": "OwnershipTransferred",
									"nameLocation": "882:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "919:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "903:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "950:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "934:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:57:0"
									},
									"src": "876:84:0"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "1082:139:0",
										"statements": [
											{
												"assignments": [
													30
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "1101:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "1093:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 29,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1093:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 31,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1113:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1113:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1093:32:0"
											},
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1136:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 35,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1136:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "1136:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1191:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 39,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1191:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1191:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 43,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1203:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 38,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1170:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "EmitStatement",
												"src": "1165:48:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "968:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 47,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:0"
									},
									"scope": 202,
									"src": "1067:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1349:32:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "1367:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 54,
												"nodeType": "Return",
												"src": "1360:13:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1229:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1311:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:9:0"
									},
									"scope": 202,
									"src": "1302:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1452:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 61,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1470:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 63,
												"nodeType": "Return",
												"src": "1463:21:0"
											}
										]
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requiredConfirmations",
									"nameLocation": "1396:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:9:0"
									},
									"scope": 202,
									"src": "1387:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1624:34:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"name": "_backend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1642:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "1635:15:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1498:69:0",
										"text": " @dev Returns the address of the current backend."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backend",
									"nameLocation": "1582:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:9:0"
									},
									"scope": 202,
									"src": "1573:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1770:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 78,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 81,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 79,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "1797:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1797:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1789:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b6d0df19670ce9d74d6071860854e74d491a0093c7d99e46fae002c9d4c3571",
																"typeString": "literal_string \"Ownable: caller is not an owner\""
															},
															"value": "Ownable: caller is not an owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b6d0df19670ce9d74d6071860854e74d491a0093c7d99e46fae002c9d4c3571",
																"typeString": "literal_string \"Ownable: caller is not an owner\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1781:66:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "1858:1:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1664:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 87,
									"name": "onlyOwner",
									"nameLocation": "1758:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:2:0"
									},
									"src": "1749:118:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1981:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 91,
																	"name": "backend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "2000:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2000:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 93,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2013:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2013:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2000:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b656e64",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d46c274cbe8ea53ac374353ba303ce29994acea6c1d9e568f58b06c758508642",
																"typeString": "literal_string \"Ownable: caller is not the backend\""
															},
															"value": "Ownable: caller is not the backend"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d46c274cbe8ea53ac374353ba303ce29994acea6c1d9e568f58b06c758508642",
																"typeString": "literal_string \"Ownable: caller is not the backend\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1992:72:0"
											},
											{
												"id": 99,
												"nodeType": "PlaceholderStatement",
												"src": "2075:1:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1873:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 101,
									"name": "onlyBackend",
									"nameLocation": "1967:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:2:0"
									},
									"src": "1958:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "2219:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 109,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 111,
													"indexExpression": {
														"id": 110,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2237:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 108,
												"id": 112,
												"nodeType": "Return",
												"src": "2230:23:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "2092:56:0",
										"text": " @dev Throws if account is an owner."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAnOwner",
									"nameLocation": "2163:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:17:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2213:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:6:0"
									},
									"scope": 202,
									"src": "2154:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2387:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 122,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2405:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 124,
													"indexExpression": {
														"id": 123,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "2413:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2405:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 121,
												"id": 125,
												"nodeType": "Return",
												"src": "2398:21:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "2267:49:0",
										"text": " @dev Returns owner by Index."
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2331:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2339:15:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:9:0"
									},
									"scope": 202,
									"src": "2322:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2644:186:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 134,
																"name": "newBackend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "2663:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2685:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 135,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2677:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2677:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2663:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2689:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2655:75:0"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_backend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2741:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "newBackend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2752:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2741:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2741:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2807:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2799:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2799:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "newBackend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2811:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2778:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2778:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "EmitStatement",
												"src": "2773:49:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2433:149:0",
										"text": " @dev Transfers backend Control of the contract to a new account (`newBackend`).\n Can only be called by the current owner."
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBackend",
									"nameLocation": "2597:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "newBackend",
												"nameLocation": "2622:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2614:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:20:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2644:0:0"
									},
									"scope": 202,
									"src": "2588:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "2988:284:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 163,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "3007:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3027:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3019:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 164,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3019:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3007:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a204f776e657220697320746865207a65726f2061646472657373",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3031:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d084375de230cc546b866c6253d28f96190ca0b9b5b3f51477039ab8d760478c",
																"typeString": "literal_string \"Ownable: Owner is the zero address\""
															},
															"value": "Ownable: Owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d084375de230cc546b866c6253d28f96190ca0b9b5b3f51477039ab8d760478c",
																"typeString": "literal_string \"Ownable: Owner is the zero address\""
															}
														],
														"id": 162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2999:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3087:18:0",
															"subExpression": {
																"baseExpression": {
																	"id": 173,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "3088:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 175,
																"indexExpression": {
																	"id": 174,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "3096:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3088:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a204f776e6572206973206e6f7420756e69717565",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3107:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25754d6d77e7be9e21c65850febd109c14007cd1035042c8c674f5440eb9eba8",
																"typeString": "literal_string \"Ownable: Owner is not unique\""
															},
															"value": "Ownable: Owner is not unique"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25754d6d77e7be9e21c65850febd109c14007cd1035042c8c674f5440eb9eba8",
																"typeString": "literal_string \"Ownable: Owner is not unique\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "3079:59:0"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 180,
															"name": "isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "3149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 182,
														"indexExpression": {
															"id": 181,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "3157:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3149:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3169:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3149:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3149:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "3197:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 186,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3184:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3184:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "3184:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3251:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3243:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3243:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "3255:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 192,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3222:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "EmitStatement",
												"src": "3217:47:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "2836:100:0",
										"text": " @dev Set owners of the contract\n Is Only called in the contract creation"
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addOwner",
									"nameLocation": "2951:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2969:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2961:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:18:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:0:0"
									},
									"scope": 202,
									"src": "2942:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 203,
							"src": "686:2589:0",
							"usedErrors": []
						}
					],
					"src": "79:3198:0"
				},
				"id": 0
			},
			"utils/Context.sol": {
				"ast": {
					"absolutePath": "utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							224
						]
					},
					"id": 225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 204,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 205,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "718:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 210,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 209,
												"id": 212,
												"nodeType": "Return",
												"src": "729:17:1"
											}
										]
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 224,
									"src": "656:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "829:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 219,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 218,
												"id": 221,
												"nodeType": "Return",
												"src": "840:15:1"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "813:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:1"
									},
									"scope": 224,
									"src": "762:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 225,
							"src": "623:243:1",
							"usedErrors": []
						}
					],
					"src": "89:779:1"
				},
				"id": 1
			},
			"utils/MultiSignature.sol": {
				"ast": {
					"absolutePath": "utils/MultiSignature.sol",
					"exportedSymbols": {
						"MultiSignature": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 226,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MultiSignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "MultiSignature",
							"nameLocation": "121:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e2d546b974d25b0ea62bb38332411ff2debd385eef5ec2d515baa97cf82ded8e",
									"id": 232,
									"name": "DepositProposal",
									"nameLocation": "149:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "181:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "165:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "194:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "189:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "189:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "164:37:2"
									},
									"src": "143:59:2"
								},
								{
									"anonymous": false,
									"eventSelector": "096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce",
									"id": 236,
									"name": "SubmitProposal",
									"nameLocation": "214:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "242:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "229:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:25:2"
									},
									"src": "208:46:2"
								},
								{
									"anonymous": false,
									"eventSelector": "12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7",
									"id": 242,
									"name": "ApproveProposal",
									"nameLocation": "266:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "298:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "282:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "318:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "305:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "305:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:48:2"
									},
									"src": "260:70:2"
								},
								{
									"anonymous": false,
									"eventSelector": "b8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb",
									"id": 248,
									"name": "RevokeProposal",
									"nameLocation": "342:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "373:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "357:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "393:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "380:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:48:2"
									},
									"src": "336:69:2"
								},
								{
									"canonicalName": "MultiSignature.Proposal",
									"id": 277,
									"members": [
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "author",
											"nameLocation": "448:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "440:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 249,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "470:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "465:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 251,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "465:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "updateSalesStatus",
											"nameLocation": "494:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "489:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 253,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "489:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 256,
											"mutability": "mutable",
											"name": "salesEnabled",
											"nameLocation": "527:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "522:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 255,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "522:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "swapAndAddLiquidity",
											"nameLocation": "555:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "550:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 257,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "550:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 260,
											"mutability": "mutable",
											"name": "updateWithdrawOptions",
											"nameLocation": "590:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "585:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 259,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "585:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 262,
											"mutability": "mutable",
											"name": "withdrawPrice",
											"nameLocation": "630:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "622:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 261,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "622:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "updateTaxesFees",
											"nameLocation": "659:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "654:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 263,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "654:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 266,
											"mutability": "mutable",
											"name": "heisenVerseTaxFee",
											"nameLocation": "693:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "685:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 265,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 268,
											"mutability": "mutable",
											"name": "marketingTaxFee",
											"nameLocation": "729:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "721:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 270,
											"mutability": "mutable",
											"name": "teamTaxFee",
											"nameLocation": "763:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "755:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "755:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "liquidityTaxFee",
											"nameLocation": "792:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "784:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "transferBackend",
											"nameLocation": "823:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "818:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 273,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "818:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "backendAddress",
											"nameLocation": "857:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "849:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "420:8:2",
									"nodeType": "StructDefinition",
									"scope": 338,
									"src": "413:466:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 281,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "905:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "887:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$277_storage_$dyn_storage",
										"typeString": "struct MultiSignature.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 279,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 278,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "887:8:2"
											},
											"referencedDeclaration": 277,
											"src": "887:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$277_storage_ptr",
												"typeString": "struct MultiSignature.Proposal"
											}
										},
										"id": 280,
										"nodeType": "ArrayTypeName",
										"src": "887:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$277_storage_$dyn_storage_ptr",
											"typeString": "struct MultiSignature.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "proposalApproved",
									"nameLocation": "974:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "923:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 286,
										"keyType": {
											"id": 282,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "931:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "923:41:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 285,
											"keyType": {
												"id": 283,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "947:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "939:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 284,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "958:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "1011:2:2",
										"statements": []
									},
									"id": 291,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:2"
									},
									"scope": 338,
									"src": "997:16:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1063:119:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "1082:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 297,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "1096:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$277_storage_$dyn_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1096:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1082:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c20646f6573206e6f74206578697374",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7134604142226820b0c8fedb24fd81f2d2a42b34b5fe14d1293b8ecab78336e8",
																"typeString": "literal_string \"MultiSignatureWallet: proposal does not exist\""
															},
															"value": "MultiSignatureWallet: proposal does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7134604142226820b0c8fedb24fd81f2d2a42b34b5fe14d1293b8ecab78336e8",
																"typeString": "literal_string \"MultiSignatureWallet: proposal does not exist\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:88:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1074:88:2"
											},
											{
												"id": 303,
												"nodeType": "PlaceholderStatement",
												"src": "1173:1:2"
											}
										]
									},
									"id": 305,
									"name": "proposalExists",
									"nameLocation": "1030:14:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1050:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1045:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:18:2"
									},
									"src": "1021:161:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "1237:146:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1256:42:2",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 310,
																		"name": "proposalApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "1257:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 312,
																	"indexExpression": {
																		"id": 311,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "1274:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1257:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 315,
																"indexExpression": {
																	"expression": {
																		"id": 313,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1287:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1287:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1257:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c20616c72656164792077617320617070726f766564206279206f776e6572",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1300:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa7cad984062c30132dfca98f4b20d3f464e95f2262414c65f15a47ba92265db",
																"typeString": "literal_string \"MultiSignatureWallet: proposal already was approved by owner\""
															},
															"value": "MultiSignatureWallet: proposal already was approved by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa7cad984062c30132dfca98f4b20d3f464e95f2262414c65f15a47ba92265db",
																"typeString": "literal_string \"MultiSignatureWallet: proposal already was approved by owner\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:115:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1248:115:2"
											},
											{
												"id": 320,
												"nodeType": "PlaceholderStatement",
												"src": "1374:1:2"
											}
										]
									},
									"id": 322,
									"name": "proposalNotApproved",
									"nameLocation": "1199:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1224:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1219:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1219:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:18:2"
									},
									"src": "1190:193:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "1438:127:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1457:32:2",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 327,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1458:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$277_storage_$dyn_storage",
																			"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 329,
																	"indexExpression": {
																		"id": 328,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "1468:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1458:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$277_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "1458:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077617320616c7265616479206578656375746564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1491:53:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a43ebb18702115f1ad81dad5a175aeb8cc974aa6cca1c9f507bbd0bec3a0b11",
																"typeString": "literal_string \"MultiSignatureWallet: proposal was already executed\""
															},
															"value": "MultiSignatureWallet: proposal was already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a43ebb18702115f1ad81dad5a175aeb8cc974aa6cca1c9f507bbd0bec3a0b11",
																"typeString": "literal_string \"MultiSignatureWallet: proposal was already executed\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1449:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1449:96:2"
											},
											{
												"id": 335,
												"nodeType": "PlaceholderStatement",
												"src": "1556:1:2"
											}
										]
									},
									"id": 337,
									"name": "proposalNotExecuted",
									"nameLocation": "1400:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1425:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1420:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1420:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:18:2"
									},
									"src": "1391:174:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 339,
							"src": "112:1456:2",
							"usedErrors": []
						}
					],
					"src": "85:1485:2"
				},
				"id": 2
			}
		}
	}
}