{
	"id": "3ac6283c992d700f725b983632cc5aeb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"metadata": {
				"useLiteralContent": true
			},
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"id",
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"SwishFishToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// SwishFish Contract (SwishFishToken.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"./contracts/ERC20.sol\";\r\nimport \"./access/Ownable.sol\";\r\nimport \"./interfaces/IUniswapV2Factory.sol\";\r\nimport \"./interfaces/IUniswapV2Router02.sol\";\r\n\r\n/**\r\n * @title SwishFish Contract for SwishFish Token\r\n * @author HeisenDev\r\n */\r\ncontract SwishFish is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n\r\n    /**\r\n     * Definition of the token parameters\r\n     */\r\n    uint private _tokenTotalSupply = 1000000000 * 10 ** 18;\r\n\r\n    bool public salesEnabled = false;\r\n    bool private firstLiquidityEnabled = true;\r\n\r\n\r\n    mapping(address => uint256) private _authorizedWithdraws;\r\n    mapping(address => uint256) private _accountTransactionLast;\r\n    mapping(address => uint256) private _accountTransactionCount;\r\n    mapping(address => uint256) private _accountWithdrawalLast;\r\n    mapping(address => uint256) private _accountWithdrawalCount;\r\n\r\n\r\n    uint public withdrawPrice = 0.005 ether;\r\n    uint256 private _maxTransactionCount = 1;\r\n    uint256 private _maxWithdrawalCount = 1;\r\n    uint256 private _maxTransactionWithdrawAmount = 100000 ether;\r\n\r\n    /**\r\n     * Definition of the Project Wallets\r\n     * `addressHeisenDev` Corresponds to the wallet address where the development\r\n     * team will receive their payments\r\n     * `addressMarketing` Corresponds to the wallet address where the funds\r\n     * for marketing will be received\r\n     * `addressTeam` Represents the wallet where teams and other\r\n     * collaborators will receive their payments\r\n     */\r\n\r\n    address payable public addressHeisenDev = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338);\r\n    address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61);\r\n    address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B);\r\n\r\n    /**\r\n     * Definition of the taxes fees for swaps\r\n     * `taxFeeHeisenDev` 2%  Initial tax fee during presale\r\n     * `taxFeeMarketing` 3%  Initial tax fee during presale\r\n     * `taxFeeTeam` 3%  Initial tax fee during presale\r\n     * `taxFeeLiquidity` 2%  Initial tax fee during presale\r\n     * This value can be modified by the method {updateTaxesFees}\r\n     */\r\n    uint256 public taxFeeHeisenDev = 2;\r\n    uint256 public taxFeeMarketing = 3;\r\n    uint256 public taxFeeTeam = 3;\r\n    uint256 public taxFeeLiquidity = 2;\r\n\r\n    /**\r\n     * Definition of pools\r\n     * `_poolHeisenDev`\r\n     * `_poolMarketing`\r\n     * `_poolTeam`\r\n     * `_poolLiquidity`\r\n     */\r\n    uint256 public _poolHeisenDev = 0;\r\n    uint256 public _poolMarketing = 0;\r\n    uint256 public _poolTeam = 0;\r\n    uint256 public _poolLiquidity = 0;\r\n\r\n    mapping(address => bool) private _isExcludedFromFees;\r\n    mapping(address => bool) private _isExcludedFromLimits;\r\n    mapping(address => bool) private automatedMarketMakerPairs;\r\n\r\n    event Deposit(address indexed sender, uint amount);\r\n    event BuyEgg();\r\n    event SalesState(bool status);\r\n    event Withdraw(uint amount);\r\n    event TeamPayment(uint amount);\r\n    event FirstLiquidityAdded(\r\n        uint256 bnb\r\n    );\r\n    event LiquidityAdded(\r\n        uint256 bnb\r\n    );\r\n    event UpdateTaxesFees(\r\n        uint256 taxFeeHeisenDev,\r\n        uint256 taxFeeMarketing,\r\n        uint256 taxFeeTeam,\r\n        uint256 taxFeeLiquidity\r\n    );\r\n    event UpdateWithdrawOptions(\r\n        uint256 withdrawPrice\r\n    );\r\n    constructor(address _owner1, address _owner2, address _owner3, address _backend) {\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\r\n        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n        .createPair(address(this), _uniswapV2Router.WETH());\r\n\r\n        uniswapV2Router = _uniswapV2Router;\r\n\r\n        automatedMarketMakerPairs[_uniswapV2Pair] = true;\r\n        _isExcludedFromFees[address(this)] = true;\r\n        _isExcludedFromFees[addressHeisenDev] = true;\r\n        _isExcludedFromFees[addressMarketing] = true;\r\n        _isExcludedFromFees[addressTeam] = true;\r\n\r\n        _isExcludedFromLimits[address(this)] = true;\r\n        _isExcludedFromLimits[_uniswapV2Pair] = true;\r\n        /*\r\n            _setOwners is an internal function in Ownable.sol that is only called here,\r\n            and CANNOT be called ever again\r\n        */\r\n        _addOwner(_owner1);\r\n        _addOwner(_owner2);\r\n        _addOwner(_owner3);\r\n        /*\r\n            _transferBackend is an internal function in Ownable.sol\r\n        */\r\n        _transferBackend(_backend);\r\n        /*\r\n            _mint is an internal function in ERC20.sol that is only called here,\r\n            and CANNOT be called ever again\r\n        */\r\n        _mint(address(this), _tokenTotalSupply);\r\n    }\r\n\r\n    /// @dev Fallback function allows to deposit ether.\r\n    receive() external payable {\r\n        if (msg.value > 0) {\r\n            emit Deposit(_msgSender(), msg.value);\r\n        }\r\n    }\r\n\r\n    function buy() external payable {\r\n        require(salesEnabled, \"Presale isn't enabled\");\r\n        uint256 liquidityTokens = balanceOf(address(this)).mul(10).div(100);\r\n        addLiquidity(liquidityTokens, msg.value);\r\n        emit BuyEgg();\r\n    }\r\n    function firstLiquidity(uint256 tokens) external payable onlyOwner {\r\n        require(firstLiquidityEnabled, \"Presale isn't enabled\");\r\n        firstLiquidityEnabled = false;\r\n        addLiquidity(tokens, msg.value);\r\n        emit FirstLiquidityAdded(msg.value);\r\n    }\r\n    function teamPayment() external onlyOwner {\r\n        super._transfer(address(this), addressHeisenDev, _poolHeisenDev);\r\n        super._transfer(address(this), addressMarketing, _poolMarketing);\r\n        super._transfer(address(this), addressTeam, _poolTeam);\r\n        uint256 amount = _poolHeisenDev + _poolMarketing + _poolTeam;\r\n        _poolHeisenDev = 0;\r\n        _poolMarketing = 0;\r\n        _poolTeam = 0;\r\n        (bool sent, ) = addressHeisenDev.call{value: address(this).balance}(\"\");\r\n        require(sent, \"Failed to send BNB\");\r\n        emit TeamPayment(amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        bool takeFee = !(_isExcludedFromFees[from] || _isExcludedFromFees[to]);\r\n\r\n        if (takeFee && automatedMarketMakerPairs[from]) {\r\n            uint256 liquidityAmount = amount.mul(taxFeeLiquidity).div(100);\r\n            _poolLiquidity = _poolLiquidity.add(liquidityAmount);\r\n            swapAndAddLiquidityTokens(amount);\r\n        }\r\n        super._transfer(from, to, amount);\r\n    }\r\n\r\n    function swapAndAddLiquidity() private {\r\n        uint256 contractBalance = address(this).balance;\r\n        swapTokensForEth(_poolLiquidity);\r\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\r\n        addLiquidity(liquidityTokens, contractBalance);\r\n        _poolLiquidity = 0;\r\n    }\r\n    function swapAndAddLiquidityTokens(uint256 _tokenAmount) private {\r\n        uint256 contractBalance = address(this).balance;\r\n        swapTokensForEth(_tokenAmount);\r\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\r\n        addLiquidity(liquidityTokens, contractBalance);\r\n        _poolLiquidity = 0;\r\n    }\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function updateTaxesFees(uint256 _heisenVerseTaxFee, uint256 _marketingTaxFee, uint256 _teamTaxFee, uint256 _liquidityTaxFee) private {\r\n        taxFeeHeisenDev = _heisenVerseTaxFee;\r\n        taxFeeMarketing = _marketingTaxFee;\r\n        taxFeeTeam = _teamTaxFee;\r\n        taxFeeLiquidity = _liquidityTaxFee;\r\n        emit UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee);\r\n    }\r\n\r\n    function updateWithdrawOptions(uint256 _withdrawPrice) private {\r\n        withdrawPrice = _withdrawPrice;\r\n        emit UpdateWithdrawOptions(_withdrawPrice);\r\n    }\r\n\r\n    function updateSalesStatus(bool _salesEnabled) private {\r\n        salesEnabled = _salesEnabled;\r\n        emit SalesState(_salesEnabled);\r\n    }\r\n\r\n    function addLiquidity(uint256 tokens, uint256 bnb) private {\r\n        _approve(address(this), address(uniswapV2Router), balanceOf(address(this)));\r\n        uniswapV2Router.addLiquidityETH{value : bnb}(\r\n            address(this),\r\n            tokens,\r\n            0,\r\n            0,\r\n            address(this),\r\n            block.timestamp.add(300)\r\n        );\r\n        emit LiquidityAdded(bnb);\r\n    }\r\n\r\n    function withdrawAuthorization(address to, uint256 amount, uint256 fee) external onlyBackend {\r\n        require(!isAnOwner(to), \"Owners can't make withdrawals\");\r\n        require(to != backend(), \"Backend can't make withdrawals\");\r\n        require(to != addressHeisenDev, \"Heisen can't make withdrawals\");\r\n        require(to != addressMarketing, \"Skyler can't make withdrawals\");\r\n        require(to != addressTeam, \"Team can't make withdrawals\");\r\n        require(fee <= 75, \"The fee cannot exceed 75%\");\r\n        require(_authorizedWithdraws[to] == 0, \"User has pending Withdrawals\");\r\n        require(amount <= _maxTransactionWithdrawAmount, \"Amount can't exceeds the max transaction withdraw amount\");\r\n\r\n        uint256 amountFee = amount.mul(fee).div(100);\r\n        uint256 totalTaxes = taxFeeHeisenDev + taxFeeMarketing + taxFeeTeam;\r\n        if (totalTaxes == 0) {\r\n            _poolHeisenDev = _poolHeisenDev.add(amountFee);\r\n        }\r\n        else {\r\n            uint256 currentTaxFeeHeisenDev = taxFeeHeisenDev.mul(100).div(totalTaxes);\r\n            uint256 currentTaxFeeMarketing = taxFeeMarketing.mul(100).div(totalTaxes);\r\n            uint256 currentTaxFeeTeam = taxFeeTeam.mul(100).div(totalTaxes);\r\n            uint256 heisenVerseAmount = amountFee.mul(currentTaxFeeHeisenDev).div(100);\r\n            uint256 marketingAmount = amountFee.mul(currentTaxFeeMarketing).div(100);\r\n            uint256 teamAmount = amountFee.mul(currentTaxFeeTeam).div(100);\r\n\r\n            amount = amount.sub(heisenVerseAmount);\r\n            amount = amount.sub(marketingAmount);\r\n            amount = amount.sub(teamAmount);\r\n\r\n            _poolHeisenDev = _poolHeisenDev.add(heisenVerseAmount);\r\n            _poolMarketing = _poolMarketing.add(marketingAmount);\r\n            _poolTeam = _poolTeam.add(teamAmount);\r\n        }\r\n        _authorizedWithdraws[to] = amount;\r\n    }\r\n\r\n    function withdrawAllowance(address account) external view returns (uint256) {\r\n        return _authorizedWithdraws[account];\r\n    }\r\n\r\n    function isUnderDailyWithdrawalLimit(address account) internal returns (bool) {\r\n        if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {\r\n            _accountWithdrawalLast[account] = block.timestamp;\r\n            _accountWithdrawalCount[account] = 0;\r\n        }\r\n        _accountWithdrawalCount[account] = _accountWithdrawalCount[account].add(1);\r\n        return (_accountWithdrawalCount[account] <= _maxWithdrawalCount);\r\n    }\r\n\r\n    function withdraw() external payable {\r\n        require(isUnderDailyWithdrawalLimit(_msgSender()), \"You cannot make more than one withdrawal per day\");\r\n        require(msg.value >= (withdrawPrice), \"The amount sent is not equal to the BNB amount required for withdraw\");\r\n        uint256 amount = _authorizedWithdraws[_msgSender()];\r\n        super._transfer(address(this), _msgSender(), amount);\r\n        _authorizedWithdraws[_msgSender()] = 0;\r\n        emit Withdraw(amount);\r\n    }\r\n    function submitProposal(\r\n        bool _updateEggSales,\r\n        bool _salesEnabled,\r\n        bool _swapAndAddLiquidity,\r\n        bool _updateWithdrawOptions,\r\n        uint256 _withdrawPrice,\r\n        bool _updateTaxesFees,\r\n        uint256 _heisenVerseTaxFee,\r\n        uint256 _marketingTaxFee,\r\n        uint256 _teamTaxFee,\r\n        uint256 _liquidityTaxFee,\r\n        bool _transferBackend,\r\n        address _backendAddress\r\n    ) external onlyOwner {\r\n        if (_updateWithdrawOptions) {\r\n            require(withdrawPrice <= 5000000000000000, \"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\");\r\n        }\r\n        if (_updateTaxesFees) {\r\n            uint256 sellTotalFees = _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee;\r\n            require(sellTotalFees <= 10, \"MultiSignatureWallet: Must keep fees at 10% or less\");\r\n        }\r\n        if (_transferBackend) {\r\n            require(_backendAddress != address(0), \"MultiSignatureWallet: new owner is the zero address\");\r\n        }\r\n        proposals.push(Proposal({\r\n        author: _msgSender(),\r\n        executed: false,\r\n        updateSalesStatus: _updateEggSales,\r\n        salesEnabled: _salesEnabled,\r\n        swapAndAddLiquidity: _swapAndAddLiquidity,\r\n        updateWithdrawOptions: _updateWithdrawOptions,\r\n        withdrawPrice: _withdrawPrice,\r\n        updateTaxesFees: _updateTaxesFees,\r\n        heisenVerseTaxFee: _heisenVerseTaxFee,\r\n        marketingTaxFee: _marketingTaxFee,\r\n        teamTaxFee: _teamTaxFee,\r\n        liquidityTaxFee: _liquidityTaxFee,\r\n        transferBackend: _transferBackend,\r\n        backendAddress: _backendAddress\r\n        }));\r\n        emit SubmitProposal(proposals.length - 1);\r\n    }\r\n\r\n    function approveProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotApproved(_proposalId) proposalNotExecuted(_proposalId)\r\n    {\r\n        proposalApproved[_proposalId][_msgSender()] = true;\r\n        emit ApproveProposal(_msgSender(), _proposalId);\r\n    }\r\n\r\n    function _getApprovalCount(uint _proposalId) private view returns (uint256) {\r\n        uint256 count = 0;\r\n        for (uint i; i < requiredConfirmations(); i++) {\r\n            if (proposalApproved[_proposalId][getOwner(i)]) {\r\n                count += 1;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    function executeProposal(uint _proposalId) external proposalExists(_proposalId) proposalNotExecuted(_proposalId) {\r\n        require(_getApprovalCount(_proposalId) >= requiredConfirmations(), \"MultiSignatureWallet: approvals is less than required\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        proposal.executed = true;\r\n        if (proposal.updateSalesStatus) {\r\n            updateSalesStatus(proposal.salesEnabled);\r\n        }\r\n        if (proposal.swapAndAddLiquidity) {\r\n            swapAndAddLiquidity();\r\n        }\r\n        if (proposal.updateWithdrawOptions) {\r\n            updateWithdrawOptions(proposal.withdrawPrice);\r\n        }\r\n        if (proposal.updateTaxesFees) {\r\n            updateTaxesFees(proposal.heisenVerseTaxFee ,proposal.marketingTaxFee ,proposal.teamTaxFee ,proposal.liquidityTaxFee);\r\n        }\r\n        if (proposal.transferBackend) {\r\n            _transferBackend(proposal.backendAddress);\r\n        }\r\n    }\r\n\r\n    function revokeProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotExecuted(_proposalId)\r\n    {\r\n        require(proposalApproved[_proposalId][_msgSender()], \"MultiSignatureWallet: Proposal is not approved\");\r\n        proposalApproved[_proposalId][_msgSender()] = false;\r\n        emit RevokeProposal(_msgSender(), _proposalId);\r\n    }\r\n}\r\n"
			},
			"interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"./IUniswapV2Router01.sol\";\r\n\r\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountETH);\r\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountETH);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n"
			},
			"interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToSetter(address) external;\r\n}\r\n"
			},
			"access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Coin2Fish Contract (access/Ownable.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"../utils/Context.sol\";\r\nimport \"../utils/MultiSignature.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context, MultiSignature {\r\n    address private _backend;\r\n    address private _owner;\r\n    address[] private _owners;\r\n    mapping(address => bool) private isOwner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    function requiredConfirmations() internal view returns (uint256) {\r\n        return _owners.length;\r\n    }\r\n    /**\r\n     * @dev Returns the address of the current backend.\r\n     */\r\n    function backend() internal view returns (address) {\r\n        return _backend;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\");\r\n        _;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyBackend() {\r\n        require(backend() == _msgSender(), \"Ownable: caller is not the backend\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if account is an owner.\r\n     */\r\n    function isAnOwner(address account) internal view returns (bool) {\r\n        return isOwner[account];\r\n    }\r\n    /**\r\n     * @dev Returns owner by Index.\r\n     */\r\n    function getOwner(uint256 index) internal view returns (address) {\r\n        return _owners[index];\r\n    }\r\n    /**\r\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function _transferBackend(address newBackend) internal  {\r\n        require(newBackend != address(0), \"Ownable: new owner is the zero address\");\r\n        _backend = newBackend;\r\n        emit OwnershipTransferred(address(0), newBackend);\r\n    }\r\n    /**\r\n     * @dev Set owners of the contract\r\n     * Is Only called in the contract creation\r\n     */\r\n    function _addOwner(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: Owner is the zero address\");\r\n        require(!isOwner[newOwner], \"Ownable: Owner is not unique\");\r\n        isOwner[newOwner] = true;\r\n        _owners.push(newOwner);\r\n        emit OwnershipTransferred(address(0), newOwner);\r\n    }\r\n}\r\n"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"../utils/Context.sol\";\r\nimport \"../interfaces/IERC20.sol\";\r\nimport \"../interfaces/IERC20Metadata.sol\";\r\nimport \"../libraries/SafeMath.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor() {\r\n        _name = \"SwishFish\";\r\n        _symbol = \"SFH\";\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n    unchecked {\r\n        _approve(owner, spender, currentAllowance.sub(subtractedValue));\r\n    }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n    unchecked {\r\n        _balances[from] = fromBalance.sub(amount);\r\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n        // decrementing then incrementing.\r\n        _balances[to] = _balances[to].add(amount);\r\n    }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n    unchecked {\r\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n        _balances[account] = _balances[account].add(amount);\r\n    }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = _balances[account].sub(amount);\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply = _totalSupply.sub(amount);\r\n        }\r\n        emit Transfer(account, address(0), amount);\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance.sub(amount));\r\n        }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\ninterface IUniswapV2Router01 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETH(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function removeLiquidityWithPermit(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETHWithPermit(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapTokensForExactTokens(\r\n        uint amountOut,\r\n        uint amountInMax,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n    external\r\n    payable\r\n    returns (uint[] memory amounts);\r\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n    external\r\n    returns (uint[] memory amounts);\r\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n    external\r\n    returns (uint[] memory amounts);\r\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n    external\r\n    payable\r\n    returns (uint[] memory amounts);\r\n\r\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n}\r\n"
			},
			"libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"interfaces/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			},
			"utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"utils/MultiSignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\ncontract MultiSignature {\r\n    event DepositProposal(address indexed sender, uint amount);\r\n    event SubmitProposal(uint indexed proposalId);\r\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\r\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\r\n\r\n    struct Proposal {\r\n        address author;\r\n        bool executed;\r\n        bool updateSalesStatus;\r\n        bool salesEnabled;\r\n        bool swapAndAddLiquidity;\r\n        bool updateWithdrawOptions;\r\n        uint256 withdrawPrice;\r\n        bool updateTaxesFees;\r\n        uint256 heisenVerseTaxFee;\r\n        uint256 marketingTaxFee;\r\n        uint256 teamTaxFee;\r\n        uint256 liquidityTaxFee;\r\n        bool transferBackend;\r\n        address backendAddress;\r\n    }\r\n\r\n    Proposal[] public proposals;\r\n\r\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\r\n    constructor() {}\r\n\r\n    modifier proposalExists(uint _proposalId) {\r\n        require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier proposalNotApproved(uint _proposalId) {\r\n        require(!proposalApproved[_proposalId][msg.sender], \"MultiSignatureWallet: proposal already was approved by owner\");\r\n        _;\r\n    }\r\n\r\n    modifier proposalNotExecuted(uint _proposalId) {\r\n        require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\");\r\n        _;\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"SwishFishToken.sol": {
				"SwishFish": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner3",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_backend",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "BuyEgg",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bnb",
									"type": "uint256"
								}
							],
							"name": "FirstLiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bnb",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "SalesState",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TeamPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeHeisenDev",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeMarketing",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeTeam",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeLiquidity",
									"type": "uint256"
								}
							],
							"name": "UpdateTaxesFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								}
							],
							"name": "UpdateWithdrawOptions",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_poolHeisenDev",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_poolLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_poolMarketing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_poolTeam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addressHeisenDev",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addressMarketing",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addressTeam",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_proposalId",
									"type": "uint256"
								}
							],
							"name": "approveProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "firstLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_proposalId",
									"type": "uint256"
								}
							],
							"name": "revokeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "salesEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_updateEggSales",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_backendAddress",
									"type": "address"
								}
							],
							"name": "submitProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeHeisenDev",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeMarketing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeTeam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamPayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "withdrawAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "withdrawAuthorization",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "HeisenDev",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "SwishFish Contract for SwishFish Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_9, callvalue)\n  0x80\n  dup2\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_8\n  dup3\n  dup6\n  tag_1\n  jump\t// in\ntag_8:\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_9\n  jumpi\n  tag_11\n  dup2\n  tag_2\n  jump\t// in\ntag_11:\n  0x20\n  tag_12\n  dup2\n  dup5\n  add\n  tag_2\n  jump\t// in\ntag_12:\n  swap2\n  tag_13\n  0x60\n  tag_14\n  dup8\n  dup8\n  add\n  tag_2\n  jump\t// in\ntag_14:\n  swap6\n  add\n  tag_2\n  jump\t// in\ntag_13:\n  tag_15\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  tag_3\n  jump\t// in\ntag_15:\n  swap1\n  0x1f\n  swap2\n  dup3\n  dup2\n  gt\n  tag_16\n  jumpi\ntag_17:\n  pop\n  add(0x5377697368466973680000000000000000000000000000000000000000000000, 0x12)\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap6\n  tag_18\n  dup8\n  sload\n  tag_3\n  jump\t// in\ntag_18:\n  dup4\n  dup2\n  gt\n  tag_19\n  jumpi\ntag_20:\n  pop\n  add(0x5346480000000000000000000000000000000000000000000000000000000000, 0x06)\n  dup8\n  sstore\n  not(sub(exp(0x02, 0xa0), 0x01))\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  swap2\n  caller\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup4\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x08\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x08\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup9\n  mload\n  swap2\n  0x00\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  swap8\n  0x00\n  dup1\n  mload\n  0x20\n  data_9c064737b570a74c2bac5d21056d93ac53115214216cd14d4a0fc9b60be81231\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  swap7\n  caller\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  dup11\n  dup10\n  dup2\n  dup1\n  log3\n    /* \"SwishFishToken.sol\":569:590  1000000000 * 10 ** 18 */\n  0x033b2e3c9fd0803ce8000000\n  0x0c\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x0100\n  not(0xffff)\n    /* \"SwishFishToken.sol\":626:631  false */\n  0x0d\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":626:631  false */\n  0x0d\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1049:1060  0.005 ether */\n  0x11c37937e08000\n  0x13\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x01\n  dup1\n    /* \"SwishFishToken.sol\":1106:1107  1 */\n  0x14\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup1\n    /* \"SwishFishToken.sol\":1152:1153  1 */\n  0x15\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1208:1220  100000 ether */\n  0x152d02c7e14af6800000\n  0x16\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1697:1739  0xEDa73409d4bBD147f4E1295A73a2Ca243a529338 */\n  0xeda73409d4bbd147f4e1295a73a2ca243a529338\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup8\n    /* \"SwishFishToken.sol\":1689:1740  payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n  0x17\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":1689:1740  payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n  0x17\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1797:1839  0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61 */\n  0x3c1cd83d8850803c9c42ff5083f56b66b00fbd61\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup8\n    /* \"SwishFishToken.sol\":1789:1840  payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n  0x18\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":1789:1840  payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n  0x18\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1892:1934  0x63024aC73FE77427F20e8247FA26F470C0D9700B */\n  0x63024ac73fe77427f20e8247fa26f470c0d9700b\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup8\n    /* \"SwishFishToken.sol\":1884:1935  payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n  0x19\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":1884:1935  payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n  0x19\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x02\n    /* \"SwishFishToken.sol\":2348:2349  2 */\n  0x1a\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":2389:2390  3 */\n  0x1b\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":2425:2426  3 */\n  0x1c\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x02\n    /* \"SwishFishToken.sol\":2466:2467  2 */\n  0x1d\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup11\n    /* \"SwishFishToken.sol\":2649:2650  0 */\n  0x1e\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup11\n  dup9\n  sstore\n  dup11\n  dup11\n  sstore\n  dup11\n    /* \"SwishFishToken.sol\":2764:2765  0 */\n  0x21\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0xc45a015500000000000000000000000000000000000000000000000000000000\n    /* \"SwishFishToken.sol\":3748:3774  _uniswapV2Router.factory() */\n  dup7\n  mstore\n    /* \"SwishFishToken.sol\":3651:3693  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  dup12\n  dup11\n  dup8\n  0x9ac64cc6e4415144c455bd8e4837fea55603e5c3\n    /* \"SwishFishToken.sol\":3748:3774  _uniswapV2Router.factory() */\n  swap3\n  dup2\n  dup5\n  gas\n  staticcall\n  swap7\n  dup8\n  iszero\n  tag_21\n  jumpi\n  dup12\n  dup16\n  dup16\n  swap3\n  dup16\n  swap11\n  tag_23\n  jumpi\ntag_24:\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  pop\n  mload\n    /* \"SwishFishToken.sol\":3812:3835  _uniswapV2Router.WETH() */\n  dup1\n  swap3\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  0xad5c464800000000000000000000000000000000000000000000000000000000\n    /* \"SwishFishToken.sol\":3812:3835  _uniswapV2Router.WETH() */\n  dup3\n  mstore\n  dup2\n  dup6\n  gas\n  staticcall\n  swap1\n  dup2\n  iszero\n  tag_29\n  jumpi\n  dup16\n  swap2\n  dup16\n  dup16\n  swap5\n  swap4\n  dup16\n  swap4\n  dup7\n  swap4\n  tag_27\n  jumpi\ntag_28:\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  pop\n  swap1\n  0x44\n  swap2\n  mload\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  swap6\n  dup7\n  swap4\n  dup5\n  swap3\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  0xc9c6539600000000000000000000000000000000000000000000000000000000\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  dup5\n  mstore\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  address\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  swap1\n  dup5\n  add\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  mstore\n  sub(exp(0x02, 0xa0), 0x01)\n  swap14\n  dup15\n  dup1\n  swap3\n  and\n  0x24\n  dup6\n  add\n  mstore\n  and\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  gas\n  call\n  swap2\n  dup3\n  iszero\n  tag_29\n  jumpi\n  dup16\n  swap2\n  dup10\n  swap5\n  swap4\n  dup16\n  swap3\n  swap2\n  dup16\n  swap3\n  dup14\n  swap1\n  dup6\n  swap4\n  tag_31\n  jumpi\ntag_32:\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  pop\n  swap3\n    /* \"SwishFishToken.sol\":4169:4190  _isExcludedFromLimits */\n  0x23\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup9\n    /* \"SwishFishToken.sol\":4475:4482  _owner2 */\n  tag_35\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap11\n  swap8\n  swap5\n    /* \"SwishFishToken.sol\":4504:4511  _owner3 */\n  tag_34\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap14\n  swap13\n  swap11\n  swap8\n  swap5\n    /* \"SwishFishToken.sol\":4446:4453  _owner1 */\n  tag_35\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap11\n  swap8\n    /* \"SwishFishToken.sol\":3849:3883  uniswapV2Router = _uniswapV2Router */\n  0x0b\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":3849:3883  uniswapV2Router = _uniswapV2Router */\n  0x0b\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  and\n  swap2\n  dup3\n  dup5\n  mstore\n  0x24\n  dup2\n  mstore\n  dup5\n  dup5\n  keccak256\n  swap7\n  not(0xff)\n  swap8\n  dup8\n  dup10\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  address\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup6\n  mstore\n    /* \"SwishFishToken.sol\":3955:3974  _isExcludedFromFees */\n  0x22\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup3\n  mstore\n  dup6\n  dup6\n  keccak256\n  dup8\n  dup10\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n  dup1\n    /* \"SwishFishToken.sol\":1689:1740  payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n  0x17\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  dup6\n  mstore\n  dup6\n  dup6\n  keccak256\n  dup8\n  dup10\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n  dup1\n    /* \"SwishFishToken.sol\":1789:1840  payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n  0x18\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  dup6\n  mstore\n  dup6\n  dup6\n  keccak256\n  dup8\n  dup10\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":1884:1935  payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n  0x19\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  dup5\n  mstore\n  dup5\n  dup5\n  keccak256\n  dup7\n  dup9\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  address\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  mstore\n  mstore\n  dup3\n  dup3\n  keccak256\n  dup5\n  dup7\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n  dup2\n  mstore\n  keccak256\n  swap2\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":4446:4453  _owner1 */\n  tag_4\n  jump\t// in\ntag_35:\n    /* \"SwishFishToken.sol\":4475:4482  _owner2 */\n  tag_4\n  jump\t// in\n    /* \"SwishFishToken.sol\":4504:4511  _owner3 */\ntag_34:\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  and\n    /* \"access/Ownable.sol\":2663:2687  newBackend != address(0) */\n  swap1\n  dup2\n  iszero\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  tag_36\n  jumpi\n  dup2\n  swap1\n    /* \"access/Ownable.sol\":2741:2762  _backend = newBackend */\n  0x07\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"access/Ownable.sol\":2741:2762  _backend = newBackend */\n  0x07\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup5\n  dup8\n  mload\n    /* \"access/Ownable.sol\":2778:2822  OwnershipTransferred(address(0), newBackend) */\n  swap4\n  dup2\n  dup1\n  log3\n    /* \"SwishFishToken.sol\":569:590  1000000000 * 10 ** 18 */\n  0x0c\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  swap5\n  address\n    /* \"contracts/ERC20.sol\":8944:8965  account != address(0) */\n  iszero\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  tag_38\n  jumpi\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":9326:9363  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap1\n    /* \"contracts/ERC20.sol\":9091:9115  _totalSupply.add(amount) */\n  tag_40\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  sload(0x02)\n    /* \"contracts/ERC20.sol\":9091:9115  _totalSupply.add(amount) */\n  tag_5\n  jump\t// in\ntag_40:\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  0x02\n  sstore\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  address\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup4\n  mstore\n  dup3\n  dup2\n  mstore\n    /* \"contracts/ERC20.sol\":9273:9303  _balances[account].add(amount) */\n  tag_41\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  dup7\n  dup6\n  keccak256\n  sload\n    /* \"contracts/ERC20.sol\":9273:9303  _balances[account].add(amount) */\n  tag_5\n  jump\t// in\ntag_41:\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  address\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  mstore\n  dup4\n  dup3\n  mstore\n  dup6\n  dup5\n  keccak256\n  sstore\n  dup5\n  mload\n  swap4\n  dup5\n  mstore\n    /* \"SwishFishToken.sol\":3805:3809  this */\n  address\n    /* \"contracts/ERC20.sol\":9326:9363  Transfer(address(0), account, amount) */\n  swap4\n  log3\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_38:\n  swap3\n  0x64\n  swap4\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup5\n  mstore\n  dup4\n  add\n  mstore\n  0x24\n  dup3\n  add\n  mstore\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  0x44\n  dup3\n  add\n  mstore\n  revert\ntag_36:\n  0x84\n  dup8\n  dup7\n  dup11\n  mload\n  swap2\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup4\n  mstore\n  dup3\n  add\n  mstore\n  0x26\n  0x24\n  dup3\n  add\n  mstore\n  0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n  0x44\n  dup3\n  add\n  mstore\n  0x6464726573730000000000000000000000000000000000000000000000000000\n  0x64\n  dup3\n  add\n  mstore\n  revert\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\ntag_31:\n  swap6\n  pop\n  pop\n  swap5\n  swap6\n  pop\n  pop\n  swap1\n  pop\n  dup2\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_42\n  jumpi\ntag_43:\n  tag_44\n  dup2\n  dup4\n  tag_1\n  jump\t// in\ntag_44:\n  dup2\n  add\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sub\n  slt\n  tag_45\n  jumpi\n  swap3\n  dup8\n  dup16\n  swap4\n    /* \"SwishFishToken.sol\":4504:4511  _owner3 */\n  tag_34\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap8\n  swap7\n  swap5\n  dup16\n  dup16\n    /* \"SwishFishToken.sol\":4169:4190  _isExcludedFromLimits */\n  0x23\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup6\n  dup16\n    /* \"SwishFishToken.sol\":4446:4453  _owner1 */\n  tag_35\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap10\n  tag_47\n    /* \"SwishFishToken.sol\":4475:4482  _owner2 */\n  tag_35\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  swap14\n  tag_2\n  jump\t// in\ntag_47:\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  swap7\n  swap10\n  swap13\n  pop\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  swap9\n  pop\n  swap9\n  swap11\n  swap12\n  pop\n  jump(tag_32)\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\ntag_45:\n  dup13\n  dup1\n  revert\n    /* \"SwishFishToken.sol\":3730:3836  IUniswapV2Factory(_uniswapV2Router.factory())... */\ntag_42:\n  pop\n  returndatasize\n  jump(tag_43)\ntag_29:\n  pop\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup15\n  mload\n  returndatasize\n  dup15\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"SwishFishToken.sol\":3812:3835  _uniswapV2Router.WETH() */\ntag_27:\n  swap5\n  swap6\n  pop\n  pop\n  pop\n  pop\n  dup2\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_48\n  jumpi\ntag_49:\n  tag_50\n  dup2\n  dup4\n  tag_1\n  jump\t// in\ntag_50:\n  dup2\n  add\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sub\n  slt\n  tag_45\n  jumpi\n  swap1\n  dup12\n  dup16\n  dup16\n  dup16\n  swap5\n  swap1\n  tag_53\n  0x44\n  swap3\n  tag_2\n  jump\t// in\ntag_53:\n    /* \"SwishFishToken.sol\":3812:3835  _uniswapV2Router.WETH() */\n  swap3\n  swap1\n  swap2\n  jump(tag_28)\ntag_48:\n  pop\n  returndatasize\n  jump(tag_49)\n    /* \"SwishFishToken.sol\":3748:3774  _uniswapV2Router.factory() */\ntag_23:\n  swap4\n  swap5\n  swap6\n  swap7\n  swap8\n  swap9\n  swap10\n  pop\n  pop\n  swap1\n  pop\n  dup2\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_54\n  jumpi\ntag_55:\n  tag_56\n  dup2\n  dup4\n  tag_1\n  jump\t// in\ntag_56:\n  dup2\n  add\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sub\n  slt\n  tag_57\n  jumpi\n  swap1\n  dup13\n  dup12\n  dup16\n  swap9\n  swap8\n  swap7\n  swap6\n  swap5\n  swap4\n  tag_59\n  swap1\n  tag_2\n  jump\t// in\ntag_59:\n    /* \"SwishFishToken.sol\":3748:3774  _uniswapV2Router.factory() */\n  swap9\n  codesize\n  jump(tag_24)\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\ntag_57:\n  dup12\n  dup1\n  revert\n    /* \"SwishFishToken.sol\":3748:3774  _uniswapV2Router.factory() */\ntag_54:\n  pop\n  returndatasize\n  jump(tag_55)\ntag_21:\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup15\n  mload\n  returndatasize\n  dup15\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\ntag_19:\n  0x00\n  dup9\n  dup2\n  mstore\n  dup7\n  dup6\n  dup2\n  dup4\n  keccak256\n  swap4\n  add\n  div\n  dup3\n  add\n  swap2\ntag_60:\n  dup3\n  dup2\n  lt\n  tag_61\n  jumpi\n  pop\n  pop\n  jump(tag_20)\ntag_61:\n  dup2\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_60)\ntag_16:\n  0x00\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup2\n  mstore\n  dup6\n  dup5\n  dup2\n  dup4\n  keccak256\n  swap4\n  add\n  div\n  dup3\n  add\n  swap2\ntag_63:\n  dup3\n  dup2\n  lt\n  tag_64\n  jumpi\n  pop\n  pop\n  jump(tag_17)\ntag_64:\n  dup2\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_63)\ntag_9:\n  0x00\n  dup1\n  revert\ntag_1:\n  swap1\n  0x1f\n  dup1\n  not\n  swap2\n  add\n  and\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  0xffffffffffffffff\n  dup3\n  gt\n  or\n  tag_66\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_66:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  mload\n  swap1\n  sub(exp(0x02, 0xa0), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_9\n  jumpi\n  jump\t// out\ntag_3:\n  swap1\n  0x01\n  0x02\n  dup4\n  div\n  swap3\n  and\n  dup1\n  iszero\n  tag_70\n  jumpi\ntag_71:\n  0x20\n  dup4\n  lt\n  eq\n  tag_72\n  jumpi\n  jump\t// out\ntag_72:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_70:\n  swap2\n  0x7f\n  and\n  swap2\n  jump(tag_71)\n    /* \"access/Ownable.sol\":2942:3272  function _addOwner(address newOwner) internal {... */\ntag_4:\n  sub(exp(0x02, 0xa0), 0x01)\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  and\n    /* \"access/Ownable.sol\":3007:3029  newOwner != address(0) */\n  dup1\n  iszero\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  tag_74\n  jumpi\n    /* \"access/Ownable.sol\":3027:3028  0 */\n  0x00\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup2\n  dup2\n  mstore\n    /* \"access/Ownable.sol\":3088:3095  isOwner */\n  0x0a\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  0x20\n  mstore\n  0xff\n  0x40\n  dup3\n  keccak256\n  sload\n  and\n  tag_76\n  jumpi\n  dup2\n  dup2\n  mstore\n    /* \"access/Ownable.sol\":3088:3095  isOwner */\n  0x0a\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"access/Ownable.sol\":3184:3191  _owners */\n  0x09\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_78\n  jumpi\n  0x01\n  dup2\n  add\n  dup1\n    /* \"access/Ownable.sol\":3184:3191  _owners */\n  0x09\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_80\n  jumpi\n    /* \"access/Ownable.sol\":3184:3191  _owners */\n  0x09\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup3\n  mstore\n  0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n  add\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n  dup4\n  or\n  swap1\n  sstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9c064737b570a74c2bac5d21056d93ac53115214216cd14d4a0fc9b60be81231\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  dup2\n  dup1\n    /* \"access/Ownable.sol\":3222:3264  OwnershipTransferred(address(0), newOwner) */\n  log3\n    /* \"access/Ownable.sol\":2942:3272  function _addOwner(address newOwner) internal {... */\n  jump\t// out\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\ntag_80:\n  0x24\n  dup3\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  mstore(0x04, 0x32)\n  revert\ntag_78:\n  0x24\n  dup3\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  mstore(0x04, 0x41)\n  revert\ntag_76:\n  0x64\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1c\n  0x24\n  dup3\n  add\n  mstore\n  0x4f776e61626c653a204f776e6572206973206e6f7420756e6971756500000000\n  0x44\n  dup3\n  add\n  mstore\n  revert\ntag_74:\n  0x84\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x22\n  0x24\n  dup3\n  add\n  mstore\n  0x4f776e61626c653a204f776e657220697320746865207a65726f206164647265\n  0x44\n  dup3\n  add\n  mstore\n  0x7373000000000000000000000000000000000000000000000000000000000000\n  0x64\n  dup3\n  add\n  mstore\n  revert\n    /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_5:\n  swap1\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  dup2\n  add\n  swap1\n  dup2\n  dup2\n  gt\n  tag_82\n  jumpi\n    /* \"libraries/SafeMath.sol\":601:607  c >= a */\n  dup2\n  lt\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n  tag_84\n  jumpi\n    /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\ntag_84:\n  0x64\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  revert\ntag_82:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x11)\n  revert(0x00, 0x24)\nstop\ndata_9c064737b570a74c2bac5d21056d93ac53115214216cd14d4a0fc9b60be81231 8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n\nsub_0: assembly {\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x80\n      0x40\n      swap1\n      dup1\n      dup3\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_30\n      jumpi\n    tag_31:\n      pop\n      pop\n      jumpi(tag_32, iszero(calldatasize))\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"SwishFishToken.sol\":4958:4967  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":4954:5037  if (msg.value > 0) {... */\n      tag_34\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      stop\n        /* \"SwishFishToken.sol\":4954:5037  if (msg.value > 0) {... */\n    tag_34:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mload\n        /* \"SwishFishToken.sol\":4958:4967  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":4993:5025  Deposit(_msgSender(), msg.value) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":4993:5025  Deposit(_msgSender(), msg.value) */\n      swap3\n      log2\n        /* \"SwishFishToken.sol\":4954:5037  if (msg.value > 0) {... */\n      stop\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_30:\n      0x00\n      swap2\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup4\n      calldataload\n      div\n      swap2\n      dup3\n      0x013cf08b\n      eq\n      tag_36\n      jumpi\n      pop\n      dup2\n      0x06fdde03\n      eq\n      tag_38\n      jumpi\n      dup2\n      0x095ea7b3\n      eq\n      tag_40\n      jumpi\n      dup2\n      0x0abdc640\n      eq\n      tag_42\n      jumpi\n      dup2\n      0x0d61b519\n      eq\n      tag_44\n      jumpi\n      dup2\n      0x1694505e\n      eq\n      tag_46\n      jumpi\n      dup2\n      0x18160ddd\n      eq\n      tag_48\n      jumpi\n      dup2\n      0x1b45a47a\n      eq\n      tag_50\n      jumpi\n      dup2\n      0x23b872dd\n      eq\n      tag_52\n      jumpi\n      dup2\n      0x2a9af7ba\n      eq\n      tag_54\n      jumpi\n      dup2\n      0x313ce567\n      eq\n      tag_56\n      jumpi\n      dup2\n      0x39262773\n      eq\n      tag_58\n      jumpi\n      dup2\n      0x39509351\n      eq\n      tag_60\n      jumpi\n      dup2\n      0x3ccfd60b\n      eq\n      tag_62\n      jumpi\n      dup2\n      0x553000c1\n      eq\n      tag_64\n      jumpi\n        /* \"SwishFishToken.sol\":2697:2725  uint256 public _poolTeam = 0 */\n      dup2\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x562e9df9\n        /* \"SwishFishToken.sol\":2697:2725  uint256 public _poolTeam = 0 */\n      eq\n      tag_66\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      0x70a08231\n      eq\n      tag_68\n      jumpi\n      dup2\n      0x7918447e\n      eq\n      tag_70\n      jumpi\n      dup2\n      0x7a594a2b\n      eq\n      tag_72\n      jumpi\n      dup2\n      0x7d81936c\n      eq\n      tag_74\n      jumpi\n      dup2\n      0x8198c341\n      eq\n      tag_76\n      jumpi\n      dup2\n      0x85a6a091\n      eq\n      tag_78\n      jumpi\n      dup2\n      0x8da5cb5b\n      eq\n      tag_80\n      jumpi\n      dup2\n      0x933f5e07\n      eq\n      tag_82\n      jumpi\n      dup2\n      0x95d89b41\n      eq\n      tag_84\n      jumpi\n      dup2\n      0x98951b56\n      eq\n      tag_86\n      jumpi\n      dup2\n      0xa457c2d7\n      eq\n      tag_88\n      jumpi\n      dup2\n      0xa6f2ae3a\n      eq\n      tag_90\n      jumpi\n      dup2\n      0xa9059cbb\n      eq\n      tag_92\n      jumpi\n      dup2\n      0xb6bba0ae\n      eq\n      tag_94\n      jumpi\n      dup2\n      0xc4ce220b\n      eq\n      tag_96\n      jumpi\n      dup2\n      0xc84ad9a5\n      eq\n      tag_98\n      jumpi\n      dup2\n      0xd7196dd9\n      eq\n      tag_100\n      jumpi\n      dup2\n      0xd8a0f828\n      eq\n      tag_102\n      jumpi\n      dup2\n      0xdce165a6\n      eq\n      tag_104\n      jumpi\n      pop\n      dup1\n      0xdd62ed3e\n      eq\n      tag_106\n      jumpi\n      0xfe7441e7\n      eq\n      tag_108\n      jumpi\n      dup1\n      jump(tag_31)\n    tag_108:\n      swap1\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      0x20\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n      tag_114\n      tag_3\n      jump\t// in\n    tag_114:\n      and\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":11117:11137  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_112:\n      pop\n      dup1\n      revert\n    tag_106:\n      pop\n      swap1\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      dup1\n      0x20\n      swap3\n      tag_119\n      tag_3\n      jump\t// in\n    tag_119:\n      tag_120\n      tag_4\n      jump\t// in\n    tag_120:\n      sub(exp(0x02, 0xa0), 0x01)\n      swap2\n      dup3\n      and\n      dup4\n      mstore\n        /* \"contracts/ERC20.sol\":4255:4266  _allowances */\n      0x01\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap2\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_104:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      0x0180\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup4\n      dup4\n      calldataload\n      swap2\n      dup3\n      iszero\n      iszero\n      dup1\n      swap4\n      sub\n      tag_112\n      jumpi\n      0x24\n      swap4\n      dup5\n      calldataload\n      swap2\n      dup3\n      iszero\n      iszero\n      dup1\n      swap4\n      sub\n      tag_127\n      jumpi\n      calldataload(0x44)\n      swap5\n      dup6\n      iszero\n      iszero\n      dup1\n      swap7\n      sub\n      tag_129\n      jumpi\n      calldataload(0x64)\n      swap4\n      dup5\n      iszero\n      iszero\n      swap7\n      dup8\n      dup7\n      sub\n      tag_131\n      jumpi\n      calldataload(0xa4)\n      swap8\n      dup9\n      iszero\n      iszero\n      swap1\n      dup2\n      dup11\n      sub\n      tag_133\n      jumpi\n      calldataload(0x0144)\n      dup1\n      iszero\n      iszero\n      swap11\n      dup12\n      dup3\n      sub\n      tag_135\n      jumpi\n      calldataload(0x0164)\n      swap10\n      sub(exp(0x02, 0xa0), 0x01)\n      swap12\n      dup13\n      dup13\n      and\n      dup1\n      swap13\n      sub\n      tag_137\n      jumpi\n      0xff\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      dup12\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_139\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_139:\n        /* \"SwishFishToken.sol\":12572:12733  if (_updateWithdrawOptions) {... */\n      tag_140\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_141:\n        /* \"SwishFishToken.sol\":12743:12984  if (_updateTaxesFees) {... */\n      tag_142\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_143:\n        /* \"SwishFishToken.sol\":12994:13136  if (_transferBackend) {... */\n      tag_144\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_145:\n      dup7\n      mload\n      swap7\n      0x01c0\n      dup9\n      add\n      dup9\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_146\n      jumpi\n      swap1\n      dup15\n      swap2\n      dup2\n      mstore\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup10\n      mstore\n      0x20\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup10\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup3\n      mstore\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap6\n      dup7\n      mstore\n      0x60\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap5\n      dup6\n      mstore\n      0x80\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      dup5\n      mstore\n      0xa0\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup3\n      mstore\n      0xc0\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      calldataload(0x84)\n      dup4\n      mstore\n      0xe0\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup10\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      dup5\n      mstore\n      0x0100\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup10\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap5\n      calldataload(0xc4)\n      dup7\n      mstore\n      0x0120\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup11\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap7\n      calldataload(0xe4)\n      dup9\n      mstore\n      0x0140\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup12\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap9\n      calldataload(0x0104)\n      dup11\n      mstore\n      0x0160\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup13\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap11\n      calldataload(0x0124)\n      dup13\n      mstore\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      dup13\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap15\n      dup16\n      mstore\n        /* \"SwishFishToken.sol\":13161:13770  Proposal({... */\n      0x01a0\n      dup13\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap13\n      dup14\n      mstore\n        /* \"SwishFishToken.sol\":13146:13155  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x01\n      tag_150\n      swap3\n      add\n        /* \"SwishFishToken.sol\":13146:13155  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      tag_1\n      jump\t// in\n    tag_150:\n      swap13\n      swap1\n      swap13\n      tag_151\n      jumpi\n      mload\n      dup13\n      sload\n      swap6\n      mload\n      swap2\n      mload\n      swap3\n      mload\n      swap4\n      mload\n      swap5\n      mload\n      iszero\n      iszero\n      0x01000000000000000000000000000000000000000000000000\n      mul\n      0xff000000000000000000000000000000000000000000000000\n      and\n      swap5\n      iszero\n      iszero\n      0x010000000000000000000000000000000000000000000000\n      mul\n      0xff0000000000000000000000000000000000000000000000\n      and\n      swap4\n      iszero\n      iszero\n      0x0100000000000000000000000000000000000000000000\n      mul\n      0xff00000000000000000000000000000000000000000000\n      and\n      swap3\n      iszero\n      iszero\n      0x01000000000000000000000000000000000000000000\n      mul\n      0xff000000000000000000000000000000000000000000\n      and\n      swap2\n      iszero\n      iszero\n      exp(0x02, 0xa0)\n      mul\n      0xff0000000000000000000000000000000000000000\n      and\n      swap1\n      dup16\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      swap7\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap5\n      swap1\n      swap5\n      or\n      swap4\n      swap1\n      swap4\n      or\n      swap3\n      swap1\n      swap3\n      or\n      swap2\n      swap1\n      swap2\n      or\n      or\n      dup8\n      sstore\n      mload\n      0x01\n      dup8\n      add\n      sstore\n      mload\n      0x02\n      dup7\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      0xff\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      mload\n      dup9\n      dup5\n      add\n      sstore\n      mload\n        /* \"SwishFishToken.sol\":13146:13155  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      add\n      sstore\n      mload\n      0x06\n      dup3\n      add\n      sstore\n      0x07\n      add\n      swap3\n      mload\n      iszero\n      iszero\n      tag_154\n      swap1\n      dup5\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_154:\n      mload\n      and\n      dup2\n      sload\n      swap1\n      0x0100\n      mul\n      0xffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffff00)\n      and\n      or\n      swap1\n      sstore\n        /* \"SwishFishToken.sol\":13146:13155  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap2\n      not(0x00)\n      dup4\n      add\n      swap3\n      dup4\n      gt\n      tag_155\n      jumpi\n        /* \"SwishFishToken.sol\":13787:13823  SubmitProposal(proposals.length - 1) */\n      pop\n      pop\n      0x096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce\n      dup3\n      dup1\n      log2\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_155:\n      0x11\n      dup5\n      swap2\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup12\n      dup15\n      dup1\n      dup16\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup3\n      mstore\n      mstore\n      revert\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup12\n      dup15\n      0x41\n      dup16\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_146:\n      pop\n      dup12\n      dup15\n      0x41\n      dup16\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":12994:13136  if (_transferBackend) {... */\n    tag_144:\n        /* \"SwishFishToken.sol\":13039:13068  _backendAddress != address(0) */\n      dup8\n        /* \"SwishFishToken.sol\":12994:13136  if (_transferBackend) {... */\n      tag_145\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      jumpi\n      0x84\n      dup13\n      0x33\n      dup14\n      0x20\n      dup12\n      mload\n      swap4\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220\n      0x44\n      dup3\n      add\n      mstore\n      0x697320746865207a65726f206164647265737300000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":12743:12984  if (_updateTaxesFees) {... */\n    tag_142:\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":12804:12874  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee */\n      tag_159\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      calldataload(0x0124)\n        /* \"SwishFishToken.sol\":12804:12855  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee */\n      tag_161\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      calldataload(0x0104)\n        /* \"SwishFishToken.sol\":12804:12841  _heisenVerseTaxFee + _marketingTaxFee */\n      tag_161\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      calldataload(0xe4)\n      calldataload(0xc4)\n        /* \"SwishFishToken.sol\":12804:12841  _heisenVerseTaxFee + _marketingTaxFee */\n      tag_7\n      jump\t// in\n    tag_161:\n        /* \"SwishFishToken.sol\":12804:12855  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee */\n      tag_7\n      jump\t// in\n        /* \"SwishFishToken.sol\":12804:12874  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee */\n    tag_159:\n        /* \"SwishFishToken.sol\":12897:12916  sellTotalFees <= 10 */\n      gt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      iszero\n        /* \"SwishFishToken.sol\":12743:12984  if (_updateTaxesFees) {... */\n      tag_143\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      jumpi\n      0x84\n      dup14\n      0x33\n      dup15\n      0x20\n      dup13\n      mload\n      swap4\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a204d757374206b65657020\n      0x44\n      dup3\n      add\n      mstore\n      0x6665657320617420313025206f72206c65737300000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":12572:12733  if (_updateWithdrawOptions) {... */\n    tag_140:\n        /* \"SwishFishToken.sol\":12640:12656  5000000000000000 */\n      0x11c37937e08000\n        /* \"SwishFishToken.sol\":12623:12636  withdrawPrice */\n      0x13\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":12623:12656  withdrawPrice <= 5000000000000000 */\n      gt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      iszero\n        /* \"SwishFishToken.sol\":12572:12733  if (_updateWithdrawOptions) {... */\n      tag_141\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      jumpi\n      0x84\n      dup15\n      0x3c\n      dup16\n      0x20\n      dup14\n      mload\n      swap4\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a204d757374206b65657020\n      0x44\n      dup3\n      add\n      mstore\n      0x3530303030303030303030303030303020576569206f72206c65737300000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_137:\n      dup1\n      revert\n    tag_135:\n      dup11\n      dup1\n      revert\n    tag_133:\n      dup9\n      dup1\n      revert\n    tag_131:\n      dup7\n      dup1\n      revert\n    tag_129:\n      dup5\n      dup1\n      revert\n    tag_127:\n      dup4\n      dup1\n      revert\n    tag_121:\n      dup3\n      dup1\n      revert\n    tag_102:\n      dup4\n      swap2\n      pop\n      jumpi(tag_121, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"SwishFishToken.sol\":5539:5569  FirstLiquidityAdded(msg.value) */\n      0xc5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae74539\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n        /* \"SwishFishToken.sol\":5513:5522  msg.value */\n      tag_168\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_169\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup5\n      dup9\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_169:\n        /* \"SwishFishToken.sol\":5394:5415  firstLiquidityEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5386:5441  require(firstLiquidityEnabled, \"Presale isn't enabled\") */\n      tag_170\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      0x0100\n      dup4\n      div\n      and\n        /* \"SwishFishToken.sol\":5386:5441  require(firstLiquidityEnabled, \"Presale isn't enabled\") */\n      tag_5\n      jump\t// in\n    tag_170:\n      not(0xff00)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      and\n        /* \"SwishFishToken.sol\":5394:5415  firstLiquidityEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":5513:5522  msg.value */\n      callvalue\n      swap1\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      calldataload\n        /* \"SwishFishToken.sol\":5513:5522  msg.value */\n      tag_10\n      jump\t// in\n    tag_168:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mload\n        /* \"SwishFishToken.sol\":5513:5522  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":5539:5569  FirstLiquidityAdded(msg.value) */\n      log1\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_100:\n      swap1\n      pop\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x20\n      swap1\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_175\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup6\n      dup6\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_175:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n        /* \"SwishFishToken.sol\":5636:5700  super._transfer(address(this), addressHeisenDev, _poolHeisenDev) */\n      tag_176\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n        /* \"SwishFishToken.sol\":5667:5683  addressHeisenDev */\n      0x17\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5685:5699  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5660:5664  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":5636:5700  super._transfer(address(this), addressHeisenDev, _poolHeisenDev) */\n      tag_19\n      jump\t// in\n    tag_176:\n        /* \"SwishFishToken.sol\":5711:5775  super._transfer(address(this), addressMarketing, _poolMarketing) */\n      tag_177\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n        /* \"SwishFishToken.sol\":5742:5758  addressMarketing */\n      0x18\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5760:5774  _poolMarketing */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5660:5664  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":5711:5775  super._transfer(address(this), addressMarketing, _poolMarketing) */\n      tag_19\n      jump\t// in\n    tag_177:\n        /* \"SwishFishToken.sol\":5786:5840  super._transfer(address(this), addressTeam, _poolTeam) */\n      tag_178\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n        /* \"SwishFishToken.sol\":5817:5828  addressTeam */\n      0x19\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      dup5\n      sload\n        /* \"SwishFishToken.sol\":5660:5664  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":5786:5840  super._transfer(address(this), addressTeam, _poolTeam) */\n      tag_19\n      jump\t// in\n    tag_178:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup1\n      dup1\n      dup1\n        /* \"SwishFishToken.sol\":5868:5911  _poolHeisenDev + _poolMarketing + _poolTeam */\n      tag_179\n        /* \"SwishFishToken.sol\":5868:5899  _poolHeisenDev + _poolMarketing */\n      tag_180\n        /* \"SwishFishToken.sol\":5685:5699  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5760:5774  _poolMarketing */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5868:5899  _poolHeisenDev + _poolMarketing */\n      swap1\n      tag_7\n      jump\t// in\n    tag_180:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup9\n      sload\n        /* \"SwishFishToken.sol\":5868:5911  _poolHeisenDev + _poolMarketing + _poolTeam */\n      swap1\n      tag_7\n      jump\t// in\n    tag_179:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap6\n      dup2\n        /* \"SwishFishToken.sol\":5685:5699  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n        /* \"SwishFishToken.sol\":5760:5774  _poolMarketing */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n      dup9\n      sstore\n        /* \"SwishFishToken.sol\":5667:5683  addressHeisenDev */\n      0x17\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5660:5664  this */\n      address\n        /* \"SwishFishToken.sol\":6049:6070  address(this).balance */\n      balance\n        /* \"SwishFishToken.sol\":6020:6075  addressHeisenDev.call{value: address(this).balance}(\"\") */\n      swap1\n      gas\n      call\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      jumpi(tag_181, iszero(returndatasize))\n      returndatasize\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_183\n      jumpi\n      dup7\n      mload\n      swap1\n      tag_185\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      dup8\n      add\n      dup4\n      tag_9\n      jump\t// in\n    tag_185:\n      dup2\n      mstore\n      dup6\n      dup6\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_186:\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"SwishFishToken.sol\":6137:6156  TeamPayment(amount) */\n      0x21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap3\n      swap4\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":6137:6156  TeamPayment(amount) */\n      log1\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_187:\n      0x64\n      swap1\n      dup4\n      dup7\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x4661696c656420746f2073656e6420424e420000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_183:\n      0x24\n      dup7\n      0x41\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_181:\n      jump(tag_186)\n    tag_98:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      0xff\n        /* \"SwishFishToken.sol\":599:631  bool public salesEnabled = false */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_96:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2315:2349  uint256 public taxFeeHeisenDev = 2 */\n      0x1a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_94:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2397:2426  uint256 public taxFeeTeam = 3 */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_92:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_205\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_206\n      tag_3\n      jump\t// in\n    tag_206:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_18\n      jump\t// in\n    tag_205:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mload\n      0x01\n      dup2\n      mstore\n      return\n    tag_90:\n      dup3\n      dup5\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"SwishFishToken.sol\":5178:5210  balanceOf(address(this)).mul(10) */\n      tag_209\n        /* \"SwishFishToken.sol\":5260:5269  msg.value */\n      tag_210\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n        /* \"SwishFishToken.sol\":5095:5141  require(salesEnabled, \"Presale isn't enabled\") */\n      tag_211\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n        /* \"SwishFishToken.sol\":5103:5115  salesEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5095:5141  require(salesEnabled, \"Presale isn't enabled\") */\n      tag_5\n      jump\t// in\n    tag_211:\n        /* \"SwishFishToken.sol\":5196:5200  this */\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n      dup4\n      0x20\n      mstore\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":5178:5210  balanceOf(address(this)).mul(10) */\n      tag_27\n      jump\t// in\n    tag_209:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_212\n      tag_29\n      jump\t// in\n    tag_212:\n      pop\n        /* \"SwishFishToken.sol\":5215:5218  100 */\n      0x64\n        /* \"SwishFishToken.sol\":5260:5269  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      div\n        /* \"SwishFishToken.sol\":5260:5269  msg.value */\n      tag_10\n      jump\t// in\n    tag_210:\n        /* \"SwishFishToken.sol\":5286:5294  BuyEgg() */\n      0x6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b\n      dup2\n      dup1\n      log1\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_88:\n      swap2\n      swap1\n      pop\n      jumpi(tag_137, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_137\n      jumpi\n      tag_217\n      tag_3\n      jump\t// in\n    tag_217:\n      swap2\n      dup4\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup7\n      and\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":7059:7094  currentAllowance >= subtractedValue */\n      swap1\n      dup3\n      dup3\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_218\n      jumpi\n      0x20\n      dup6\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_205\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_221\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup8\n      dup8\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_222\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_223\n      tag_22\n      jump\t// in\n    tag_223:\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup3\n      dup5\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_222:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_12\n      jump\t// in\n    tag_221:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_20\n      jump\t// in\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_218:\n      0x84\n      swap1\n      0x20\n      dup7\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n      0x44\n      dup3\n      add\n      mstore\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_86:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup3\n      calldataload\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_228\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup5\n      dup8\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_228:\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_229\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1082:1112  _proposalId < proposals.length */\n      dup6\n      lt\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_13\n      jump\t// in\n    tag_229:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup6\n      mstore\n        /* \"utils/MultiSignature.sol\":1257:1273  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup3\n      mstore\n      0xff\n      dup4\n      dup7\n      keccak256\n      sload\n      and\n      tag_230\n      jumpi\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      pop\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_232\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      exp(0x02, 0xa0)\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      tag_233\n      dup7\n      tag_1\n      jump\t// in\n    tag_233:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      pop\n      sload\n      div\n      and\n        /* \"utils/MultiSignature.sol\":1457:1489  !proposals[_proposalId].executed */\n      iszero\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_14\n      jump\t// in\n    tag_232:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      dup5\n      mstore\n        /* \"utils/MultiSignature.sol\":1257:1273  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      mstore\n      dup3\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":14077:14119  ApproveProposal(_msgSender(), _proposalId) */\n      0x12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7\n      dup4\n      dup1\n      log3\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_230:\n      swap1\n      0x84\n      swap3\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x3c\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2061\n      0x44\n      dup3\n      add\n      mstore\n      0x6c72656164792077617320617070726f766564206279206f776e657200000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_84:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_121\n      jumpi\n      dup1\n      mload\n      swap2\n      dup4\n      dup2\n      sload\n      swap2\n      0x02\n      dup4\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup6\n      and\n      swap5\n      dup6\n      iszero\n      tag_238\n      jumpi\n    tag_239:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup2\n      eq\n      tag_240\n      jumpi\n      dup6\n      dup10\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_242\n      jumpi\n      pop\n      0x01\n      eq\n      tag_244\n      jumpi\n    tag_245:\n      tag_246\n      dup8\n      dup8\n      tag_247\n      dup3\n      dup13\n      sub\n      dup4\n      tag_9\n      jump\t// in\n    tag_247:\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_2\n      jump\t// in\n    tag_246:\n      sub\n      swap1\n      return\n    tag_244:\n      dup2\n      mstore\n      swap3\n      swap6\n      pop\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n    tag_248:\n      dup3\n      dup5\n      lt\n      tag_249\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_246\n      swap5\n      tag_247\n      swap3\n      dup3\n      add\n      add\n      swap5\n      dup7\n      dup1\n      jump(tag_245)\n    tag_249:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_248)\n    tag_242:\n      not(0xff)\n      and\n      dup9\n      dup8\n      add\n      mstore\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_247\n      dup3\n      tag_246\n      dup7\n      dup1\n      jump(tag_245)\n    tag_240:\n      0x24\n      dup5\n      0x22\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_238:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_239)\n    tag_82:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2433:2467  uint256 public taxFeeLiquidity = 2 */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_80:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"access/Ownable.sol\":1367:1373  _owner */\n      0x08\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_78:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup3\n      calldataload\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_263\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup5\n      dup8\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_263:\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_264\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1082:1112  _proposalId < proposals.length */\n      dup6\n      lt\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_13\n      jump\t// in\n    tag_264:\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_265\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      exp(0x02, 0xa0)\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      tag_233\n      dup8\n      tag_1\n      jump\t// in\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n    tag_265:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup6\n      mstore\n        /* \"SwishFishToken.sol\":15569:15585  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup3\n      mstore\n      0xff\n      dup4\n      dup7\n      keccak256\n      sload\n      and\n      iszero\n      tag_267\n      jumpi\n      pop\n      dup3\n      dup5\n      mstore\n        /* \"SwishFishToken.sol\":15569:15585  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      mstore\n      dup3\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":15741:15782  RevokeProposal(_msgSender(), _proposalId) */\n      0xb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb\n      dup4\n      dup1\n      log3\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_267:\n      swap1\n      0x84\n      swap3\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x2e\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2050726f706f73616c2069\n      0x44\n      dup3\n      add\n      mstore\n      0x73206e6f7420617070726f766564000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_76:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      jumpi(tag_121, slt(add(not(0x03), calldatasize), 0x60))\n      tag_273\n      tag_3\n      jump\t// in\n    tag_273:\n      swap1\n      0x24\n      dup1\n      calldataload\n      swap4\n      0x44\n      swap1\n      dup2\n      calldataload\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      swap3\n      dup4\n        /* \"access/Ownable.sol\":1642:1650  _backend */\n      0x07\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap5\n      caller\n        /* \"access/Ownable.sol\":2000:2025  backend() == _msgSender() */\n      dup7\n      sub\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_274\n      jumpi\n        /* \"access/Ownable.sol\":2075:2076  _ */\n      dup5\n      dup10\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap9\n      and\n      swap5\n      dup6\n      dup12\n      mstore\n      0x20\n      swap7\n        /* \"access/Ownable.sol\":2237:2244  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup9\n      mstore\n      0xff\n      dup10\n      dup14\n      keccak256\n      sload\n      and\n      tag_276\n      jumpi\n        /* \"SwishFishToken.sol\":9322:9337  to != backend() */\n      dup7\n      eq\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_278\n      jumpi\n      dup1\n        /* \"SwishFishToken.sol\":9397:9413  addressHeisenDev */\n      0x17\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9391:9413  to != addressHeisenDev */\n      dup7\n      eq\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_280\n      jumpi\n      dup1\n        /* \"SwishFishToken.sol\":9472:9488  addressMarketing */\n      0x18\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9466:9488  to != addressMarketing */\n      dup7\n      eq\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_282\n      jumpi\n        /* \"SwishFishToken.sol\":9547:9558  addressTeam */\n      0x19\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9541:9558  to != addressTeam */\n      dup6\n      eq\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_284\n      jumpi\n        /* \"SwishFishToken.sol\":9616:9618  75 */\n      0x4b\n        /* \"SwishFishToken.sol\":9609:9618  fee <= 75 */\n      dup5\n      gt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_286\n      jumpi\n      dup5\n      dup11\n      mstore\n        /* \"SwishFishToken.sol\":9667:9687  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup7\n      dup11\n      keccak256\n      sload\n      tag_288\n      jumpi\n        /* \"SwishFishToken.sol\":9758:9787  _maxTransactionWithdrawAmount */\n      0x16\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9748:9787  amount <= _maxTransactionWithdrawAmount */\n      dup10\n      gt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_290\n      jumpi\n        /* \"SwishFishToken.sol\":9881:9896  amount.mul(fee) */\n      pop\n      pop\n      pop\n      tag_292\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"SwishFishToken.sol\":9881:9896  amount.mul(fee) */\n      swap2\n      dup8\n      tag_28\n      jump\t// in\n    tag_292:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_293\n      tag_29\n      jump\t// in\n    tag_293:\n      pop\n      div\n      swap5\n        /* \"SwishFishToken.sol\":9937:9952  taxFeeHeisenDev */\n      0x1a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n        /* \"SwishFishToken.sol\":9955:9970  taxFeeMarketing */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9937:9970  taxFeeHeisenDev + taxFeeMarketing */\n      tag_294\n      dup2\n      dup5\n      tag_7\n      jump\t// in\n    tag_294:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap3\n        /* \"SwishFishToken.sol\":9937:9983  taxFeeHeisenDev + taxFeeMarketing + taxFeeTeam */\n      tag_295\n        /* \"SwishFishToken.sol\":9973:9983  taxFeeTeam */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9937:9983  taxFeeHeisenDev + taxFeeMarketing + taxFeeTeam */\n      dup1\n      swap6\n      tag_7\n      jump\t// in\n    tag_295:\n        /* \"SwishFishToken.sol\":9998:10013  totalTaxes == 0 */\n      swap1\n      dup2\n      tag_296\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SwishFishToken.sol\":10047:10076  _poolHeisenDev.add(amountFee) */\n      tag_298\n        /* \"SwishFishToken.sol\":9667:9687  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      swap5\n      swap6\n        /* \"SwishFishToken.sol\":10047:10061  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":10047:10076  _poolHeisenDev.add(amountFee) */\n      tag_21\n      jump\t// in\n    tag_298:\n        /* \"SwishFishToken.sol\":10047:10061  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":9994:10964  if (totalTaxes == 0) {... */\n    tag_299:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      mstore\n      dup3\n      keccak256\n      sstore\n      dup1\n      return\n        /* \"SwishFishToken.sol\":9994:10964  if (totalTaxes == 0) {... */\n    tag_296:\n        /* \"SwishFishToken.sol\":10151:10175  taxFeeHeisenDev.mul(100) */\n      tag_300\n      swap2\n      swap3\n      swap5\n      swap10\n      swap4\n      swap6\n      swap8\n      swap9\n      pop\n      tag_26\n      jump\t// in\n    tag_300:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      tag_301\n      tag_29\n      jump\t// in\n    tag_301:\n      pop\n        /* \"libraries/SafeMath.sol\":3573:3578  a / b */\n      tag_302\n      swap2\n      tag_24\n      jump\t// in\n    tag_302:\n        /* \"SwishFishToken.sol\":10239:10263  taxFeeMarketing.mul(100) */\n      swap3\n      tag_303\n      swap1\n      tag_26\n      jump\t// in\n    tag_303:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      tag_304\n      tag_29\n      jump\t// in\n    tag_304:\n      pop\n        /* \"libraries/SafeMath.sol\":3573:3578  a / b */\n      tag_305\n      swap2\n      tag_24\n      jump\t// in\n    tag_305:\n        /* \"SwishFishToken.sol\":10322:10341  taxFeeTeam.mul(100) */\n      swap8\n      tag_306\n      swap1\n      tag_26\n      jump\t// in\n    tag_306:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      tag_307\n      tag_29\n      jump\t// in\n    tag_307:\n      pop\n        /* \"libraries/SafeMath.sol\":3573:3578  a / b */\n      tag_308\n      swap2\n      tag_24\n      jump\t// in\n    tag_308:\n        /* \"SwishFishToken.sol\":10400:10437  amountFee.mul(currentTaxFeeHeisenDev) */\n      swap2\n      tag_309\n      swap1\n      dup3\n      tag_28\n      jump\t// in\n    tag_309:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_310\n      tag_29\n      jump\t// in\n    tag_310:\n      pop\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      div\n        /* \"SwishFishToken.sol\":10487:10524  amountFee.mul(currentTaxFeeMarketing) */\n      swap7\n      tag_311\n      swap1\n      dup3\n      tag_28\n      jump\t// in\n    tag_311:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_312\n      tag_29\n      jump\t// in\n    tag_312:\n      pop\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      div\n        /* \"SwishFishToken.sol\":10569:10601  amountFee.mul(currentTaxFeeTeam) */\n      swap2\n      tag_313\n      swap2\n      tag_28\n      jump\t// in\n    tag_313:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_314\n      tag_29\n      jump\t// in\n    tag_314:\n      pop\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      div\n      swap2\n      dup7\n      tag_315\n      tag_22\n      jump\t// in\n    tag_315:\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_316\n      swap1\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_316:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_317\n      swap2\n      tag_12\n      jump\t// in\n    tag_317:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      tag_318\n      tag_22\n      jump\t// in\n    tag_318:\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_319\n      swap1\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_319:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_320\n      swap2\n      tag_12\n      jump\t// in\n    tag_320:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      tag_321\n      tag_22\n      jump\t// in\n    tag_321:\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_322\n      swap1\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_322:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_323\n      swap2\n      tag_12\n      jump\t// in\n    tag_323:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap6\n        /* \"SwishFishToken.sol\":10796:10810  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":10796:10833  _poolHeisenDev.add(heisenVerseAmount) */\n      swap1\n      tag_324\n      swap2\n      tag_21\n      jump\t// in\n    tag_324:\n        /* \"SwishFishToken.sol\":10796:10810  _poolHeisenDev */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":10865:10879  _poolMarketing */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":10865:10900  _poolMarketing.add(marketingAmount) */\n      swap1\n      tag_325\n      swap2\n      tag_21\n      jump\t// in\n    tag_325:\n        /* \"SwishFishToken.sol\":10865:10879  _poolMarketing */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n      sload\n        /* \"SwishFishToken.sol\":10927:10952  _poolTeam.add(teamAmount) */\n      swap1\n      tag_326\n      swap2\n      tag_21\n      jump\t// in\n    tag_326:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      sstore\n        /* \"SwishFishToken.sol\":9667:9687  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":9994:10964  if (totalTaxes == 0) {... */\n      swap2\n      jump(tag_299)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_290:\n      0x84\n      swap3\n      swap2\n      0x38\n      0x416d6f756e742063616e2774206578636565647320746865206d617820747261\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x6e73616374696f6e20776974686472617720616d6f756e740000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_288:\n      0x64\n      swap3\n      swap2\n      0x1c\n      0x55736572206861732070656e64696e67205769746864726177616c7300000000\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_286:\n      0x64\n      swap3\n      swap2\n        /* \"SwishFishToken.sol\":9547:9558  addressTeam */\n      0x19\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x546865206665652063616e6e6f74206578636565642037352500000000000000\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_284:\n      0x64\n      swap3\n      swap2\n      0x1b\n      0x5465616d2063616e2774206d616b65207769746864726177616c730000000000\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_282:\n      0x64\n      dup5\n      0x536b796c65722063616e2774206d616b65207769746864726177616c73000000\n      dup6\n      0x1d\n      dup7\n      dup13\n      dup15\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_280:\n      0x64\n      dup5\n      0x48656973656e2063616e2774206d616b65207769746864726177616c73000000\n      dup6\n      0x1d\n      dup7\n      dup13\n      dup15\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_278:\n      0x64\n      dup5\n      0x4261636b656e642063616e2774206d616b65207769746864726177616c730000\n      dup6\n      0x1e\n      dup7\n      dup13\n      dup15\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_276:\n      0x64\n      dup6\n      0x4f776e6572732063616e2774206d616b65207769746864726177616c73000000\n      dup7\n      0x1d\n      dup8\n      dup14\n      dup16\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_274:\n      0x84\n      swap3\n      swap2\n      0x22\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b65\n      swap3\n      0x20\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x6e64000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_74:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2356:2390  uint256 public taxFeeMarketing = 3 */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_72:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":1647:1740  address payable public addressHeisenDev = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n      0x17\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_70:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":1021:1060  uint public withdrawPrice = 0.005 ether */\n      0x13\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_68:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      0x20\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n      tag_343\n      tag_3\n      jump\t// in\n    tag_343:\n      and\n      dup2\n      mstore\n      dup1\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_66:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":1847:1935  address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n      0x19\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_64:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"SwishFishToken.sol\":2697:2725  uint256 public _poolTeam = 0 */\n      0x20\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      dup2\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_62:\n      swap1\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":11273:11295  _accountWithdrawalLast */\n      0x11\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":11309:11314  86400 */\n      0x015180\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      add\n      swap1\n      dup2\n      dup2\n      gt\n      tag_360\n      jumpi\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_362\n      jumpi\n        /* \"SwishFishToken.sol\":11255:11270  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":11255:11315  block.timestamp > _accountWithdrawalLast[account].add(86400) */\n      gt\n        /* \"SwishFishToken.sol\":11251:11444  if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {... */\n      tag_358\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_359:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":11489:11512  _accountWithdrawalCount */\n      0x12\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":11526:11527  1 */\n      0x01\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      add\n      swap1\n      dup2\n      dup2\n      gt\n      tag_360\n      jumpi\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_362\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n        /* \"SwishFishToken.sol\":11489:11512  _accountWithdrawalCount */\n      0x12\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      dup5\n      dup5\n      keccak256\n      sstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":11583:11602  _maxWithdrawalCount */\n      0x15\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      lt\n      tag_364\n      jumpi\n        /* \"SwishFishToken.sol\":11802:11815  withdrawPrice */\n      0x13\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":11788:11797  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":11788:11816  msg.value >= (withdrawPrice) */\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_366\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      pop\n        /* \"SwishFishToken.sol\":12079:12095  Withdraw(amount) */\n      0x5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n        /* \"SwishFishToken.sol\":11917:11937  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n      sload\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n        /* \"SwishFishToken.sol\":12007:12013  amount */\n      tag_368\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      dup3\n      caller\n        /* \"SwishFishToken.sol\":11986:11990  this */\n      address\n        /* \"SwishFishToken.sol\":12007:12013  amount */\n      tag_19\n      jump\t// in\n    tag_368:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n        /* \"SwishFishToken.sol\":11917:11937  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      dup5\n      dup2\n      dup2\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":12079:12095  Withdraw(amount) */\n      log1\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_366:\n      0xa4\n      swap2\n      dup5\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x44\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520616d6f756e742073656e74206973206e6f7420657175616c20746f20\n      0x44\n      dup3\n      add\n      mstore\n      0x74686520424e4220616d6f756e7420726571756972656420666f722077697468\n      0x64\n      dup3\n      add\n      mstore\n      0x6472617700000000000000000000000000000000000000000000000000000000\n      0x84\n      dup3\n      add\n      mstore\n      revert\n    tag_364:\n      0x84\n      swap2\n      dup5\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x30\n      0x24\n      dup3\n      add\n      mstore\n      0x596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e65207769\n      0x44\n      dup3\n      add\n      mstore\n      0x746864726177616c207065722064617900000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_362:\n      pop\n      0x64\n      swap2\n      dup5\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_360:\n      0x24\n      dup6\n        /* \"SwishFishToken.sol\":11273:11295  _accountWithdrawalLast */\n      0x11\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":11251:11444  if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {... */\n    tag_358:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":11273:11295  _accountWithdrawalLast */\n      0x11\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"SwishFishToken.sol\":11255:11270  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      dup5\n      keccak256\n      sstore\n        /* \"SwishFishToken.sol\":11396:11419  _accountWithdrawalCount */\n      0x12\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup3\n      dup5\n      dup2\n      keccak256\n      sstore\n        /* \"SwishFishToken.sol\":11251:11444  if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {... */\n      jump(tag_359)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_60:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_205\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      swap3\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_221\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_375\n      tag_3\n      jump\t// in\n    tag_375:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      0x01\n      dup7\n      mstore\n      dup5\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup3\n      mstore\n      dup7\n      mstore\n      dup5\n      calldataload(0x24)\n      swap2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_21\n      jump\t// in\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_58:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2617:2650  uint256 public _poolHeisenDev = 0 */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_56:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/ERC20.sol\":3304:3306  18 */\n      0x12\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      return\n    tag_54:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2732:2765  uint256 public _poolLiquidity = 0 */\n      0x21\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_52:\n      swap1\n      pop\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x60))\n      tag_392\n      tag_3\n      jump\t// in\n    tag_392:\n      tag_393\n      tag_4\n      jump\t// in\n    tag_393:\n      swap2\n      dup5\n      calldataload(0x44)\n      swap5\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n      swap1\n      not(0x00)\n        /* \"contracts/ERC20.sol\":11767:11804  currentAllowance != type(uint256).max */\n      dup3\n      sub\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      tag_394\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_395:\n      0x20\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      dup7\n      tag_205\n      dup8\n      dup8\n      dup8\n      tag_18\n      jump\t// in\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n    tag_394:\n        /* \"contracts/ERC20.sol\":11829:11855  currentAllowance >= amount */\n      dup5\n      dup3\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_397\n      jumpi\n      pop\n      swap2\n      dup4\n      swap2\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      tag_399\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_400\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      swap8\n      swap7\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      tag_205\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap7\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_222\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_223\n      tag_22\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n    tag_400:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      dup4\n      tag_20\n      jump\t// in\n    tag_399:\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      swap2\n      swap4\n      swap5\n      dup2\n      swap4\n      pop\n      jump(tag_395)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_397:\n      0x64\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_50:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2657:2690  uint256 public _poolMarketing = 0 */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":3467:3479  _totalSupply */\n      0x02\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_46:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":425:466  IUniswapV2Router02 public uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_44:\n      dup4\n      swap2\n      pop\n      jumpi(tag_121, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup2\n      calldataload\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_419\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1082:1112  _proposalId < proposals.length */\n      dup3\n      lt\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_13\n      jump\t// in\n    tag_419:\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      tag_420\n      dup2\n      tag_1\n      jump\t// in\n    tag_420:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      pop\n      0xff\n      swap2\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_421\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      exp(0x02, 0xa0)\n      dup1\n      swap5\n      sload\n      div\n      and\n        /* \"utils/MultiSignature.sol\":1457:1489  !proposals[_proposalId].executed */\n      iszero\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_14\n      jump\t// in\n    tag_421:\n        /* \"access/Ownable.sol\":1470:1477  _owners */\n      0x09\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":14222:14239  uint256 count = 0 */\n      dup8\n      dup1\n        /* \"SwishFishToken.sol\":14263:14290  i < requiredConfirmations() */\n    tag_422:\n      dup3\n      dup2\n      lt\n      tag_423\n      jumpi\n        /* \"SwishFishToken.sol\":14586:14643  _getApprovalCount(_proposalId) >= requiredConfirmations() */\n      pop\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_425\n      jumpi\n        /* \"SwishFishToken.sol\":14740:14762  proposals[_proposalId] */\n      swap1\n      tag_427\n        /* \"SwishFishToken.sol\":15314:15338  proposal.transferBackend */\n      0x07\n        /* \"SwishFishToken.sol\":14740:14762  proposals[_proposalId] */\n      swap3\n      tag_1\n      jump\t// in\n    tag_427:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      pop\n      swap1\n      not(0xff0000000000000000000000000000000000000000)\n      dup3\n      sload\n      and\n      or\n      dup1\n      dup3\n      sstore\n      dup5\n      dup5\n      dup1\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n        /* \"SwishFishToken.sol\":14808:14907  if (proposal.updateSalesStatus) {... */\n      tag_428\n      jumpi\n        /* \"SwishFishToken.sol\":14250:14416  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_429:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      pop\n      pop\n      0x010000000000000000000000000000000000000000000000\n      dup3\n      sload\n      div\n      and\n        /* \"SwishFishToken.sol\":14917:14999  if (proposal.swapAndAddLiquidity) {... */\n      tag_430\n      jumpi\n        /* \"SwishFishToken.sol\":14250:14416  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_431:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      0x01000000000000000000000000000000000000000000000000\n      dup3\n      sload\n      div\n      and\n        /* \"SwishFishToken.sol\":15009:15117  if (proposal.updateWithdrawOptions) {... */\n      tag_432\n      jumpi\n        /* \"SwishFishToken.sol\":14250:14416  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_433:\n        /* \"SwishFishToken.sol\":15131:15155  proposal.updateTaxesFees */\n      dup3\n      0x02\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":15127:15300  if (proposal.updateTaxesFees) {... */\n      tag_434\n      jumpi\n        /* \"SwishFishToken.sol\":14250:14416  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_435:\n        /* \"SwishFishToken.sol\":15314:15338  proposal.transferBackend */\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      dup2\n      and\n        /* \"SwishFishToken.sol\":15310:15408  if (proposal.transferBackend) {... */\n      tag_436\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      dup1\n      return\n        /* \"SwishFishToken.sol\":15310:15408  if (proposal.transferBackend) {... */\n    tag_436:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x0100\n      sub(exp(0x02, 0xa0), 0x01)\n      swap2\n      div\n      and\n        /* \"access/Ownable.sol\":2663:2687  newBackend != address(0) */\n      swap3\n      dup4\n      iszero\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_438\n      jumpi\n      pop\n      pop\n      pop\n      dup1\n      not(sub(exp(0x02, 0xa0), 0x01))\n        /* \"SwishFishToken.sol\":15314:15338  proposal.transferBackend */\n      0x07\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      or\n        /* \"SwishFishToken.sol\":15314:15338  proposal.transferBackend */\n      0x07\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"access/Ownable.sol\":2778:2822  OwnershipTransferred(address(0), newBackend) */\n      dup2\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      dup2\n      dup1\n      log3\n        /* \"SwishFishToken.sol\":15310:15408  if (proposal.transferBackend) {... */\n      dup2\n      dup1\n      dup1\n      dup1\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      dup1\n      return\n    tag_438:\n      0x84\n      swap4\n      pop\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      0x44\n      dup3\n      add\n      mstore\n      0x6464726573730000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":15127:15300  if (proposal.updateTaxesFees) {... */\n    tag_434:\n        /* \"SwishFishToken.sol\":8309:8393  UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee) */\n      0xac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee9\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x80\n      0x03\n        /* \"SwishFishToken.sol\":15188:15214  proposal.heisenVerseTaxFee */\n      dup4\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":15216:15240  proposal.marketingTaxFee */\n      dup8\n      dup5\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":15242:15261  proposal.teamTaxFee */\n      dup6\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":14316:14332  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":15263:15287  proposal.liquidityTaxFee */\n      dup7\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap2\n      dup4\n        /* \"SwishFishToken.sol\":8132:8168  taxFeeHeisenDev = _heisenVerseTaxFee */\n      0x1a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup1\n        /* \"SwishFishToken.sol\":8179:8213  taxFeeMarketing = _marketingTaxFee */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n        /* \"SwishFishToken.sol\":8224:8248  taxFeeTeam = _teamTaxFee */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup3\n        /* \"SwishFishToken.sol\":8259:8293  taxFeeLiquidity = _liquidityTaxFee */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup12\n      mload\n      swap4\n      dup5\n      mstore\n      dup10\n      dup5\n      add\n      mstore\n      dup11\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"SwishFishToken.sol\":8309:8393  UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee) */\n      log1\n        /* \"SwishFishToken.sol\":15127:15300  if (proposal.updateTaxesFees) {... */\n      jump(tag_435)\n        /* \"SwishFishToken.sol\":15009:15117  if (proposal.updateWithdrawOptions) {... */\n    tag_432:\n        /* \"SwishFishToken.sol\":8529:8566  UpdateWithdrawOptions(_withdrawPrice) */\n      0x7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c\n        /* \"SwishFishToken.sol\":15082:15104  proposal.withdrawPrice */\n      dup5\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x01\n        /* \"SwishFishToken.sol\":15082:15104  proposal.withdrawPrice */\n      dup4\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      dup1\n        /* \"SwishFishToken.sol\":8483:8513  withdrawPrice = _withdrawPrice */\n      0x13\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup9\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":8529:8566  UpdateWithdrawOptions(_withdrawPrice) */\n      log1\n        /* \"SwishFishToken.sol\":15009:15117  if (proposal.updateWithdrawOptions) {... */\n      jump(tag_433)\n        /* \"SwishFishToken.sol\":14917:14999  if (proposal.swapAndAddLiquidity) {... */\n    tag_430:\n        /* \"SwishFishToken.sol\":7103:7118  contractBalance */\n      tag_440\n        /* \"SwishFishToken.sol\":6928:6932  this */\n      address\n        /* \"SwishFishToken.sol\":6920:6941  address(this).balance */\n      balance\n        /* \"SwishFishToken.sol\":6969:6983  _poolLiquidity */\n      tag_441\n      0x21\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":6969:6983  _poolLiquidity */\n      tag_15\n      jump\t// in\n    tag_441:\n        /* \"SwishFishToken.sol\":6928:6932  this */\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup10\n      mstore\n      dup9\n      dup7\n      mstore\n        /* \"SwishFishToken.sol\":7058:7061  100 */\n      0x64\n        /* \"SwishFishToken.sol\":7021:7053  balanceOf(address(this)).mul(30) */\n      tag_442\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup10\n      dup12\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":7021:7053  balanceOf(address(this)).mul(30) */\n      tag_25\n      jump\t// in\n    tag_442:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_443\n      tag_29\n      jump\t// in\n    tag_443:\n      pop\n      div\n        /* \"SwishFishToken.sol\":7103:7118  contractBalance */\n      tag_10\n      jump\t// in\n    tag_440:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n        /* \"SwishFishToken.sol\":6969:6983  _poolLiquidity */\n      0x21\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":14917:14999  if (proposal.swapAndAddLiquidity) {... */\n      jump(tag_431)\n        /* \"SwishFishToken.sol\":14808:14907  if (proposal.updateSalesStatus) {... */\n    tag_428:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x0100000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":8692:8717  SalesState(_salesEnabled) */\n      0x01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      div\n      and\n      iszero\n      iszero\n      not(0xff)\n        /* \"SwishFishToken.sol\":8648:8676  salesEnabled = _salesEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      dup7\n      dup3\n      and\n      or\n        /* \"SwishFishToken.sol\":8648:8676  salesEnabled = _salesEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup9\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":8692:8717  SalesState(_salesEnabled) */\n      log1\n        /* \"SwishFishToken.sol\":14808:14907  if (proposal.updateSalesStatus) {... */\n      dup8\n      dup5\n      dup5\n      jump(tag_429)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_425:\n      pop\n      pop\n      pop\n      0x84\n      swap3\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x35\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a20617070726f76616c7320\n      0x44\n      dup3\n      add\n      mstore\n      0x6973206c657373207468616e2072657175697265640000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":14292:14295  i++ */\n    tag_423:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup11\n      mstore\n        /* \"SwishFishToken.sol\":14316:14332  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup8\n      mstore\n      dup9\n      dup11\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      add\n      sload\n      and\n      dup12\n      mstore\n      dup8\n      mstore\n      dup6\n      dup10\n      dup12\n      keccak256\n      sload\n      and\n        /* \"SwishFishToken.sol\":14312:14405  if (proposalApproved[_proposalId][getOwner(i)]) {... */\n      tag_444\n      jumpi\n        /* \"SwishFishToken.sol\":14292:14295  i++ */\n    tag_445:\n      not(0x00)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      eq\n      tag_446\n      jumpi\n      0x01\n      add\n        /* \"SwishFishToken.sol\":14255:14261  uint i */\n      jump(tag_422)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_446:\n      0x24\n      dup11\n      0x11\n      dup11\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":14312:14405  if (proposalApproved[_proposalId][getOwner(i)]) {... */\n    tag_444:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_446\n      jumpi\n        /* \"SwishFishToken.sol\":14312:14405  if (proposalApproved[_proposalId][getOwner(i)]) {... */\n      swap1\n      jump(tag_445)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_42:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":1747:1840  address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n      0x18\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_205\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_459\n      tag_3\n      jump\t// in\n    tag_459:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_20\n      jump\t// in\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_38:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_121\n      jumpi\n      dup1\n      mload\n      swap2\n      dup4\n      sload(0x03)\n      0x02\n      dup2\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup2\n      and\n      dup1\n      iszero\n      tag_464\n      jumpi\n    tag_465:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup3\n      eq\n      tag_466\n      jumpi\n      pop\n      dup5\n      dup9\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_468\n      jumpi\n      pop\n      0x01\n      eq\n      tag_470\n      jumpi\n    tag_471:\n      tag_246\n      dup7\n      dup7\n      tag_247\n      dup3\n      dup12\n      sub\n      dup4\n      tag_9\n      jump\t// in\n    tag_470:\n      swap3\n      swap6\n      pop\n      0x03\n      dup4\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n    tag_474:\n      dup3\n      dup5\n      lt\n      tag_475\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_246\n      swap5\n      tag_247\n      swap3\n      dup3\n      add\n      add\n      swap5\n      dup7\n      jump(tag_471)\n    tag_475:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_474)\n    tag_468:\n      not(0xff)\n      and\n      dup8\n      dup7\n      add\n      mstore\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_247\n      dup3\n      tag_246\n      dup7\n      jump(tag_471)\n    tag_466:\n      dup4\n      0x22\n      0x24\n      swap3\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_464:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_465)\n    tag_36:\n      dup5\n      dup5\n      swap3\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x08\n      swap1\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x01c0\n      swap6\n      mstore\n      mul\n      dup1\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap2\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      dup2\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4\n      dup4\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5\n      dup5\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      dup6\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db7\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap8\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap9\n      dup13\n      sub(exp(0x02, 0xa0), 0x01)\n      swap13\n      dup14\n      dup4\n      and\n      dup3\n      mstore\n      dup5\n      exp(0x02, 0xa0)\n      dup5\n      div\n      and\n      iszero\n      iszero\n      0x20\n      dup4\n      add\n      mstore\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n    tag_1:\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_483\n      jumpi\n      0x08\n      swap1\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      mul\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_483:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_2:\n      0x20\n      dup1\n      dup3\n      mstore\n      dup3\n      mload\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap4\n      swap3\n      0x00\n    tag_485:\n      dup3\n      dup2\n      lt\n      tag_486\n      jumpi\n      pop\n      pop\n      0x40\n      swap3\n      swap4\n      pop\n      0x00\n      dup4\n      dup3\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_486:\n      dup2\n      dup2\n      add\n      dup7\n      add\n      mload\n      dup5\n      dup3\n      add\n      0x40\n      add\n      mstore\n      dup6\n      add\n      jump(tag_485)\n    tag_3:\n      calldataload(0x04)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_488\n      jumpi\n      jump\t// out\n    tag_488:\n      0x00\n      dup1\n      revert\n    tag_4:\n      calldataload(0x24)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_488\n      jumpi\n      jump\t// out\n    tag_5:\n      iszero\n      tag_492\n      jumpi\n      jump\t// out\n    tag_492:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      0x50726573616c652069736e277420656e61626c65640000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_6:\n      iszero\n      tag_494\n      jumpi\n      jump\t// out\n    tag_494:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e657200\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_7:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_496\n      jumpi\n      jump\t// out\n    tag_496:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_8:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_498\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_498:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_9:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_498\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n        /* \"SwishFishToken.sol\":8733:9135  function addLiquidity(uint256 tokens, uint256 bnb) private {... */\n    tag_10:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      dup2\n        /* \"SwishFishToken.sol\":8835:8850  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap2\n        /* \"SwishFishToken.sol\":8853:8877  balanceOf(address(this)) */\n      tag_502\n      0x00\n        /* \"SwishFishToken.sol\":8820:8824  this */\n      swap4\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      dup5\n      0x20\n      mstore\n      0x40\n      dup6\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":8820:8824  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":8853:8877  balanceOf(address(this)) */\n      tag_20\n      jump\t// in\n    tag_502:\n        /* \"SwishFishToken.sol\":8835:8850  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9057:9072  block.timestamp */\n      swap1\n        /* \"SwishFishToken.sol\":9077:9080  300 */\n      0x012c\n        /* \"SwishFishToken.sol\":9057:9072  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      add\n        /* \"SwishFishToken.sol\":9057:9072  block.timestamp */\n      dup1\n      timestamp\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      gt\n      tag_503\n      jumpi\n        /* \"SwishFishToken.sol\":9057:9072  block.timestamp */\n      timestamp\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_505\n      jumpi\n      0xc4\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      0x60\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap3\n      dup7\n      mload(0x40)\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xf305d71900000000000000000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      dup6\n      mstore\n        /* \"SwishFishToken.sol\":8820:8824  this */\n      address\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      0x04\n      dup7\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      0x24\n      dup6\n      add\n      mstore\n      dup9\n      0x44\n      dup6\n      add\n      mstore\n      dup9\n      0x64\n      dup6\n      add\n      mstore\n        /* \"SwishFishToken.sol\":8820:8824  this */\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x84\n      dup6\n      add\n      mstore\n      0xa4\n      dup5\n      add\n      mstore\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      gas\n      call\n      dup1\n      iszero\n      tag_507\n      jumpi\n      tag_509\n      jumpi\n        /* \"SwishFishToken.sol\":8733:9135  function addLiquidity(uint256 tokens, uint256 bnb) private {... */\n    tag_510:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      pop\n      pop\n      0x20\n        /* \"SwishFishToken.sol\":9108:9127  LiquidityAdded(bnb) */\n      0xfdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":9108:9127  LiquidityAdded(bnb) */\n      log1\n        /* \"SwishFishToken.sol\":8733:9135  function addLiquidity(uint256 tokens, uint256 bnb) private {... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n    tag_509:\n      0x60\n      swap1\n      dup2\n      returndatasize\n      dup2\n      gt\n      tag_511\n      jumpi\n    tag_512:\n      tag_513\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_513:\n      dup2\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sub\n      slt\n      tag_137\n      jumpi\n        /* \"SwishFishToken.sol\":8889:9092  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      dup1\n      jump(tag_510)\n    tag_511:\n      pop\n      returndatasize\n      jump(tag_512)\n    tag_507:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_505:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_503:\n      0x24\n      dup5\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n    tag_12:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_496\n      jumpi\n      jump\t// out\n    tag_13:\n      iszero\n      tag_518\n      jumpi\n      jump\t// out\n    tag_518:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2d\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2064\n      0x44\n      dup3\n      add\n      mstore\n      0x6f6573206e6f7420657869737400000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_14:\n      iszero\n      tag_520\n      jumpi\n      jump\t// out\n    tag_520:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x33\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077\n      0x44\n      dup3\n      add\n      mstore\n      0x617320616c726561647920657865637574656400000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":7504:7979  function swapTokensForEth(uint256 tokenAmount) private {... */\n    tag_15:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x40\n      dup1\n      mload\n      swap2\n      0xffffffffffffffff\n      swap1\n      0x60\n      dup5\n      add\n      dup3\n      dup2\n      gt\n      dup6\n      dup3\n      lt\n      or\n      tag_498\n      jumpi\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":7608:7609  2 */\n      0x02\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap1\n      dup5\n      calldatasize\n      dup4\n      calldatacopy\n      dup6\n      mload\n      iszero\n      tag_483\n      jumpi\n        /* \"SwishFishToken.sol\":7639:7643  this */\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      sub(exp(0x02, 0xa0), 0x01)\n      swap3\n      dup4\n        /* \"SwishFishToken.sol\":7665:7680  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap2\n      dup7\n      mload\n        /* \"SwishFishToken.sol\":7665:7687  uniswapV2Router.WETH() */\n      swap3\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xad5c464800000000000000000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":7665:7687  uniswapV2Router.WETH() */\n      dup5\n      mstore\n      dup2\n      dup5\n      0x04\n      dup2\n      dup5\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_526\n      jumpi\n      0x00\n      swap5\n      tag_528\n      jumpi\n        /* \"SwishFishToken.sol\":7504:7979  function swapTokensForEth(uint256 tokenAmount) private {... */\n    tag_529:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      pop\n      dup9\n      mload\n        /* \"SwishFishToken.sol\":7660:7661  1 */\n      swap4\n      0x01\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap5\n      dup6\n      lt\n      iszero\n      tag_483\n      jumpi\n        /* \"SwishFishToken.sol\":7750:7761  tokenAmount */\n      tag_532\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup8\n      dup6\n      swap3\n      and\n      dup11\n      dup13\n      add\n      mstore\n        /* \"SwishFishToken.sol\":7639:7643  this */\n      address\n        /* \"SwishFishToken.sol\":7750:7761  tokenAmount */\n      tag_20\n      jump\t// in\n    tag_532:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n        /* \"SwishFishToken.sol\":7665:7680  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      swap5\n      dup6\n      extcodesize\n      iszero\n      tag_488\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup8\n      swap9\n      swap5\n      swap4\n      swap2\n      swap9\n      mload\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      swap9\n      dup10\n      swap6\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x791ac94700000000000000000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      dup8\n      mstore\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0xa4\n      dup8\n      add\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      swap3\n        /* \"SwishFishToken.sol\":7665:7687  uniswapV2Router.WETH() */\n      0x04\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      0x00\n      0x24\n      dup9\n      add\n      mstore\n      0xa0\n      0x44\n      dup9\n      add\n      mstore\n      mload\n      dup1\n      swap3\n      mstore\n      0xc4\n      dup7\n      add\n      swap5\n      swap4\n      0x00\n      swap1\n    tag_535:\n      dup4\n      dup3\n      lt\n      tag_536\n      jumpi\n        /* \"SwishFishToken.sol\":7639:7643  this */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      dup2\n      0x00\n      dup2\n      dup2\n      swap6\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x64\n      dup4\n      add\n      mstore\n        /* \"SwishFishToken.sol\":7945:7960  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x84\n      dup4\n      add\n      mstore\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_538\n      jumpi\n      tag_540\n      jumpi\n        /* \"SwishFishToken.sol\":7504:7979  function swapTokensForEth(uint256 tokenAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n    tag_540:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      gt\n      tag_498\n      jumpi\n      mstore\n        /* \"SwishFishToken.sol\":7504:7979  function swapTokensForEth(uint256 tokenAmount) private {... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":7775:7971  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n    tag_538:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_536:\n      dup6\n      mload\n      dup2\n      and\n      dup8\n      mstore\n      dup12\n      swap8\n      pop\n      swap6\n      dup3\n      add\n      swap6\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      dup5\n      add\n      swap1\n      jump(tag_535)\n        /* \"SwishFishToken.sol\":7665:7687  uniswapV2Router.WETH() */\n    tag_528:\n      dup3\n      dup2\n      dup2\n      swap7\n      swap4\n      swap7\n      returndatasize\n      dup4\n      gt\n      tag_544\n      jumpi\n    tag_545:\n      tag_546\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_546:\n      dup2\n      add\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sub\n      slt\n      tag_112\n      jumpi\n      mload\n      swap1\n      dup7\n      dup3\n      and\n      dup3\n      sub\n      tag_137\n      jumpi\n        /* \"SwishFishToken.sol\":7665:7687  uniswapV2Router.WETH() */\n      pop\n      swap3\n      codesize\n      jump(tag_529)\n    tag_544:\n      pop\n      returndatasize\n      jump(tag_545)\n    tag_526:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup9\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_16:\n      iszero\n      tag_551\n      jumpi\n      jump\t// out\n    tag_551:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      0x44\n      dup3\n      add\n      mstore\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_17:\n      iszero\n      tag_553\n      jumpi\n      jump\t// out\n    tag_553:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":6172:6836  function _transfer(... */\n    tag_18:\n      swap1\n        /* \"SwishFishToken.sol\":6821:6827  amount */\n      tag_555\n        /* \"SwishFishToken.sol\":6172:6836  function _transfer(... */\n      swap3\n      swap2\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      dup3\n      and\n        /* \"SwishFishToken.sol\":6304:6322  from != address(0) */\n      swap1\n        /* \"SwishFishToken.sol\":6296:6364  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_556\n        /* \"SwishFishToken.sol\":6304:6322  from != address(0) */\n      dup3\n      iszero\n      iszero\n        /* \"SwishFishToken.sol\":6296:6364  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_16\n      jump\t// in\n    tag_556:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      and\n        /* \"SwishFishToken.sol\":6383:6399  to != address(0) */\n      swap1\n        /* \"SwishFishToken.sol\":6375:6439  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_557\n        /* \"SwishFishToken.sol\":6383:6399  to != address(0) */\n      dup3\n      iszero\n      iszero\n        /* \"SwishFishToken.sol\":6375:6439  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_17\n      jump\t// in\n    tag_557:\n        /* \"SwishFishToken.sol\":6320:6321  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup2\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":6467:6486  _isExcludedFromFees */\n      0x22\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"SwishFishToken.sol\":6467:6519  _isExcludedFromFees[from] || _isExcludedFromFees[to] */\n      swap1\n      dup2\n      iszero\n      tag_558\n      jumpi\n        /* \"SwishFishToken.sol\":6172:6836  function _transfer(... */\n    tag_559:\n        /* \"SwishFishToken.sol\":6465:6520  !(_isExcludedFromFees[from] || _isExcludedFromFees[to]) */\n      pop\n      iszero\n        /* \"SwishFishToken.sol\":6537:6579  takeFee && automatedMarketMakerPairs[from] */\n      swap1\n      dup2\n      tag_560\n      jumpi\n        /* \"SwishFishToken.sol\":6172:6836  function _transfer(... */\n    tag_561:\n        /* \"SwishFishToken.sol\":6533:6785  if (takeFee && automatedMarketMakerPairs[from]) {... */\n      pop\n      tag_562\n      jumpi\n        /* \"SwishFishToken.sol\":6172:6836  function _transfer(... */\n    tag_563:\n        /* \"SwishFishToken.sol\":6821:6827  amount */\n      pop\n      tag_19\n      jump\t// in\n    tag_555:\n        /* \"SwishFishToken.sol\":6172:6836  function _transfer(... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":6533:6785  if (takeFee && automatedMarketMakerPairs[from]) {... */\n    tag_562:\n        /* \"SwishFishToken.sol\":6690:6725  _poolLiquidity.add(liquidityAmount) */\n      tag_564\n        /* \"SwishFishToken.sol\":6654:6657  100 */\n      0x64\n        /* \"SwishFishToken.sol\":6622:6649  amount.mul(taxFeeLiquidity) */\n      tag_565\n        /* \"SwishFishToken.sol\":6633:6648  taxFeeLiquidity */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":6622:6649  amount.mul(taxFeeLiquidity) */\n      dup8\n      tag_28\n      jump\t// in\n    tag_565:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_566\n      tag_29\n      jump\t// in\n    tag_566:\n      pop\n      div\n        /* \"SwishFishToken.sol\":6690:6704  _poolLiquidity */\n      0x21\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":6690:6725  _poolLiquidity.add(liquidityAmount) */\n      tag_21\n      jump\t// in\n    tag_564:\n        /* \"SwishFishToken.sol\":6690:6704  _poolLiquidity */\n      0x21\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":7445:7460  contractBalance */\n      tag_567\n        /* \"SwishFishToken.sol\":7272:7276  this */\n      address\n        /* \"SwishFishToken.sol\":7264:7285  address(this).balance */\n      balance\n        /* \"SwishFishToken.sol\":7313:7325  _tokenAmount */\n      tag_568\n      dup7\n      tag_15\n      jump\t// in\n    tag_568:\n        /* \"SwishFishToken.sol\":7272:7276  this */\n      address\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n        /* \"SwishFishToken.sol\":6654:6657  100 */\n      0x64\n        /* \"SwishFishToken.sol\":7363:7395  balanceOf(address(this)).mul(30) */\n      tag_442\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x40\n      dup6\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":7363:7395  balanceOf(address(this)).mul(30) */\n      tag_25\n      jump\t// in\n        /* \"SwishFishToken.sol\":7445:7460  contractBalance */\n    tag_567:\n        /* \"SwishFishToken.sol\":6690:6704  _poolLiquidity */\n      0x21\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":6533:6785  if (takeFee && automatedMarketMakerPairs[from]) {... */\n      codesize\n      jump(tag_563)\n        /* \"SwishFishToken.sol\":6537:6579  takeFee && automatedMarketMakerPairs[from] */\n    tag_560:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      pop\n        /* \"SwishFishToken.sol\":6548:6573  automatedMarketMakerPairs */\n      0x24\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SwishFishToken.sol\":6537:6579  takeFee && automatedMarketMakerPairs[from] */\n      codesize\n      jump(tag_561)\n        /* \"SwishFishToken.sol\":6467:6519  _isExcludedFromFees[from] || _isExcludedFromFees[to] */\n    tag_558:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      pop\n      0x40\n      dup3\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SwishFishToken.sol\":6467:6519  _isExcludedFromFees[from] || _isExcludedFromFees[to] */\n      codesize\n      jump(tag_559)\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n    tag_19:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":7867:7885  from != address(0) */\n      swap2\n        /* \"contracts/ERC20.sol\":7859:7927  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_571\n        /* \"contracts/ERC20.sol\":7867:7885  from != address(0) */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/ERC20.sol\":7859:7927  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_16\n      jump\t// in\n    tag_571:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      and\n        /* \"contracts/ERC20.sol\":7946:7962  to != address(0) */\n      swap2\n        /* \"contracts/ERC20.sol\":7938:8002  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_572\n        /* \"contracts/ERC20.sol\":7946:7962  to != address(0) */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/ERC20.sol\":7938:8002  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_17\n      jump\t// in\n    tag_572:\n        /* \"contracts/ERC20.sol\":7883:7884  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      dup2\n      mstore\n      dup1\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8122:8143  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_573\n      jumpi\n      swap2\n      dup4\n      swap2\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_575\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap6\n      0x20\n      swap6\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_222\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_223\n      tag_22\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n    tag_575:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      dup3\n      mstore\n      dup2\n      dup6\n      mstore\n      dup3\n      dup3\n      keccak256\n      sstore\n      dup7\n      dup2\n      mstore\n      dup2\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_578\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      dup3\n      dup5\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_21\n      jump\t// in\n    tag_578:\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup9\n      dup2\n      mstore\n      dup1\n      dup7\n      mstore\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_573:\n      0x84\n      dup4\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n      0x44\n      dup3\n      add\n      mstore\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n    tag_20:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":11030:11049  owner != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_579\n      jumpi\n      and\n        /* \"contracts/ERC20.sol\":11109:11130  spender != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_581\n      jumpi\n      0x20\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup4\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mstore\n        /* \"contracts/ERC20.sol\":11182:11193  _allowances */\n      0x01\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      keccak256\n      dup6\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      dup3\n      mstore\n      dup1\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      keccak256\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_581:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      0x44\n      dup3\n      add\n      mstore\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_579:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_21:\n      swap1\n        /* \"libraries/SafeMath.sol\":577:582  a + b */\n      tag_583\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n        /* \"libraries/SafeMath.sol\":577:582  a + b */\n      dup3\n      tag_7\n      jump\t// in\n    tag_583:\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      swap1\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_505\n      jumpi\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_22:\n      mload(0x40)\n      swap1\n      tag_586\n      dup3\n      tag_8\n      jump\t// in\n    tag_586:\n      0x1e\n      dup3\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x20\n      dup4\n      add\n      mstore\n      jump\t// out\n    tag_23:\n      iszero\n      tag_587\n      jumpi\n      pop\n      jump\t// out\n    tag_587:\n      tag_589\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n      tag_2\n      jump\t// in\n    tag_589:\n      sub\n      swap1\n      revert\n    tag_24:\n      dup2\n      iszero\n      tag_590\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_590:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_25:\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup1\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_592\n      jumpi\n        /* \"SwishFishToken.sol\":7050:7052  30 */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"SwishFishToken.sol\":7050:7052  30 */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n        /* \"SwishFishToken.sol\":7050:7052  30 */\n      0x1e\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      swap2\n      dup4\n      tag_24\n      jump\t// in\n    tag_596:\n        /* \"libraries/SafeMath.sol\":2235:2245  c / a == b */\n      sub\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      tag_597\n      jumpi\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_597:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n      0x44\n      dup3\n      add\n      mstore\n      0x7700000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n    tag_592:\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      pop\n        /* \"libraries/SafeMath.sol\":2149:2150  0 */\n      0x00\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      swap1\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_26:\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup1\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_592\n      jumpi\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n        /* \"SwishFishToken.sol\":9901:9904  100 */\n      0x64\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      swap2\n      dup4\n      tag_24\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_27:\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup1\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_592\n      jumpi\n        /* \"SwishFishToken.sol\":5207:5209  10 */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"SwishFishToken.sol\":5207:5209  10 */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n        /* \"SwishFishToken.sol\":5207:5209  10 */\n      0x0a\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      swap2\n      dup4\n      tag_24\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n      swap1\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup2\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_613\n      jumpi\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n      dup3\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n      swap1\n      dup4\n      tag_24\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n    tag_613:\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      pop\n      pop\n        /* \"libraries/SafeMath.sol\":2149:2150  0 */\n      0x00\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      swap1\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15793  contract SwishFish is ERC20, Ownable {... */\n    tag_29:\n      mload(0x40)\n      swap1\n      tag_620\n      dup3\n      tag_8\n      jump\t// in\n    tag_620:\n      0x1a\n      dup3\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x20\n      dup4\n      add\n      mstore\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b9f1a0edcc7a52a47c82615094e790ebe5a3fb9dc62c8479e9c1ce783f3b9e7364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 2317,
									"id": 2794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_addOwner": {
									"entryPoint": 1827,
									"id": 1592,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060409080825234620006605760808162003636803803809162000025828562000665565b83398101031262000660576200003b81620006b7565b60206200004a818401620006b7565b916200006660606200005e878701620006b7565b9501620006b7565b62000073600354620006cc565b90601f9182811162000632575b5060127f537769736846697368000000000000000000000000000000000000000000000001600355600495620000b78754620006cc565b83811162000605575b5060067f5346480000000000000000000000000000000000000000000000000000000000018755600160a060020a031991338360085416176008558851916000976000805160206200361683398151915296338a898180a36b033b2e3c9fd0803ce8000000600c5561010061ffff19600d541617600d556611c37937e080006013556001806014558060155569152d02c7e14af680000060165573eda73409d4bbd147f4e1295a73a2ca243a529338876017541617601755733c1cd83d8850803c9c42ff5083f56b66b00fbd618760185416176018557363024ac73fe77427f20e8247fa26f470c0d9700b8760195416176019556002601a556003601b556003601c556002601d558a601e558a88558a8a558a6021557fc45a01550000000000000000000000000000000000000000000000000000000086528b8a87739ac64cc6e4415144c455bd8e4837fea55603e5c39281845afa968715620005fb578b8f8f928f9a620005a7575b505180927fad5c464800000000000000000000000000000000000000000000000000000000825281855afa90811562000551578f918f8f94938f9386936200055c575b50906044915195869384927fc9c653960000000000000000000000000000000000000000000000000000000084523090840152600160a060020a039d8e8092166024850152165af191821562000551578f918994938f92918f928d908593620004e2575b5092602388620003739a9794620003799d9c9a9794620003739a97600b541617600b551691828452602481528484209660ff1997878982541617905530855260228252858520878982541617905580601754168552858520878982541617905580601854168552858520878982541617905560195416845284842086888254161790553084525282822084868254161790558152209182541617905562000723565b62000723565b16908115620004605781906007541617600755848751938180a3600c5494301562000409575050507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620003d1846002546200090d565b600255308352828152620003e984868520546200090d565b3084528382528584205584519384523093a351612c659081620009b18239f35b926064937f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b608487868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b95505094955050905081813d831162000549575b62000502818362000665565b81010312620005455792878f93620003799796948f8f6023858f620003739962000530620003739d620006b7565b96999c5094975092959850989a9b50620002d1565b8c80fd5b503d620004f6565b508e513d8e823e3d90fd5b94955050505081813d83116200059f575b62000579818362000665565b810103126200054557908b8f8f8f949062000596604492620006b7565b9290916200026d565b503d6200056d565b939495969798995050905081813d8311620005f3575b620005c9818362000665565b81010312620005ef57908c8b8f989796959493620005e790620006b7565b98386200022a565b8b80fd5b503d620005bd565b8e513d8e823e3d90fd5b600088815286858183209301048201915b82811062000626575050620000c0565b81815560010162000616565b60006003815285848183209301048201915b8281106200065457505062000080565b81815560010162000644565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176200068857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b5190600160a060020a03821682036200066057565b906001600283049216801562000718575b6020831014620006e957565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691620006dd565b600160a060020a0316801562000889576000818152600a60205260ff6040822054166200082b57818152600a60205260408120805460ff1916600117905560095468010000000000000000811015620007fe576001810180600955811015620007d157600982527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018054600160a060020a03191683179055600080516020620036168339815191528180a3565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f776e61626c653a204f776e6572206973206e6f7420756e69717565000000006044820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f776e61626c653a204f776e657220697320746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b9081019081811162000981578110620009235790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe608060409080825260049081361015610053575b5050361561002057600080fd5b3461002757005b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2005b6000917c0100000000000000000000000000000000000000000000000000000000833504918263013cf08b14611e315750816306fdde0314611d3a578163095ea7b314611d105781630abdc64014611ce85781630d61b519146119095781631694505e146118e157816318160ddd146118c25781631b45a47a146118a357816323b872dd146117c95781632a9af7ba146117aa578163313ce5671461178e578163392627731461176f57816339509351146117275781633ccfd60b146114f6578163553000c1146114d8578163562e9df9146114b057816370a082311461147a5781637918447e1461145b5781637a594a2b146114335781637d81936c146114145781638198c34114610f3357816385a6a09114610e1e5781638da5cb5b14610df6578163933f5e0714610dd757816395d89b4114610cd157816398951b5614610bb0578163a457c2d714610ad3578163a6f2ae3a14610a68578163a9059cbb14610a37578163b6bba0ae14610a18578163c4ce220b146109f9578163c84ad9a5146109d5578163d7196dd914610873578163d8a0f828146107fb578163dce165a61461029957508063dd62ed3e146102505763fe7441e7146102165780610013565b903461024c57602036600319011261024c5780602092600160a060020a0361023c612109565b168152600e845220549051908152f35b5080fd5b50903461024c578060031936011261024c578060209261026e612109565b610276612124565b600160a060020a0391821683526001865283832091168252845220549051908152f35b905082346107f757610180806003193601126107f3578383359182151580930361024c576024938435918215158093036107f357604435948515158096036107ef5760643593841515968786036107eb5760a4359788151590818a036107e757610144358015159a8b82036107e3576101643599600160a060020a039b8c8c16809c036107e05760ff8b61033792338152600a602052205416612188565b610764575b6106d0575b610660575b8651966101c0880188811067ffffffffffffffff82111761064a57908e918152338952602089019182528801958652606088019485526080880193845260a0880191825260c0880191608435835260e0890193845261010089019460c43586526101208a019660e43588526101408b0198610104358a526101608c019a610124358c528c019e8f526101a08c019c8d5260055468010000000000000000811015610630578060016103fa920160055561206c565b9c909c61061757518c5495519151925193519451151578010000000000000000000000000000000000000000000000000278ff00000000000000000000000000000000000000000000000016941515770100000000000000000000000000000000000000000000000277ff0000000000000000000000000000000000000000000000169315157601000000000000000000000000000000000000000000000276ff000000000000000000000000000000000000000000001692151575010000000000000000000000000000000000000000000275ff0000000000000000000000000000000000000000001691151560a060020a0274ff000000000000000000000000000000000000000016908f1678ffffffffffffffffffffffffffffffffffffffffffffffffff1990961695909517949094179390931792909217919091171787555160018701555160028601805460ff191691151560ff1691909117905551600385015551888401555160058301555160068201556007019251151561058e90849060ff801983541691151516179055565b51168154906101000274ffffffffffffffffffffffffffffffffffffffff00169074ffffffffffffffffffffffffffffffffffffffff0019161790556005549160001983019283116106035750507f096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce8280a280f35b6011849160e060020a634e487b7102835252fd5b50505050508b8e808f60e060020a634e487b7102825252fd5b50505050508b8e60418f60e060020a634e487b7102835252fd5b508b8e60418f60e060020a634e487b7102835252fd5b876103465760848c60338d60208b519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a206e6577206f776e65722060448201527f697320746865207a65726f2061646472657373000000000000000000000000006064820152fd5b600a6106f3610124356106ee610104356106ee60e43560c4356121d6565b6121d6565b11156103415760848d60338e60208c519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f6665657320617420313025206f72206c657373000000000000000000000000006064820152fd5b6611c37937e08000601354111561033c5760848e603c8f60208d519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f3530303030303030303030303030303020576569206f72206c657373000000006064820152fd5b80fd5b8a80fd5b8880fd5b8680fd5b8480fd5b8380fd5b8280fd5b83915060203660031901126107f7577fc5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae745399161086b602092338652600a845261084860ff8488205416612188565b600d5461085b60ff61010083041661213a565b61ff001916600d55349035612253565b51348152a180f35b90503461024c578160031936011261024c57338252602090600a825261089e60ff8585205416612188565b600160a060020a03906108b98260175416601e549030612815565b6108cb8260185416601f549030612815565b6108dc826019541684549030612815565b838080806108fa6108f2601e54601f54906121d6565b8854906121d6565b9581601e5581601f55818855601754163031905af13d156109d0573d67ffffffffffffffff81116109ba5786519061093b601f8201601f1916870183612231565b815285853d92013e5b1561097557507f21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff929351908152a180f35b6064908386519160e560020a62461bcd028352820152601260248201527f4661696c656420746f2073656e6420424e4200000000000000000000000000006044820152fd5b60248660418560e060020a634e487b7102835252fd5b610944565b82843461024c578160031936011261024c5760209060ff600d541690519015158152f35b82843461024c578160031936011261024c57602090601a549051908152f35b82843461024c578160031936011261024c57602090601c549051908152f35b82843461024c578060031936011261024c57602090610a61610a57612109565b602435903361273e565b5160018152f35b82848160031936011261024c57610a99610aac91610a8a60ff600d541661213a565b30845283602052832054612bb0565b610aa1612bf6565b506064349104612253565b7f6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b8180a180f35b919050346107e057826003193601126107e057610aee612109565b9183602435923381526001602052818120600160a060020a0386168252602052205490828210610b4457602085610a6186610b3d8787610b38610b2f612a6c565b82841115612aa5565b6123b6565b903361291d565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b905082346107f7576020806003193601126107f357823592338552600a8252610bde60ff8487205416612188565b610beb60055485106123c3565b83855260068252828520338652825260ff8386205416610c675750610c2360ff60a060020a610c198661206c565b5054041615612437565b8284526006815281842090338552528220600160ff19825416179055337f12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb78380a380f35b90608492519160e560020a62461bcd028352820152603c60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206160448201527f6c72656164792077617320617070726f766564206279206f776e6572000000006064820152fd5b905082346107f757826003193601126107f757805191838154916002830491600191828516948515610dcd575b6020958686108114610db757858952908115610d945750600114610d3c575b610d388787610d2e828c0383612231565b51918291826120c0565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610d815750505082610d3894610d2e92820101948680610d1d565b8054868501880152928601928101610d63565b60ff19168887015250505050151581028301019250610d2e82610d388680610d1d565b60248460228560e060020a634e487b7102835252fd5b93607f1693610cfe565b82843461024c578160031936011261024c57602090601d549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600854169051908152f35b905082346107f7576020806003193601126107f357823592338552600a8252610e4c60ff8487205416612188565b610e5960055485106123c3565b610e6c60ff60a060020a610c198761206c565b83855260068252828520338652825260ff838620541615610ec95750828452600681528184209033855252822060ff198154169055337fb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb8380a380f35b90608492519160e560020a62461bcd028352820152602e60248201527f4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206960448201527f73206e6f7420617070726f7665640000000000000000000000000000000000006064820152fd5b905082346107f75760603660031901126107f757610f4f612109565b906024803593604490813590600160a060020a03928360075416943386036113aa578489981694858b52602096600a885260ff898d20541661136757861461132457806017541686146112e1578060185416861461129e5760195416851461125b57604b841161121857848a52600e8652868a20546111d557601654891161116c57505050610fe060649187612bd1565b610fe8612bf6565b500494601a5490601b54610ffc81846121d6565b9261100a601c5480956121d6565b9081611032575050505050611025600e939495601e54612a57565b601e555b85525282205580f35b611043919294999395979850612b8f565b8161104c612bf6565b5061105691612ad0565b9261106090612b8f565b81611069612bf6565b5061107391612ad0565b9761107d90612b8f565b90611086612bf6565b5061109091612ad0565b9161109b9082612bd1565b6110a3612bf6565b5060649004966110b39082612bd1565b6110bb612bf6565b5060649004916110ca91612bd1565b6110d2612bf6565b506064900491866110e1612a6c565b6110ee9083831115612aa5565b6110f7916123b6565b81611100612a6c565b61110d9083831115612aa5565b611116916123b6565b8261111f612a6c565b61112c9083831115612aa5565b611135916123b6565b95601e549061114391612a57565b601e55601f549061115391612a57565b601f5581549061116291612a57565b8155600e91611029565b6084929160387f416d6f756e742063616e2774206578636565647320746865206d61782074726192888a519560e560020a62461bcd0287528601528401528201527f6e73616374696f6e20776974686472617720616d6f756e7400000000000000006064820152fd5b60649291601c7f55736572206861732070656e64696e67205769746864726177616c730000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064929160197f546865206665652063616e6e6f7420657863656564203735250000000000000092888a519560e560020a62461bcd028752860152840152820152fd5b60649291601b7f5465616d2063616e2774206d616b65207769746864726177616c73000000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064847f536b796c65722063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f48656973656e2063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f4261636b656e642063616e2774206d616b65207769746864726177616c73000085601e868c8e519560e560020a62461bcd028752860152840152820152fd5b6064857f4f776e6572732063616e2774206d616b65207769746864726177616c7300000086601d878d8f519560e560020a62461bcd028752860152840152820152fd5b6084929160227f4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b659260208a519560e560020a62461bcd0287528601528401528201527f6e640000000000000000000000000000000000000000000000000000000000006064820152fd5b82843461024c578160031936011261024c57602090601b549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601754169051908152f35b82843461024c578160031936011261024c576020906013549051908152f35b82843461024c57602036600319011261024c5780602092600160a060020a036114a1612109565b16815280845220549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601954169051908152f35b82843461024c578160031936011261024c5760209081549051908152f35b90508160031936011261024c573382526020906011825283832054620151808101908181116116f75781106116b257421161170d575b338352601282528383205460018101908181116116f75781106116b257338452601283528484205583832054601554106116485760135434106115b857507f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9192338452600e825280842054906115a4823330612815565b338552600e8352848181205551908152a180f35b60a49184519160e560020a62461bcd028352820152604460248201527f54686520616d6f756e742073656e74206973206e6f7420657175616c20746f2060448201527f74686520424e4220616d6f756e7420726571756972656420666f72207769746860648201527f64726177000000000000000000000000000000000000000000000000000000006084820152fd5b60849184519160e560020a62461bcd028352820152603060248201527f596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e6520776960448201527f746864726177616c2070657220646179000000000000000000000000000000006064820152fd5b5060649184519160e560020a62461bcd028352820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248560118560e060020a634e487b7102835252fd5b33835260118252428484205560128252828481205561152c565b82843461024c578060031936011261024c57610a61602092610b3d61174a612109565b9133815260018652848120600160a060020a0384168252865284602435912054612a57565b82843461024c578160031936011261024c57602090601e549051908152f35b82843461024c578160031936011261024c576020905160128152f35b82843461024c578160031936011261024c576020906021549051908152f35b90503461024c57606036600319011261024c576117e4612109565b6117ec612124565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203611827575b602086610a6187878761273e565b84821061185d575091839161185261184b60209796610a6196610b38610b2f612a6c565b338361291d565b919394819350611819565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b82843461024c578160031936011261024c57602090601f549051908152f35b82843461024c578160031936011261024c576020906002549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600b54169051908152f35b839150346107f7576020806003193601126107f357813561192d60055482106123c3565b6119368161206c565b5060ff9161194e8360a060020a809454041615612437565b60095487805b828110611c69575010611bfd579061196d60079261206c565b509074ff000000000000000000000000000000000000000019825416178082558484807501000000000000000000000000000000000000000000840416611ba3575b9150507701000000000000000000000000000000000000000000000082540416611b67575b82780100000000000000000000000000000000000000000000000082540416611b31575b82600282015416611ad2575b0154908116611a11578480f35b610100600160a060020a03910416928315611a685750505080600160a060020a03196007541617600755817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3818080808480f35b60849350519160e560020a62461bcd028352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b7fac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee96080600383015487840154600585015460068601549183601a5580601b5581601c5582601d558b51938452898401528a8301526060820152a1611a04565b7f7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c846001830154806013558851908152a16119f8565b611b9a3031611b776021546124ab565b3089528886526064611b8b898b2054612af3565b611b93612bf6565b5004612253565b866021556119d4565b7601000000000000000000000000000000000000000000007f01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604930416151560ff19600d541686821617600d558851908152a18784846119af565b505050608492519160e560020a62461bcd028352820152603560248201527f4d756c74695369676e617475726557616c6c65743a20617070726f76616c732060448201527f6973206c657373207468616e20726571756972656400000000000000000000006064820152fd5b838a5260068752888a20600160a060020a03827f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154168b52875285898b205416611cd6575b6000198114611cc057600101611954565b60248a60118a60e060020a634e487b7102835252fd5b9060018101809111611cc05790611caf565b82843461024c578160031936011261024c57602090600160a060020a03601854169051908152f35b82843461024c578060031936011261024c57602090610a61611d30612109565b602435903361291d565b905082346107f757826003193601126107f7578051918360035460028104916001918281168015611e27575b6020958686108214611e115750848852908115611df05750600114611d97575b610d388686610d2e828b0383612231565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410611ddd5750505082610d3894610d2e928201019486611d86565b8054868501880152928601928101611dc0565b60ff191687860152505050151581028301019250610d2e82610d3886611d86565b83602260249260e060020a634e487b7102835252fd5b93607f1693611d66565b848492346107f35760203660031901126107f357356005548110156107f35760089060056101c0955202807f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001547f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18201549160ff90817f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015416937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3820154947f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4830154907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5840154928578010000000000000000000000000000000000000000000000007f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db77f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6880154970154988c600160a060020a039c8d831682528460a060020a8404161515602083015284750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b6005548110156120a7576008906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b60e060020a634e487b7102600052603260045260246000fd5b6020808252825181830181905290939260005b8281106120f557505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016120d3565b60043590600160a060020a038216820361211f57565b600080fd5b60243590600160a060020a038216820361211f57565b1561214157565b606460405160e560020a62461bcd02815260206004820152601560248201527f50726573616c652069736e277420656e61626c656400000000000000000000006044820152fd5b1561218f57565b606460405160e560020a62461bcd02815260206004820152601f60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572006044820152fd5b919082018092116121e357565b60e060020a634e487b7102600052601160045260246000fd5b6040810190811067ffffffffffffffff82111761221857604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761221857604052565b600160a060020a039081600b54169161227b600093308552846020526040852054903061291d565b600b54169061012c420180421161239f574281106123585760c46060928660405195869485937ff305d719000000000000000000000000000000000000000000000000000000008552306004860152602485015288604485015288606485015230608485015260a48401525af1801561234d57612322575b505060207ffdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa91604051908152a1565b606090813d8111612346575b6123388183612231565b810103126107e057806122f3565b503d61232e565b6040513d84823e3d90fd5b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248460e060020a634e487b710281526011600452fd5b919082039182116121e357565b156123ca57565b608460405160e560020a62461bcd02815260206004820152602d60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206460448201527f6f6573206e6f74206578697374000000000000000000000000000000000000006064820152fd5b1561243e57565b608460405160e560020a62461bcd02815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c207760448201527f617320616c7265616479206578656375746564000000000000000000000000006064820152fd5b604080519167ffffffffffffffff90606084018281118582101761221857835260028452602080850190843683378551156120a757308252600160a060020a039283600b5416918651927fad5c46480000000000000000000000000000000000000000000000000000000084528184600481845afa93841561264b57600094612611575b508851936001948510156120a75761254f91878592168a8c01523061291d565b84600b541694853b1561211f5791879894939198519889957f791ac94700000000000000000000000000000000000000000000000000000000875260a487019260048801526000602488015260a060448801525180925260c4860194936000905b8382106125f7575050505050509181600081819530606483015242608483015203925af180156125ec576125e357505050565b82116122185752565b82513d6000823e3d90fd5b8551811687528b97509582019594820194908401906125b0565b8281819693963d8311612644575b6126298183612231565b8101031261024c57519086821682036107e05750923861252f565b503d61261f565b88513d6000823e3d90fd5b1561265d57565b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b156126d157565b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b906127999291600160a060020a038082169061275b821515612656565b8316906127698215156126ca565b600091818352602260205260ff604084205416908115612804575b501590816127ee575b5061279b575b50612815565b565b6127be60646127ac601d5487612bd1565b6127b4612bf6565b5004602154612a57565b6021556127e530316127cf866124ab565b308352826020526064611b8b6040852054612af3565b60215538612793565b8252506024602052604081205460ff163861278d565b835250604082205460ff1638612784565b600160a060020a038091169161282c831515612656565b16916128398315156126ca565b600082815280602052604090818120548381106128b1579183916128867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95602095610b38610b2f612a6c565b86825281855282822055868152816128a18482842054612a57565b91888152808652205551908152a3565b6084835160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a038091169182156129eb571691821561297e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90612a6290826121d6565b9081106123585790565b60405190612a79826121fc565b601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152565b15612aad5750565b612acc9060405191829160e560020a62461bcd028352600483016120c0565b0390fd5b8115612ada570490565b60e060020a634e487b7102600052601260045260246000fd5b8015612b8957601e810290808204601e036121e357612b14601e9183612ad0565b03612b1c5790565b608460405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b50600090565b8015612b895760648102908082046064036121e357612b1460649183612ad0565b8015612b8957600a810290808204600a036121e357612b14600a9183612ad0565b908115612bef578082029180830482036121e357612b149083612ad0565b5050600090565b60405190612c03826121fc565b601a82527f536166654d6174683a206469766973696f6e206279207a65726f000000000000602083015256fea2646970667358221220b9f1a0edcc7a52a47c82615094e790ebe5a3fb9dc62c8479e9c1ce783f3b9e7364736f6c634300081100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x660 JUMPI PUSH1 0x80 DUP2 PUSH3 0x3636 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x25 DUP3 DUP6 PUSH3 0x665 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x660 JUMPI PUSH3 0x3B DUP2 PUSH3 0x6B7 JUMP JUMPDEST PUSH1 0x20 PUSH3 0x4A DUP2 DUP5 ADD PUSH3 0x6B7 JUMP JUMPDEST SWAP2 PUSH3 0x66 PUSH1 0x60 PUSH3 0x5E DUP8 DUP8 ADD PUSH3 0x6B7 JUMP JUMPDEST SWAP6 ADD PUSH3 0x6B7 JUMP JUMPDEST PUSH3 0x73 PUSH1 0x3 SLOAD PUSH3 0x6CC JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH3 0x632 JUMPI JUMPDEST POP PUSH1 0x12 PUSH32 0x5377697368466973680000000000000000000000000000000000000000000000 ADD PUSH1 0x3 SSTORE PUSH1 0x4 SWAP6 PUSH3 0xB7 DUP8 SLOAD PUSH3 0x6CC JUMP JUMPDEST DUP4 DUP2 GT PUSH3 0x605 JUMPI JUMPDEST POP PUSH1 0x6 PUSH32 0x5346480000000000000000000000000000000000000000000000000000000000 ADD DUP8 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 CALLER DUP4 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP9 MLOAD SWAP2 PUSH1 0x0 SWAP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3616 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 CALLER DUP11 DUP10 DUP2 DUP1 LOG3 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0xC SSTORE PUSH2 0x100 PUSH2 0xFFFF NOT PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE PUSH7 0x11C37937E08000 PUSH1 0x13 SSTORE PUSH1 0x1 DUP1 PUSH1 0x14 SSTORE DUP1 PUSH1 0x15 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x16 SSTORE PUSH20 0xEDA73409D4BBD147F4E1295A73A2CA243A529338 DUP8 PUSH1 0x17 SLOAD AND OR PUSH1 0x17 SSTORE PUSH20 0x3C1CD83D8850803C9C42FF5083F56B66B00FBD61 DUP8 PUSH1 0x18 SLOAD AND OR PUSH1 0x18 SSTORE PUSH20 0x63024AC73FE77427F20E8247FA26F470C0D9700B DUP8 PUSH1 0x19 SLOAD AND OR PUSH1 0x19 SSTORE PUSH1 0x2 PUSH1 0x1A SSTORE PUSH1 0x3 PUSH1 0x1B SSTORE PUSH1 0x3 PUSH1 0x1C SSTORE PUSH1 0x2 PUSH1 0x1D SSTORE DUP11 PUSH1 0x1E SSTORE DUP11 DUP9 SSTORE DUP11 DUP11 SSTORE DUP11 PUSH1 0x21 SSTORE PUSH32 0xC45A015500000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP12 DUP11 DUP8 PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 SWAP3 DUP2 DUP5 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH3 0x5FB JUMPI DUP12 DUP16 DUP16 SWAP3 DUP16 SWAP11 PUSH3 0x5A7 JUMPI JUMPDEST POP MLOAD DUP1 SWAP3 PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x551 JUMPI DUP16 SWAP2 DUP16 DUP16 SWAP5 SWAP4 DUP16 SWAP4 DUP7 SWAP4 PUSH3 0x55C JUMPI JUMPDEST POP SWAP1 PUSH1 0x44 SWAP2 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xC9C6539600000000000000000000000000000000000000000000000000000000 DUP5 MSTORE ADDRESS SWAP1 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP14 DUP15 DUP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE AND GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x551 JUMPI DUP16 SWAP2 DUP10 SWAP5 SWAP4 DUP16 SWAP3 SWAP2 DUP16 SWAP3 DUP14 SWAP1 DUP6 SWAP4 PUSH3 0x4E2 JUMPI JUMPDEST POP SWAP3 PUSH1 0x23 DUP9 PUSH3 0x373 SWAP11 SWAP8 SWAP5 PUSH3 0x379 SWAP14 SWAP13 SWAP11 SWAP8 SWAP5 PUSH3 0x373 SWAP11 SWAP8 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x24 DUP2 MSTORE DUP5 DUP5 KECCAK256 SWAP7 PUSH1 0xFF NOT SWAP8 DUP8 DUP10 DUP3 SLOAD AND OR SWAP1 SSTORE ADDRESS DUP6 MSTORE PUSH1 0x22 DUP3 MSTORE DUP6 DUP6 KECCAK256 DUP8 DUP10 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH1 0x17 SLOAD AND DUP6 MSTORE DUP6 DUP6 KECCAK256 DUP8 DUP10 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH1 0x18 SLOAD AND DUP6 MSTORE DUP6 DUP6 KECCAK256 DUP8 DUP10 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x19 SLOAD AND DUP5 MSTORE DUP5 DUP5 KECCAK256 DUP7 DUP9 DUP3 SLOAD AND OR SWAP1 SSTORE ADDRESS DUP5 MSTORE MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP7 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MSTORE KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x723 JUMP JUMPDEST PUSH3 0x723 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH3 0x460 JUMPI DUP2 SWAP1 PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP5 DUP8 MLOAD SWAP4 DUP2 DUP1 LOG3 PUSH1 0xC SLOAD SWAP5 ADDRESS ISZERO PUSH3 0x409 JUMPI POP POP POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x3D1 DUP5 PUSH1 0x2 SLOAD PUSH3 0x90D JUMP JUMPDEST PUSH1 0x2 SSTORE ADDRESS DUP4 MSTORE DUP3 DUP2 MSTORE PUSH3 0x3E9 DUP5 DUP7 DUP6 KECCAK256 SLOAD PUSH3 0x90D JUMP JUMPDEST ADDRESS DUP5 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 KECCAK256 SSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE ADDRESS SWAP4 LOG3 MLOAD PUSH2 0x2C65 SWAP1 DUP2 PUSH3 0x9B1 DUP3 CODECOPY RETURN JUMPDEST SWAP3 PUSH1 0x64 SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP8 DUP7 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP6 POP POP SWAP5 SWAP6 POP POP SWAP1 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x549 JUMPI JUMPDEST PUSH3 0x502 DUP2 DUP4 PUSH3 0x665 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x545 JUMPI SWAP3 DUP8 DUP16 SWAP4 PUSH3 0x379 SWAP8 SWAP7 SWAP5 DUP16 DUP16 PUSH1 0x23 DUP6 DUP16 PUSH3 0x373 SWAP10 PUSH3 0x530 PUSH3 0x373 SWAP14 PUSH3 0x6B7 JUMP JUMPDEST SWAP7 SWAP10 SWAP13 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP9 POP SWAP9 SWAP11 SWAP12 POP PUSH3 0x2D1 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x4F6 JUMP JUMPDEST POP DUP15 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 SWAP6 POP POP POP POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x59F JUMPI JUMPDEST PUSH3 0x579 DUP2 DUP4 PUSH3 0x665 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x545 JUMPI SWAP1 DUP12 DUP16 DUP16 DUP16 SWAP5 SWAP1 PUSH3 0x596 PUSH1 0x44 SWAP3 PUSH3 0x6B7 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH3 0x26D JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x56D JUMP JUMPDEST SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 POP POP SWAP1 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x5F3 JUMPI JUMPDEST PUSH3 0x5C9 DUP2 DUP4 PUSH3 0x665 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x5EF JUMPI SWAP1 DUP13 DUP12 DUP16 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH3 0x5E7 SWAP1 PUSH3 0x6B7 JUMP JUMPDEST SWAP9 CODESIZE PUSH3 0x22A JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x5BD JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE DUP7 DUP6 DUP2 DUP4 KECCAK256 SWAP4 ADD DIV DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x626 JUMPI POP POP PUSH3 0xC0 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x616 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE DUP6 DUP5 DUP2 DUP4 KECCAK256 SWAP4 ADD DIV DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x654 JUMPI POP POP PUSH3 0x80 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x644 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x688 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH3 0x660 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x718 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x6E9 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP1 ISZERO PUSH3 0x889 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND PUSH3 0x82B JUMPI DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x7FE JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH3 0x7D1 JUMPI PUSH1 0x9 DUP3 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3616 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A204F776E6572206973206E6F7420756E6971756500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A204F776E657220697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH3 0x981 JUMPI DUP2 LT PUSH3 0x923 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x53 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27 JUMPI STOP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x0 SWAP2 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x13CF08B EQ PUSH2 0x1E31 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1D3A JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x1D10 JUMPI DUP2 PUSH4 0xABDC640 EQ PUSH2 0x1CE8 JUMPI DUP2 PUSH4 0xD61B519 EQ PUSH2 0x1909 JUMPI DUP2 PUSH4 0x1694505E EQ PUSH2 0x18E1 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x18C2 JUMPI DUP2 PUSH4 0x1B45A47A EQ PUSH2 0x18A3 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x17C9 JUMPI DUP2 PUSH4 0x2A9AF7BA EQ PUSH2 0x17AA JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x178E JUMPI DUP2 PUSH4 0x39262773 EQ PUSH2 0x176F JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x1727 JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x14F6 JUMPI DUP2 PUSH4 0x553000C1 EQ PUSH2 0x14D8 JUMPI DUP2 PUSH4 0x562E9DF9 EQ PUSH2 0x14B0 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x147A JUMPI DUP2 PUSH4 0x7918447E EQ PUSH2 0x145B JUMPI DUP2 PUSH4 0x7A594A2B EQ PUSH2 0x1433 JUMPI DUP2 PUSH4 0x7D81936C EQ PUSH2 0x1414 JUMPI DUP2 PUSH4 0x8198C341 EQ PUSH2 0xF33 JUMPI DUP2 PUSH4 0x85A6A091 EQ PUSH2 0xE1E JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xDF6 JUMPI DUP2 PUSH4 0x933F5E07 EQ PUSH2 0xDD7 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xCD1 JUMPI DUP2 PUSH4 0x98951B56 EQ PUSH2 0xBB0 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0xAD3 JUMPI DUP2 PUSH4 0xA6F2AE3A EQ PUSH2 0xA68 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA37 JUMPI DUP2 PUSH4 0xB6BBA0AE EQ PUSH2 0xA18 JUMPI DUP2 PUSH4 0xC4CE220B EQ PUSH2 0x9F9 JUMPI DUP2 PUSH4 0xC84AD9A5 EQ PUSH2 0x9D5 JUMPI DUP2 PUSH4 0xD7196DD9 EQ PUSH2 0x873 JUMPI DUP2 PUSH4 0xD8A0F828 EQ PUSH2 0x7FB JUMPI DUP2 PUSH4 0xDCE165A6 EQ PUSH2 0x299 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI PUSH4 0xFE7441E7 EQ PUSH2 0x216 JUMPI DUP1 PUSH2 0x13 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x23C PUSH2 0x2109 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x26E PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH2 0x180 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP4 DUP4 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x24C JUMPI PUSH1 0x24 SWAP4 DUP5 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x7F3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP5 DUP6 ISZERO ISZERO DUP1 SWAP7 SUB PUSH2 0x7EF JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 DUP5 ISZERO ISZERO SWAP7 DUP8 DUP7 SUB PUSH2 0x7EB JUMPI PUSH1 0xA4 CALLDATALOAD SWAP8 DUP9 ISZERO ISZERO SWAP1 DUP2 DUP11 SUB PUSH2 0x7E7 JUMPI PUSH2 0x144 CALLDATALOAD DUP1 ISZERO ISZERO SWAP11 DUP12 DUP3 SUB PUSH2 0x7E3 JUMPI PUSH2 0x164 CALLDATALOAD SWAP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP12 DUP13 DUP13 AND DUP1 SWAP13 SUB PUSH2 0x7E0 JUMPI PUSH1 0xFF DUP12 PUSH2 0x337 SWAP3 CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x764 JUMPI JUMPDEST PUSH2 0x6D0 JUMPI JUMPDEST PUSH2 0x660 JUMPI JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0x1C0 DUP9 ADD DUP9 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x64A JUMPI SWAP1 DUP15 SWAP2 DUP2 MSTORE CALLER DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP2 DUP3 MSTORE DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP2 DUP3 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0xE0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x100 DUP10 ADD SWAP5 PUSH1 0xC4 CALLDATALOAD DUP7 MSTORE PUSH2 0x120 DUP11 ADD SWAP7 PUSH1 0xE4 CALLDATALOAD DUP9 MSTORE PUSH2 0x140 DUP12 ADD SWAP9 PUSH2 0x104 CALLDATALOAD DUP11 MSTORE PUSH2 0x160 DUP13 ADD SWAP11 PUSH2 0x124 CALLDATALOAD DUP13 MSTORE DUP13 ADD SWAP15 DUP16 MSTORE PUSH2 0x1A0 DUP13 ADD SWAP13 DUP14 MSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x630 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3FA SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x206C JUMP JUMPDEST SWAP13 SWAP1 SWAP13 PUSH2 0x617 JUMPI MLOAD DUP13 SLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH25 0x1000000000000000000000000000000000000000000000000 MUL PUSH25 0xFF000000000000000000000000000000000000000000000000 AND SWAP5 ISZERO ISZERO PUSH24 0x10000000000000000000000000000000000000000000000 MUL PUSH24 0xFF0000000000000000000000000000000000000000000000 AND SWAP4 ISZERO ISZERO PUSH23 0x100000000000000000000000000000000000000000000 MUL PUSH23 0xFF00000000000000000000000000000000000000000000 AND SWAP3 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL PUSH22 0xFF000000000000000000000000000000000000000000 AND SWAP2 ISZERO ISZERO PUSH1 0xA0 PUSH1 0x2 EXP MUL PUSH21 0xFF0000000000000000000000000000000000000000 AND SWAP1 DUP16 AND PUSH25 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO PUSH1 0xFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD DUP9 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 ADD SWAP3 MLOAD ISZERO ISZERO PUSH2 0x58E SWAP1 DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD AND DUP2 SLOAD SWAP1 PUSH2 0x100 MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x603 JUMPI POP POP PUSH32 0x96AA03A7CD4ABA017B05CE697DF0E528A91D045A01285C50E931B0C0C4939CE DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x11 DUP5 SWAP2 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 DUP1 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP3 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP8 PUSH2 0x346 JUMPI PUSH1 0x84 DUP13 PUSH1 0x33 DUP14 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A206E6577206F776E657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697320746865207A65726F206164647265737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xA PUSH2 0x6F3 PUSH2 0x124 CALLDATALOAD PUSH2 0x6EE PUSH2 0x104 CALLDATALOAD PUSH2 0x6EE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x21D6 JUMP JUMPDEST GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x84 DUP14 PUSH1 0x33 DUP15 PUSH1 0x20 DUP13 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6665657320617420313025206F72206C65737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH7 0x11C37937E08000 PUSH1 0x13 SLOAD GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x84 DUP15 PUSH1 0x3C DUP16 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3530303030303030303030303030303020576569206F72206C65737300000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH32 0xC5D4FBADDD2087D369F5CF16AD7544F41EF0DC291B510E4CB1CB6E6EAAE74539 SWAP2 PUSH2 0x86B PUSH1 0x20 SWAP3 CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE PUSH2 0x848 PUSH1 0xFF DUP5 DUP9 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x85B PUSH1 0xFF PUSH2 0x100 DUP4 DIV AND PUSH2 0x213A JUMP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0xD SSTORE CALLVALUE SWAP1 CALLDATALOAD PUSH2 0x2253 JUMP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI CALLER DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE PUSH2 0x89E PUSH1 0xFF DUP6 DUP6 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 PUSH2 0x8B9 DUP3 PUSH1 0x17 SLOAD AND PUSH1 0x1E SLOAD SWAP1 ADDRESS PUSH2 0x2815 JUMP JUMPDEST PUSH2 0x8CB DUP3 PUSH1 0x18 SLOAD AND PUSH1 0x1F SLOAD SWAP1 ADDRESS PUSH2 0x2815 JUMP JUMPDEST PUSH2 0x8DC DUP3 PUSH1 0x19 SLOAD AND DUP5 SLOAD SWAP1 ADDRESS PUSH2 0x2815 JUMP JUMPDEST DUP4 DUP1 DUP1 DUP1 PUSH2 0x8FA PUSH2 0x8F2 PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD SWAP1 PUSH2 0x21D6 JUMP JUMPDEST DUP9 SLOAD SWAP1 PUSH2 0x21D6 JUMP JUMPDEST SWAP6 DUP2 PUSH1 0x1E SSTORE DUP2 PUSH1 0x1F SSTORE DUP2 DUP9 SSTORE PUSH1 0x17 SLOAD AND ADDRESS BALANCE SWAP1 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x9D0 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9BA JUMPI DUP7 MLOAD SWAP1 PUSH2 0x93B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP4 PUSH2 0x2231 JUMP JUMPDEST DUP2 MSTORE DUP6 DUP6 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x975 JUMPI POP PUSH32 0x21A3A3648D0B2AFC084ACD733D71600B506FA4ECA7EF1F5E24718C5E17F4E7FF SWAP3 SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 DUP4 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420424E420000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x41 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x944 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0xD SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1A SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA61 PUSH2 0xA57 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x273E JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA99 PUSH2 0xAAC SWAP2 PUSH2 0xA8A PUSH1 0xFF PUSH1 0xD SLOAD AND PUSH2 0x213A JUMP JUMPDEST ADDRESS DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP4 KECCAK256 SLOAD PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0xAA1 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 CALLVALUE SWAP2 DIV PUSH2 0x2253 JUMP JUMPDEST PUSH32 0x6CD8C20496FA31DBA3F83C7ADCA278C356A6CAA5529741A5D2B9B774613C198B DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x7E0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E0 JUMPI PUSH2 0xAEE PUSH2 0x2109 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xB44 JUMPI PUSH1 0x20 DUP6 PUSH2 0xA61 DUP7 PUSH2 0xB3D DUP8 DUP8 PUSH2 0xB38 PUSH2 0xB2F PUSH2 0x2A6C JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x291D JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xBDE PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH2 0xBEB PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23C3 JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND PUSH2 0xC67 JUMPI POP PUSH2 0xC23 PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC19 DUP7 PUSH2 0x206C JUMP JUMPDEST POP SLOAD DIV AND ISZERO PUSH2 0x2437 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0x12C8D6025943157CBCB4E904B3E3D97D2AC7EAE9F61F343B2E7CB23BE24BDBB7 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C72656164792077617320617070726F766564206279206F776E657200000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xDCD JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xDB7 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xD94 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD3C JUMPI JUMPDEST PUSH2 0xD38 DUP8 DUP8 PUSH2 0xD2E DUP3 DUP13 SUB DUP4 PUSH2 0x2231 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x20C0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xD81 JUMPI POP POP POP DUP3 PUSH2 0xD38 SWAP5 PUSH2 0xD2E SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xD63 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD2E DUP3 PUSH2 0xD38 DUP7 DUP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xCFE JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1D SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xE4C PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH2 0xE59 PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0xE6C PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC19 DUP8 PUSH2 0x206C JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0xEC9 JUMPI POP DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER PUSH32 0xB8B1CBDD07C030BED9E01F4EE5465E3A3FD2AA8F7135C84467C0F3CF203925EB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2050726F706F73616C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F7420617070726F766564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH2 0xF4F PUSH2 0x2109 JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP4 PUSH1 0x44 SWAP1 DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0x7 SLOAD AND SWAP5 CALLER DUP7 SUB PUSH2 0x13AA JUMPI DUP5 DUP10 SWAP9 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x20 SWAP7 PUSH1 0xA DUP9 MSTORE PUSH1 0xFF DUP10 DUP14 KECCAK256 SLOAD AND PUSH2 0x1367 JUMPI DUP7 EQ PUSH2 0x1324 JUMPI DUP1 PUSH1 0x17 SLOAD AND DUP7 EQ PUSH2 0x12E1 JUMPI DUP1 PUSH1 0x18 SLOAD AND DUP7 EQ PUSH2 0x129E JUMPI PUSH1 0x19 SLOAD AND DUP6 EQ PUSH2 0x125B JUMPI PUSH1 0x4B DUP5 GT PUSH2 0x1218 JUMPI DUP5 DUP11 MSTORE PUSH1 0xE DUP7 MSTORE DUP7 DUP11 KECCAK256 SLOAD PUSH2 0x11D5 JUMPI PUSH1 0x16 SLOAD DUP10 GT PUSH2 0x116C JUMPI POP POP POP PUSH2 0xFE0 PUSH1 0x64 SWAP2 DUP8 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0xFE8 PUSH2 0x2BF6 JUMP JUMPDEST POP DIV SWAP5 PUSH1 0x1A SLOAD SWAP1 PUSH1 0x1B SLOAD PUSH2 0xFFC DUP2 DUP5 PUSH2 0x21D6 JUMP JUMPDEST SWAP3 PUSH2 0x100A PUSH1 0x1C SLOAD DUP1 SWAP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1032 JUMPI POP POP POP POP POP PUSH2 0x1025 PUSH1 0xE SWAP4 SWAP5 SWAP6 PUSH1 0x1E SLOAD PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x1E SSTORE JUMPDEST DUP6 MSTORE MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x1043 SWAP2 SWAP3 SWAP5 SWAP10 SWAP4 SWAP6 SWAP8 SWAP9 POP PUSH2 0x2B8F JUMP JUMPDEST DUP2 PUSH2 0x104C PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH2 0x1056 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP3 PUSH2 0x1060 SWAP1 PUSH2 0x2B8F JUMP JUMPDEST DUP2 PUSH2 0x1069 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH2 0x1073 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP8 PUSH2 0x107D SWAP1 PUSH2 0x2B8F JUMP JUMPDEST SWAP1 PUSH2 0x1086 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH2 0x1090 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP2 PUSH2 0x109B SWAP1 DUP3 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x10A3 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP7 PUSH2 0x10B3 SWAP1 DUP3 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x10BB PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 PUSH2 0x10CA SWAP2 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x10D2 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 DUP7 PUSH2 0x10E1 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x10EE SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x10F7 SWAP2 PUSH2 0x23B6 JUMP JUMPDEST DUP2 PUSH2 0x1100 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x110D SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x1116 SWAP2 PUSH2 0x23B6 JUMP JUMPDEST DUP3 PUSH2 0x111F PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x112C SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x1135 SWAP2 PUSH2 0x23B6 JUMP JUMPDEST SWAP6 PUSH1 0x1E SLOAD SWAP1 PUSH2 0x1143 SWAP2 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH1 0x1F SLOAD SWAP1 PUSH2 0x1153 SWAP2 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x1F SSTORE DUP2 SLOAD SWAP1 PUSH2 0x1162 SWAP2 PUSH2 0x2A57 JUMP JUMPDEST DUP2 SSTORE PUSH1 0xE SWAP2 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x38 PUSH32 0x416D6F756E742063616E2774206578636565647320746865206D617820747261 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E73616374696F6E20776974686472617720616D6F756E740000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1C PUSH32 0x55736572206861732070656E64696E67205769746864726177616C7300000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x19 PUSH32 0x546865206665652063616E6E6F74206578636565642037352500000000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1B PUSH32 0x5465616D2063616E2774206D616B65207769746864726177616C730000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x536B796C65722063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x48656973656E2063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x4261636B656E642063616E2774206D616B65207769746864726177616C730000 DUP6 PUSH1 0x1E DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH32 0x4F776E6572732063616E2774206D616B65207769746864726177616C73000000 DUP7 PUSH1 0x1D DUP8 DUP14 DUP16 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x22 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206261636B65 SWAP3 PUSH1 0x20 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E64000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1B SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x17 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x14A1 PUSH2 0x2109 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x19 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 DUP2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI CALLER DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x11 DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x16F7 JUMPI DUP2 LT PUSH2 0x16B2 JUMPI TIMESTAMP GT PUSH2 0x170D JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x12 DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x16F7 JUMPI DUP2 LT PUSH2 0x16B2 JUMPI CALLER DUP5 MSTORE PUSH1 0x12 DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x15 SLOAD LT PUSH2 0x1648 JUMPI PUSH1 0x13 SLOAD CALLVALUE LT PUSH2 0x15B8 JUMPI POP PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP2 SWAP3 CALLER DUP5 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x15A4 DUP3 CALLER ADDRESS PUSH2 0x2815 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP2 DUP2 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0xA4 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E742073656E74206973206E6F7420657175616C20746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686520424E4220616D6F756E7420726571756972656420666F722077697468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74206D616B65206D6F7265207468616E206F6E65207769 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746864726177616C207065722064617900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0x11 DUP3 MSTORE TIMESTAMP DUP5 DUP5 KECCAK256 SSTORE PUSH1 0x12 DUP3 MSTORE DUP3 DUP5 DUP2 KECCAK256 SSTORE PUSH2 0x152C JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA61 PUSH1 0x20 SWAP3 PUSH2 0xB3D PUSH2 0x174A PUSH2 0x2109 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x2A57 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x21 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x17E4 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x17EC PUSH2 0x2124 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x1827 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0xA61 DUP8 DUP8 DUP8 PUSH2 0x273E JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x185D JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1852 PUSH2 0x184B PUSH1 0x20 SWAP8 SWAP7 PUSH2 0xA61 SWAP7 PUSH2 0xB38 PUSH2 0xB2F PUSH2 0x2A6C JUMP JUMPDEST CALLER DUP4 PUSH2 0x291D JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP2 CALLDATALOAD PUSH2 0x192D PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x206C JUMP JUMPDEST POP PUSH1 0xFF SWAP2 PUSH2 0x194E DUP4 PUSH1 0xA0 PUSH1 0x2 EXP DUP1 SWAP5 SLOAD DIV AND ISZERO PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP8 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C69 JUMPI POP LT PUSH2 0x1BFD JUMPI SWAP1 PUSH2 0x196D PUSH1 0x7 SWAP3 PUSH2 0x206C JUMP JUMPDEST POP SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 NOT DUP3 SLOAD AND OR DUP1 DUP3 SSTORE DUP5 DUP5 DUP1 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND PUSH2 0x1BA3 JUMPI JUMPDEST SWAP2 POP POP PUSH24 0x10000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B67 JUMPI JUMPDEST DUP3 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B31 JUMPI JUMPDEST DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1AD2 JUMPI JUMPDEST ADD SLOAD SWAP1 DUP2 AND PUSH2 0x1A11 JUMPI DUP5 DUP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DIV AND SWAP3 DUP4 ISZERO PUSH2 0x1A68 JUMPI POP POP POP DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 DUP2 DUP1 DUP1 DUP1 DUP5 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP4 POP MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xAC9D517045A5EC57DA9F145E5C349535857BAA98B41FA00AEA81886B40B65EE9 PUSH1 0x80 PUSH1 0x3 DUP4 ADD SLOAD DUP8 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD SWAP2 DUP4 PUSH1 0x1A SSTORE DUP1 PUSH1 0x1B SSTORE DUP2 PUSH1 0x1C SSTORE DUP3 PUSH1 0x1D SSTORE DUP12 MLOAD SWAP4 DUP5 MSTORE DUP10 DUP5 ADD MSTORE DUP11 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 PUSH2 0x1A04 JUMP JUMPDEST PUSH32 0x7752C7A6D518AB1CF03B50E7D7FD3DA3258EB319DC343789E0A7BED06C43066C DUP5 PUSH1 0x1 DUP4 ADD SLOAD DUP1 PUSH1 0x13 SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x1B9A ADDRESS BALANCE PUSH2 0x1B77 PUSH1 0x21 SLOAD PUSH2 0x24AB JUMP JUMPDEST ADDRESS DUP10 MSTORE DUP9 DUP7 MSTORE PUSH1 0x64 PUSH2 0x1B8B DUP10 DUP12 KECCAK256 SLOAD PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1B93 PUSH2 0x2BF6 JUMP JUMPDEST POP DIV PUSH2 0x2253 JUMP JUMPDEST DUP7 PUSH1 0x21 SSTORE PUSH2 0x19D4 JUMP JUMPDEST PUSH23 0x100000000000000000000000000000000000000000000 PUSH32 0x1B48326D6E9158A921C6006B9D6AD4B9D777C488E9B7924B3E0C8B0B1304604 SWAP4 DIV AND ISZERO ISZERO PUSH1 0xFF NOT PUSH1 0xD SLOAD AND DUP7 DUP3 AND OR PUSH1 0xD SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP8 DUP5 DUP5 PUSH2 0x19AF JUMP JUMPDEST POP POP POP PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A20617070726F76616C7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6973206C657373207468616E2072657175697265640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP11 MSTORE PUSH1 0x6 DUP8 MSTORE DUP9 DUP11 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SLOAD AND DUP12 MSTORE DUP8 MSTORE DUP6 DUP10 DUP12 KECCAK256 SLOAD AND PUSH2 0x1CD6 JUMPI JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CC0 JUMPI PUSH1 0x1 ADD PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x24 DUP11 PUSH1 0x11 DUP11 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1CC0 JUMPI SWAP1 PUSH2 0x1CAF JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x18 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA61 PUSH2 0x1D30 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x291D JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E27 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x1E11 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1DF0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1D97 JUMPI JUMPDEST PUSH2 0xD38 DUP7 DUP7 PUSH2 0xD2E DUP3 DUP12 SUB DUP4 PUSH2 0x2231 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x1DDD JUMPI POP POP POP DUP3 PUSH2 0xD38 SWAP5 PUSH2 0xD2E SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x1D86 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD2E DUP3 PUSH2 0xD38 DUP7 PUSH2 0x1D86 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1D66 JUMP JUMPDEST DUP5 DUP5 SWAP3 CALLVALUE PUSH2 0x7F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F3 JUMPI CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH2 0x1C0 SWAP6 MSTORE MUL DUP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF SWAP1 DUP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SLOAD AND SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SLOAD SWAP5 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP4 ADD SLOAD SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 DUP5 ADD SLOAD SWAP3 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB7 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP9 DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP13 DUP14 DUP4 AND DUP3 MSTORE DUP5 PUSH1 0xA0 PUSH1 0x2 EXP DUP5 DIV AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x20A7 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x20F5 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x211F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x211F JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2141 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C652069736E277420656E61626C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x218F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420616E206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21E3 JUMPI JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2218 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2218 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 PUSH1 0xB SLOAD AND SWAP2 PUSH2 0x227B PUSH1 0x0 SWAP4 ADDRESS DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 ADDRESS PUSH2 0x291D JUMP JUMPDEST PUSH1 0xB SLOAD AND SWAP1 PUSH2 0x12C TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x239F JUMPI TIMESTAMP DUP2 LT PUSH2 0x2358 JUMPI PUSH1 0xC4 PUSH1 0x60 SWAP3 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE ADDRESS PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE DUP9 PUSH1 0x44 DUP6 ADD MSTORE DUP9 PUSH1 0x64 DUP6 ADD MSTORE ADDRESS PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x234D JUMPI PUSH2 0x2322 JUMPI JUMPDEST POP POP PUSH1 0x20 PUSH32 0xFDB748C915E4E67B4BB23287BF4295A4595CE48B50343214369F72CCFB974CFA SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x2346 JUMPI JUMPDEST PUSH2 0x2338 DUP2 DUP4 PUSH2 0x2231 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7E0 JUMPI DUP1 PUSH2 0x22F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x21E3 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x23CA JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6573206E6F7420657869737400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x243E JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617320616C726561647920657865637574656400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x60 DUP5 ADD DUP3 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x2218 JUMPI DUP4 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP1 DUP5 CALLDATASIZE DUP4 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x20A7 JUMPI ADDRESS DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0xB SLOAD AND SWAP2 DUP7 MLOAD SWAP3 PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP2 DUP5 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x264B JUMPI PUSH1 0x0 SWAP5 PUSH2 0x2611 JUMPI JUMPDEST POP DUP9 MLOAD SWAP4 PUSH1 0x1 SWAP5 DUP6 LT ISZERO PUSH2 0x20A7 JUMPI PUSH2 0x254F SWAP2 DUP8 DUP6 SWAP3 AND DUP11 DUP13 ADD MSTORE ADDRESS PUSH2 0x291D JUMP JUMPDEST DUP5 PUSH1 0xB SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x211F JUMPI SWAP2 DUP8 SWAP9 SWAP5 SWAP4 SWAP2 SWAP9 MLOAD SWAP9 DUP10 SWAP6 PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0xA4 DUP8 ADD SWAP3 PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xC4 DUP7 ADD SWAP5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x25F7 JUMPI POP POP POP POP POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 DUP2 SWAP6 ADDRESS PUSH1 0x64 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x25EC JUMPI PUSH2 0x25E3 JUMPI POP POP POP JUMP JUMPDEST DUP3 GT PUSH2 0x2218 JUMPI MSTORE JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP12 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x25B0 JUMP JUMPDEST DUP3 DUP2 DUP2 SWAP7 SWAP4 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x2644 JUMPI JUMPDEST PUSH2 0x2629 DUP2 DUP4 PUSH2 0x2231 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24C JUMPI MLOAD SWAP1 DUP7 DUP3 AND DUP3 SUB PUSH2 0x7E0 JUMPI POP SWAP3 CODESIZE PUSH2 0x252F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x261F JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x265D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26D1 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2799 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND SWAP1 PUSH2 0x275B DUP3 ISZERO ISZERO PUSH2 0x2656 JUMP JUMPDEST DUP4 AND SWAP1 PUSH2 0x2769 DUP3 ISZERO ISZERO PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x2804 JUMPI JUMPDEST POP ISZERO SWAP1 DUP2 PUSH2 0x27EE JUMPI JUMPDEST POP PUSH2 0x279B JUMPI JUMPDEST POP PUSH2 0x2815 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27BE PUSH1 0x64 PUSH2 0x27AC PUSH1 0x1D SLOAD DUP8 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x27B4 PUSH2 0x2BF6 JUMP JUMPDEST POP DIV PUSH1 0x21 SLOAD PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x21 SSTORE PUSH2 0x27E5 ADDRESS BALANCE PUSH2 0x27CF DUP7 PUSH2 0x24AB JUMP JUMPDEST ADDRESS DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x64 PUSH2 0x1B8B PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x21 SSTORE CODESIZE PUSH2 0x2793 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x24 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x278D JUMP JUMPDEST DUP4 MSTORE POP PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 PUSH2 0x282C DUP4 ISZERO ISZERO PUSH2 0x2656 JUMP JUMPDEST AND SWAP2 PUSH2 0x2839 DUP4 ISZERO ISZERO PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x28B1 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0x2886 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 PUSH1 0x20 SWAP6 PUSH2 0xB38 PUSH2 0xB2F PUSH2 0x2A6C JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x28A1 DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0x2A57 JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP4 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x29EB JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x297E JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2A62 SWAP1 DUP3 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2358 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A79 DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x1E DUP3 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2AAD JUMPI POP JUMP JUMPDEST PUSH2 0x2ACC SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x20C0 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2ADA JUMPI DIV SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI PUSH1 0x1E DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x1E SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 PUSH1 0x1E SWAP2 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST SUB PUSH2 0x2B1C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 PUSH1 0x64 SWAP2 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 PUSH1 0xA SWAP2 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2BEF JUMPI DUP1 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP3 SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 SWAP1 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2C03 DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x1A DUP3 MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CALL LOG0 0xED 0xCC PUSH27 0x52A47C82615094E790EBE5A3FB9DC62C8479E9C1CE783F3B9E7364 PUSH20 0x6F6C634300081100338BE0079C531659141344CD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E000000000000000000000000000000000000000 ",
							"sourceMap": "348:15445:0:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;2136:19:2;348:15445:0;;:::i;:::-;;;;;;;;;-1:-1:-1;348:15445:0;;;;2136:19:2;348:15445:0;2166:15:2;348:15445:0;;;;;:::i;:::-;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;736:10:9;;348:15445:0;1136:18:1;348:15445:0;;;1136:18:1;348:15445:0;;;-1:-1:-1;;1170:43:1;-1:-1:-1;;;;;;;;;;;736:10:9;;1170:43:1;;;;;569:21:0;;348:15445;;;;626:5;348:15445;;;626:5;348:15445;1049:11;;348:15445;;;1106:1;348:15445;;1152:1;348:15445;1208:12;;348:15445;1697:42;348:15445;1689:51;348:15445;;;1689:51;348:15445;1797:42;348:15445;1789:51;348:15445;;;1789:51;348:15445;1892:42;348:15445;1884:51;348:15445;;;1884:51;348:15445;;2348:1;348:15445;2136:19:2;2389:1:0;348:15445;2136:19:2;2425:1:0;348:15445;;2466:1;348:15445;;2649:1;348:15445;;;;;;;;2764:1;348:15445;;3748:26;;3651:42;;;;3748:26;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;3812:23;;348:15445;3812:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;3730:106;;;;;348:15445;3730:106;;3805:4;3730:106;;;348:15445;;;;;;;;;;;;;;;;3730:106;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;4169:21;348:15445;4475:7;348:15445;;;4504:7;348:15445;;;;;4446:7;348:15445;;3849:34;348:15445;;;3849:34;348:15445;;;;;;;;;;;;;;;;;;;;;;;;3805:4;348:15445;;3955:19;348:15445;;;;;;;;;;;;;;1689:51;348:15445;;;;;;;;;;;;;;;;1789:51;348:15445;;;;;;;;;;;;;;;1884:51;348:15445;;;;;;;;;;;;;;;3805:4;348:15445;;;;;;;;;;;;;;;;;;;;;;;;4446:7;:::i;:::-;4475;:::i;4504:::-;348:15445;2663:24:1;;;348:15445:0;;;;2741:21:1;348:15445:0;;;2741:21:1;348:15445:0;;;;2778:44:1;;;;569:21:0;348:15445;3805:4;;8944:21:2;348:15445:0;;;;;9326:37:2;348:15445:0;9091:24:2;348:15445:0;;;9091:24:2;:::i;:::-;348:15445:0;;3805:4;348:15445;;;;;9273:30:2;348:15445:0;;;;;9273:30:2;:::i;:::-;3805:4:0;348:15445;;;;;;;;;;;;;;3805:4;9326:37:2;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3730:106;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15445;;;;;;;;4504:7;348:15445;;;;;4169:21;348:15445;;4446:7;348:15445;;4475:7;348:15445;;:::i;:::-;3730:106;;;;;;;;;;;;;;;;;348:15445;;;;3730:106;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;3812:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15445;;;;;;;;;;;;;;;:::i;:::-;3812:23;;;;;;;;;;3748:26;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15445;;;;;;;;;;;;;;;;;:::i;:::-;3748:26;;;;348:15445;;;;3748:26;;;;;;348:15445;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2136:19:2;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2942:330:1;-1:-1:-1;;;;;348:15445:0;3007:22:1;;348:15445:0;;3027:1:1;348:15445:0;;;3088:7:1;348:15445:0;;;;;;;;;;;;;3088:7:1;348:15445:0;;;;;;;-1:-1:-1;;348:15445:0;;;;;3184:7:1;348:15445:0;;;;;;;;;;;3184:7:1;348:15445:0;;;;;;3184:7:1;348:15445:0;;;;;;-1:-1:-1;;;;;;348:15445:0;;;;;-1:-1:-1;;;;;;;;;;;348:15445:0;;3222:42:1;2942:330::o;348:15445:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:181:8;;348:15445:0;;;;;;;;601:6:8;;348:15445:0;;487:181:8;:::o;348:15445:0:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;-1:-1:-1;348:15445:0"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 8457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_33892": {
									"entryPoint": 8484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 8662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 10960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 9142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_literal_to_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862": {
									"entryPoint": 10860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"copy_literal_to_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f": {
									"entryPoint": 11254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_43775": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__transfer": {
									"entryPoint": 10046,
									"id": 512,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 10839,
									"id": 2794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_addLiquidity": {
									"entryPoint": 8787,
									"id": 769,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_approve": {
									"entryPoint": 10525,
									"id": 2136,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_mul": {
									"entryPoint": 11217,
									"id": 2874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_mul_33888": {
									"entryPoint": 10995,
									"id": 2874,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_mul_33900": {
									"entryPoint": 11151,
									"id": 2874,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_mul_33912": {
									"entryPoint": 11184,
									"id": 2874,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_swapTokensForEth": {
									"entryPoint": 9387,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_transfer": {
									"entryPoint": 10261,
									"id": 1948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"require_helper_string": {
									"entryPoint": 10917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"require_helper_stringliteral": {
									"entryPoint": 9930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_3b6d": {
									"entryPoint": 8584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_6a43": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_7134": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_9e9b": {
									"entryPoint": 8506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_baec": {
									"entryPoint": 9814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_struct_Proposal_dyn": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"update_storage_value_offsett_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060409080825260049081361015610053575b5050361561002057600080fd5b3461002757005b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2005b6000917c0100000000000000000000000000000000000000000000000000000000833504918263013cf08b14611e315750816306fdde0314611d3a578163095ea7b314611d105781630abdc64014611ce85781630d61b519146119095781631694505e146118e157816318160ddd146118c25781631b45a47a146118a357816323b872dd146117c95781632a9af7ba146117aa578163313ce5671461178e578163392627731461176f57816339509351146117275781633ccfd60b146114f6578163553000c1146114d8578163562e9df9146114b057816370a082311461147a5781637918447e1461145b5781637a594a2b146114335781637d81936c146114145781638198c34114610f3357816385a6a09114610e1e5781638da5cb5b14610df6578163933f5e0714610dd757816395d89b4114610cd157816398951b5614610bb0578163a457c2d714610ad3578163a6f2ae3a14610a68578163a9059cbb14610a37578163b6bba0ae14610a18578163c4ce220b146109f9578163c84ad9a5146109d5578163d7196dd914610873578163d8a0f828146107fb578163dce165a61461029957508063dd62ed3e146102505763fe7441e7146102165780610013565b903461024c57602036600319011261024c5780602092600160a060020a0361023c612109565b168152600e845220549051908152f35b5080fd5b50903461024c578060031936011261024c578060209261026e612109565b610276612124565b600160a060020a0391821683526001865283832091168252845220549051908152f35b905082346107f757610180806003193601126107f3578383359182151580930361024c576024938435918215158093036107f357604435948515158096036107ef5760643593841515968786036107eb5760a4359788151590818a036107e757610144358015159a8b82036107e3576101643599600160a060020a039b8c8c16809c036107e05760ff8b61033792338152600a602052205416612188565b610764575b6106d0575b610660575b8651966101c0880188811067ffffffffffffffff82111761064a57908e918152338952602089019182528801958652606088019485526080880193845260a0880191825260c0880191608435835260e0890193845261010089019460c43586526101208a019660e43588526101408b0198610104358a526101608c019a610124358c528c019e8f526101a08c019c8d5260055468010000000000000000811015610630578060016103fa920160055561206c565b9c909c61061757518c5495519151925193519451151578010000000000000000000000000000000000000000000000000278ff00000000000000000000000000000000000000000000000016941515770100000000000000000000000000000000000000000000000277ff0000000000000000000000000000000000000000000000169315157601000000000000000000000000000000000000000000000276ff000000000000000000000000000000000000000000001692151575010000000000000000000000000000000000000000000275ff0000000000000000000000000000000000000000001691151560a060020a0274ff000000000000000000000000000000000000000016908f1678ffffffffffffffffffffffffffffffffffffffffffffffffff1990961695909517949094179390931792909217919091171787555160018701555160028601805460ff191691151560ff1691909117905551600385015551888401555160058301555160068201556007019251151561058e90849060ff801983541691151516179055565b51168154906101000274ffffffffffffffffffffffffffffffffffffffff00169074ffffffffffffffffffffffffffffffffffffffff0019161790556005549160001983019283116106035750507f096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce8280a280f35b6011849160e060020a634e487b7102835252fd5b50505050508b8e808f60e060020a634e487b7102825252fd5b50505050508b8e60418f60e060020a634e487b7102835252fd5b508b8e60418f60e060020a634e487b7102835252fd5b876103465760848c60338d60208b519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a206e6577206f776e65722060448201527f697320746865207a65726f2061646472657373000000000000000000000000006064820152fd5b600a6106f3610124356106ee610104356106ee60e43560c4356121d6565b6121d6565b11156103415760848d60338e60208c519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f6665657320617420313025206f72206c657373000000000000000000000000006064820152fd5b6611c37937e08000601354111561033c5760848e603c8f60208d519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f3530303030303030303030303030303020576569206f72206c657373000000006064820152fd5b80fd5b8a80fd5b8880fd5b8680fd5b8480fd5b8380fd5b8280fd5b83915060203660031901126107f7577fc5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae745399161086b602092338652600a845261084860ff8488205416612188565b600d5461085b60ff61010083041661213a565b61ff001916600d55349035612253565b51348152a180f35b90503461024c578160031936011261024c57338252602090600a825261089e60ff8585205416612188565b600160a060020a03906108b98260175416601e549030612815565b6108cb8260185416601f549030612815565b6108dc826019541684549030612815565b838080806108fa6108f2601e54601f54906121d6565b8854906121d6565b9581601e5581601f55818855601754163031905af13d156109d0573d67ffffffffffffffff81116109ba5786519061093b601f8201601f1916870183612231565b815285853d92013e5b1561097557507f21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff929351908152a180f35b6064908386519160e560020a62461bcd028352820152601260248201527f4661696c656420746f2073656e6420424e4200000000000000000000000000006044820152fd5b60248660418560e060020a634e487b7102835252fd5b610944565b82843461024c578160031936011261024c5760209060ff600d541690519015158152f35b82843461024c578160031936011261024c57602090601a549051908152f35b82843461024c578160031936011261024c57602090601c549051908152f35b82843461024c578060031936011261024c57602090610a61610a57612109565b602435903361273e565b5160018152f35b82848160031936011261024c57610a99610aac91610a8a60ff600d541661213a565b30845283602052832054612bb0565b610aa1612bf6565b506064349104612253565b7f6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b8180a180f35b919050346107e057826003193601126107e057610aee612109565b9183602435923381526001602052818120600160a060020a0386168252602052205490828210610b4457602085610a6186610b3d8787610b38610b2f612a6c565b82841115612aa5565b6123b6565b903361291d565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b905082346107f7576020806003193601126107f357823592338552600a8252610bde60ff8487205416612188565b610beb60055485106123c3565b83855260068252828520338652825260ff8386205416610c675750610c2360ff60a060020a610c198661206c565b5054041615612437565b8284526006815281842090338552528220600160ff19825416179055337f12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb78380a380f35b90608492519160e560020a62461bcd028352820152603c60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206160448201527f6c72656164792077617320617070726f766564206279206f776e6572000000006064820152fd5b905082346107f757826003193601126107f757805191838154916002830491600191828516948515610dcd575b6020958686108114610db757858952908115610d945750600114610d3c575b610d388787610d2e828c0383612231565b51918291826120c0565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610d815750505082610d3894610d2e92820101948680610d1d565b8054868501880152928601928101610d63565b60ff19168887015250505050151581028301019250610d2e82610d388680610d1d565b60248460228560e060020a634e487b7102835252fd5b93607f1693610cfe565b82843461024c578160031936011261024c57602090601d549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600854169051908152f35b905082346107f7576020806003193601126107f357823592338552600a8252610e4c60ff8487205416612188565b610e5960055485106123c3565b610e6c60ff60a060020a610c198761206c565b83855260068252828520338652825260ff838620541615610ec95750828452600681528184209033855252822060ff198154169055337fb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb8380a380f35b90608492519160e560020a62461bcd028352820152602e60248201527f4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206960448201527f73206e6f7420617070726f7665640000000000000000000000000000000000006064820152fd5b905082346107f75760603660031901126107f757610f4f612109565b906024803593604490813590600160a060020a03928360075416943386036113aa578489981694858b52602096600a885260ff898d20541661136757861461132457806017541686146112e1578060185416861461129e5760195416851461125b57604b841161121857848a52600e8652868a20546111d557601654891161116c57505050610fe060649187612bd1565b610fe8612bf6565b500494601a5490601b54610ffc81846121d6565b9261100a601c5480956121d6565b9081611032575050505050611025600e939495601e54612a57565b601e555b85525282205580f35b611043919294999395979850612b8f565b8161104c612bf6565b5061105691612ad0565b9261106090612b8f565b81611069612bf6565b5061107391612ad0565b9761107d90612b8f565b90611086612bf6565b5061109091612ad0565b9161109b9082612bd1565b6110a3612bf6565b5060649004966110b39082612bd1565b6110bb612bf6565b5060649004916110ca91612bd1565b6110d2612bf6565b506064900491866110e1612a6c565b6110ee9083831115612aa5565b6110f7916123b6565b81611100612a6c565b61110d9083831115612aa5565b611116916123b6565b8261111f612a6c565b61112c9083831115612aa5565b611135916123b6565b95601e549061114391612a57565b601e55601f549061115391612a57565b601f5581549061116291612a57565b8155600e91611029565b6084929160387f416d6f756e742063616e2774206578636565647320746865206d61782074726192888a519560e560020a62461bcd0287528601528401528201527f6e73616374696f6e20776974686472617720616d6f756e7400000000000000006064820152fd5b60649291601c7f55736572206861732070656e64696e67205769746864726177616c730000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064929160197f546865206665652063616e6e6f7420657863656564203735250000000000000092888a519560e560020a62461bcd028752860152840152820152fd5b60649291601b7f5465616d2063616e2774206d616b65207769746864726177616c73000000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064847f536b796c65722063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f48656973656e2063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f4261636b656e642063616e2774206d616b65207769746864726177616c73000085601e868c8e519560e560020a62461bcd028752860152840152820152fd5b6064857f4f776e6572732063616e2774206d616b65207769746864726177616c7300000086601d878d8f519560e560020a62461bcd028752860152840152820152fd5b6084929160227f4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b659260208a519560e560020a62461bcd0287528601528401528201527f6e640000000000000000000000000000000000000000000000000000000000006064820152fd5b82843461024c578160031936011261024c57602090601b549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601754169051908152f35b82843461024c578160031936011261024c576020906013549051908152f35b82843461024c57602036600319011261024c5780602092600160a060020a036114a1612109565b16815280845220549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601954169051908152f35b82843461024c578160031936011261024c5760209081549051908152f35b90508160031936011261024c573382526020906011825283832054620151808101908181116116f75781106116b257421161170d575b338352601282528383205460018101908181116116f75781106116b257338452601283528484205583832054601554106116485760135434106115b857507f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9192338452600e825280842054906115a4823330612815565b338552600e8352848181205551908152a180f35b60a49184519160e560020a62461bcd028352820152604460248201527f54686520616d6f756e742073656e74206973206e6f7420657175616c20746f2060448201527f74686520424e4220616d6f756e7420726571756972656420666f72207769746860648201527f64726177000000000000000000000000000000000000000000000000000000006084820152fd5b60849184519160e560020a62461bcd028352820152603060248201527f596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e6520776960448201527f746864726177616c2070657220646179000000000000000000000000000000006064820152fd5b5060649184519160e560020a62461bcd028352820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248560118560e060020a634e487b7102835252fd5b33835260118252428484205560128252828481205561152c565b82843461024c578060031936011261024c57610a61602092610b3d61174a612109565b9133815260018652848120600160a060020a0384168252865284602435912054612a57565b82843461024c578160031936011261024c57602090601e549051908152f35b82843461024c578160031936011261024c576020905160128152f35b82843461024c578160031936011261024c576020906021549051908152f35b90503461024c57606036600319011261024c576117e4612109565b6117ec612124565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203611827575b602086610a6187878761273e565b84821061185d575091839161185261184b60209796610a6196610b38610b2f612a6c565b338361291d565b919394819350611819565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b82843461024c578160031936011261024c57602090601f549051908152f35b82843461024c578160031936011261024c576020906002549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600b54169051908152f35b839150346107f7576020806003193601126107f357813561192d60055482106123c3565b6119368161206c565b5060ff9161194e8360a060020a809454041615612437565b60095487805b828110611c69575010611bfd579061196d60079261206c565b509074ff000000000000000000000000000000000000000019825416178082558484807501000000000000000000000000000000000000000000840416611ba3575b9150507701000000000000000000000000000000000000000000000082540416611b67575b82780100000000000000000000000000000000000000000000000082540416611b31575b82600282015416611ad2575b0154908116611a11578480f35b610100600160a060020a03910416928315611a685750505080600160a060020a03196007541617600755817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3818080808480f35b60849350519160e560020a62461bcd028352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b7fac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee96080600383015487840154600585015460068601549183601a5580601b5581601c5582601d558b51938452898401528a8301526060820152a1611a04565b7f7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c846001830154806013558851908152a16119f8565b611b9a3031611b776021546124ab565b3089528886526064611b8b898b2054612af3565b611b93612bf6565b5004612253565b866021556119d4565b7601000000000000000000000000000000000000000000007f01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604930416151560ff19600d541686821617600d558851908152a18784846119af565b505050608492519160e560020a62461bcd028352820152603560248201527f4d756c74695369676e617475726557616c6c65743a20617070726f76616c732060448201527f6973206c657373207468616e20726571756972656400000000000000000000006064820152fd5b838a5260068752888a20600160a060020a03827f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154168b52875285898b205416611cd6575b6000198114611cc057600101611954565b60248a60118a60e060020a634e487b7102835252fd5b9060018101809111611cc05790611caf565b82843461024c578160031936011261024c57602090600160a060020a03601854169051908152f35b82843461024c578060031936011261024c57602090610a61611d30612109565b602435903361291d565b905082346107f757826003193601126107f7578051918360035460028104916001918281168015611e27575b6020958686108214611e115750848852908115611df05750600114611d97575b610d388686610d2e828b0383612231565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410611ddd5750505082610d3894610d2e928201019486611d86565b8054868501880152928601928101611dc0565b60ff191687860152505050151581028301019250610d2e82610d3886611d86565b83602260249260e060020a634e487b7102835252fd5b93607f1693611d66565b848492346107f35760203660031901126107f357356005548110156107f35760089060056101c0955202807f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001547f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18201549160ff90817f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015416937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3820154947f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4830154907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5840154928578010000000000000000000000000000000000000000000000007f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db77f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6880154970154988c600160a060020a039c8d831682528460a060020a8404161515602083015284750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b6005548110156120a7576008906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b60e060020a634e487b7102600052603260045260246000fd5b6020808252825181830181905290939260005b8281106120f557505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016120d3565b60043590600160a060020a038216820361211f57565b600080fd5b60243590600160a060020a038216820361211f57565b1561214157565b606460405160e560020a62461bcd02815260206004820152601560248201527f50726573616c652069736e277420656e61626c656400000000000000000000006044820152fd5b1561218f57565b606460405160e560020a62461bcd02815260206004820152601f60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572006044820152fd5b919082018092116121e357565b60e060020a634e487b7102600052601160045260246000fd5b6040810190811067ffffffffffffffff82111761221857604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761221857604052565b600160a060020a039081600b54169161227b600093308552846020526040852054903061291d565b600b54169061012c420180421161239f574281106123585760c46060928660405195869485937ff305d719000000000000000000000000000000000000000000000000000000008552306004860152602485015288604485015288606485015230608485015260a48401525af1801561234d57612322575b505060207ffdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa91604051908152a1565b606090813d8111612346575b6123388183612231565b810103126107e057806122f3565b503d61232e565b6040513d84823e3d90fd5b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248460e060020a634e487b710281526011600452fd5b919082039182116121e357565b156123ca57565b608460405160e560020a62461bcd02815260206004820152602d60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206460448201527f6f6573206e6f74206578697374000000000000000000000000000000000000006064820152fd5b1561243e57565b608460405160e560020a62461bcd02815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c207760448201527f617320616c7265616479206578656375746564000000000000000000000000006064820152fd5b604080519167ffffffffffffffff90606084018281118582101761221857835260028452602080850190843683378551156120a757308252600160a060020a039283600b5416918651927fad5c46480000000000000000000000000000000000000000000000000000000084528184600481845afa93841561264b57600094612611575b508851936001948510156120a75761254f91878592168a8c01523061291d565b84600b541694853b1561211f5791879894939198519889957f791ac94700000000000000000000000000000000000000000000000000000000875260a487019260048801526000602488015260a060448801525180925260c4860194936000905b8382106125f7575050505050509181600081819530606483015242608483015203925af180156125ec576125e357505050565b82116122185752565b82513d6000823e3d90fd5b8551811687528b97509582019594820194908401906125b0565b8281819693963d8311612644575b6126298183612231565b8101031261024c57519086821682036107e05750923861252f565b503d61261f565b88513d6000823e3d90fd5b1561265d57565b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b156126d157565b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b906127999291600160a060020a038082169061275b821515612656565b8316906127698215156126ca565b600091818352602260205260ff604084205416908115612804575b501590816127ee575b5061279b575b50612815565b565b6127be60646127ac601d5487612bd1565b6127b4612bf6565b5004602154612a57565b6021556127e530316127cf866124ab565b308352826020526064611b8b6040852054612af3565b60215538612793565b8252506024602052604081205460ff163861278d565b835250604082205460ff1638612784565b600160a060020a038091169161282c831515612656565b16916128398315156126ca565b600082815280602052604090818120548381106128b1579183916128867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95602095610b38610b2f612a6c565b86825281855282822055868152816128a18482842054612a57565b91888152808652205551908152a3565b6084835160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a038091169182156129eb571691821561297e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90612a6290826121d6565b9081106123585790565b60405190612a79826121fc565b601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152565b15612aad5750565b612acc9060405191829160e560020a62461bcd028352600483016120c0565b0390fd5b8115612ada570490565b60e060020a634e487b7102600052601260045260246000fd5b8015612b8957601e810290808204601e036121e357612b14601e9183612ad0565b03612b1c5790565b608460405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b50600090565b8015612b895760648102908082046064036121e357612b1460649183612ad0565b8015612b8957600a810290808204600a036121e357612b14600a9183612ad0565b908115612bef578082029180830482036121e357612b149083612ad0565b5050600090565b60405190612c03826121fc565b601a82527f536166654d6174683a206469766973696f6e206279207a65726f000000000000602083015256fea2646970667358221220b9f1a0edcc7a52a47c82615094e790ebe5a3fb9dc62c8479e9c1ce783f3b9e7364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x53 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27 JUMPI STOP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x0 SWAP2 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x13CF08B EQ PUSH2 0x1E31 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1D3A JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x1D10 JUMPI DUP2 PUSH4 0xABDC640 EQ PUSH2 0x1CE8 JUMPI DUP2 PUSH4 0xD61B519 EQ PUSH2 0x1909 JUMPI DUP2 PUSH4 0x1694505E EQ PUSH2 0x18E1 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x18C2 JUMPI DUP2 PUSH4 0x1B45A47A EQ PUSH2 0x18A3 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x17C9 JUMPI DUP2 PUSH4 0x2A9AF7BA EQ PUSH2 0x17AA JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x178E JUMPI DUP2 PUSH4 0x39262773 EQ PUSH2 0x176F JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x1727 JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x14F6 JUMPI DUP2 PUSH4 0x553000C1 EQ PUSH2 0x14D8 JUMPI DUP2 PUSH4 0x562E9DF9 EQ PUSH2 0x14B0 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x147A JUMPI DUP2 PUSH4 0x7918447E EQ PUSH2 0x145B JUMPI DUP2 PUSH4 0x7A594A2B EQ PUSH2 0x1433 JUMPI DUP2 PUSH4 0x7D81936C EQ PUSH2 0x1414 JUMPI DUP2 PUSH4 0x8198C341 EQ PUSH2 0xF33 JUMPI DUP2 PUSH4 0x85A6A091 EQ PUSH2 0xE1E JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xDF6 JUMPI DUP2 PUSH4 0x933F5E07 EQ PUSH2 0xDD7 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xCD1 JUMPI DUP2 PUSH4 0x98951B56 EQ PUSH2 0xBB0 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0xAD3 JUMPI DUP2 PUSH4 0xA6F2AE3A EQ PUSH2 0xA68 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA37 JUMPI DUP2 PUSH4 0xB6BBA0AE EQ PUSH2 0xA18 JUMPI DUP2 PUSH4 0xC4CE220B EQ PUSH2 0x9F9 JUMPI DUP2 PUSH4 0xC84AD9A5 EQ PUSH2 0x9D5 JUMPI DUP2 PUSH4 0xD7196DD9 EQ PUSH2 0x873 JUMPI DUP2 PUSH4 0xD8A0F828 EQ PUSH2 0x7FB JUMPI DUP2 PUSH4 0xDCE165A6 EQ PUSH2 0x299 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI PUSH4 0xFE7441E7 EQ PUSH2 0x216 JUMPI DUP1 PUSH2 0x13 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x23C PUSH2 0x2109 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x26E PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH2 0x180 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP4 DUP4 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x24C JUMPI PUSH1 0x24 SWAP4 DUP5 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x7F3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP5 DUP6 ISZERO ISZERO DUP1 SWAP7 SUB PUSH2 0x7EF JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 DUP5 ISZERO ISZERO SWAP7 DUP8 DUP7 SUB PUSH2 0x7EB JUMPI PUSH1 0xA4 CALLDATALOAD SWAP8 DUP9 ISZERO ISZERO SWAP1 DUP2 DUP11 SUB PUSH2 0x7E7 JUMPI PUSH2 0x144 CALLDATALOAD DUP1 ISZERO ISZERO SWAP11 DUP12 DUP3 SUB PUSH2 0x7E3 JUMPI PUSH2 0x164 CALLDATALOAD SWAP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP12 DUP13 DUP13 AND DUP1 SWAP13 SUB PUSH2 0x7E0 JUMPI PUSH1 0xFF DUP12 PUSH2 0x337 SWAP3 CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x764 JUMPI JUMPDEST PUSH2 0x6D0 JUMPI JUMPDEST PUSH2 0x660 JUMPI JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0x1C0 DUP9 ADD DUP9 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x64A JUMPI SWAP1 DUP15 SWAP2 DUP2 MSTORE CALLER DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP2 DUP3 MSTORE DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP2 DUP3 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0xE0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x100 DUP10 ADD SWAP5 PUSH1 0xC4 CALLDATALOAD DUP7 MSTORE PUSH2 0x120 DUP11 ADD SWAP7 PUSH1 0xE4 CALLDATALOAD DUP9 MSTORE PUSH2 0x140 DUP12 ADD SWAP9 PUSH2 0x104 CALLDATALOAD DUP11 MSTORE PUSH2 0x160 DUP13 ADD SWAP11 PUSH2 0x124 CALLDATALOAD DUP13 MSTORE DUP13 ADD SWAP15 DUP16 MSTORE PUSH2 0x1A0 DUP13 ADD SWAP13 DUP14 MSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x630 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3FA SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x206C JUMP JUMPDEST SWAP13 SWAP1 SWAP13 PUSH2 0x617 JUMPI MLOAD DUP13 SLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH25 0x1000000000000000000000000000000000000000000000000 MUL PUSH25 0xFF000000000000000000000000000000000000000000000000 AND SWAP5 ISZERO ISZERO PUSH24 0x10000000000000000000000000000000000000000000000 MUL PUSH24 0xFF0000000000000000000000000000000000000000000000 AND SWAP4 ISZERO ISZERO PUSH23 0x100000000000000000000000000000000000000000000 MUL PUSH23 0xFF00000000000000000000000000000000000000000000 AND SWAP3 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL PUSH22 0xFF000000000000000000000000000000000000000000 AND SWAP2 ISZERO ISZERO PUSH1 0xA0 PUSH1 0x2 EXP MUL PUSH21 0xFF0000000000000000000000000000000000000000 AND SWAP1 DUP16 AND PUSH25 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO PUSH1 0xFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD DUP9 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 ADD SWAP3 MLOAD ISZERO ISZERO PUSH2 0x58E SWAP1 DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD AND DUP2 SLOAD SWAP1 PUSH2 0x100 MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x603 JUMPI POP POP PUSH32 0x96AA03A7CD4ABA017B05CE697DF0E528A91D045A01285C50E931B0C0C4939CE DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x11 DUP5 SWAP2 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 DUP1 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP3 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP8 PUSH2 0x346 JUMPI PUSH1 0x84 DUP13 PUSH1 0x33 DUP14 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A206E6577206F776E657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697320746865207A65726F206164647265737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xA PUSH2 0x6F3 PUSH2 0x124 CALLDATALOAD PUSH2 0x6EE PUSH2 0x104 CALLDATALOAD PUSH2 0x6EE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x21D6 JUMP JUMPDEST GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x84 DUP14 PUSH1 0x33 DUP15 PUSH1 0x20 DUP13 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6665657320617420313025206F72206C65737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH7 0x11C37937E08000 PUSH1 0x13 SLOAD GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x84 DUP15 PUSH1 0x3C DUP16 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3530303030303030303030303030303020576569206F72206C65737300000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH32 0xC5D4FBADDD2087D369F5CF16AD7544F41EF0DC291B510E4CB1CB6E6EAAE74539 SWAP2 PUSH2 0x86B PUSH1 0x20 SWAP3 CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE PUSH2 0x848 PUSH1 0xFF DUP5 DUP9 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x85B PUSH1 0xFF PUSH2 0x100 DUP4 DIV AND PUSH2 0x213A JUMP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0xD SSTORE CALLVALUE SWAP1 CALLDATALOAD PUSH2 0x2253 JUMP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI CALLER DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE PUSH2 0x89E PUSH1 0xFF DUP6 DUP6 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 PUSH2 0x8B9 DUP3 PUSH1 0x17 SLOAD AND PUSH1 0x1E SLOAD SWAP1 ADDRESS PUSH2 0x2815 JUMP JUMPDEST PUSH2 0x8CB DUP3 PUSH1 0x18 SLOAD AND PUSH1 0x1F SLOAD SWAP1 ADDRESS PUSH2 0x2815 JUMP JUMPDEST PUSH2 0x8DC DUP3 PUSH1 0x19 SLOAD AND DUP5 SLOAD SWAP1 ADDRESS PUSH2 0x2815 JUMP JUMPDEST DUP4 DUP1 DUP1 DUP1 PUSH2 0x8FA PUSH2 0x8F2 PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD SWAP1 PUSH2 0x21D6 JUMP JUMPDEST DUP9 SLOAD SWAP1 PUSH2 0x21D6 JUMP JUMPDEST SWAP6 DUP2 PUSH1 0x1E SSTORE DUP2 PUSH1 0x1F SSTORE DUP2 DUP9 SSTORE PUSH1 0x17 SLOAD AND ADDRESS BALANCE SWAP1 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x9D0 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9BA JUMPI DUP7 MLOAD SWAP1 PUSH2 0x93B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP4 PUSH2 0x2231 JUMP JUMPDEST DUP2 MSTORE DUP6 DUP6 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x975 JUMPI POP PUSH32 0x21A3A3648D0B2AFC084ACD733D71600B506FA4ECA7EF1F5E24718C5E17F4E7FF SWAP3 SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 DUP4 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420424E420000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x41 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x944 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0xD SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1A SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA61 PUSH2 0xA57 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x273E JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA99 PUSH2 0xAAC SWAP2 PUSH2 0xA8A PUSH1 0xFF PUSH1 0xD SLOAD AND PUSH2 0x213A JUMP JUMPDEST ADDRESS DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP4 KECCAK256 SLOAD PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0xAA1 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 CALLVALUE SWAP2 DIV PUSH2 0x2253 JUMP JUMPDEST PUSH32 0x6CD8C20496FA31DBA3F83C7ADCA278C356A6CAA5529741A5D2B9B774613C198B DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x7E0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E0 JUMPI PUSH2 0xAEE PUSH2 0x2109 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xB44 JUMPI PUSH1 0x20 DUP6 PUSH2 0xA61 DUP7 PUSH2 0xB3D DUP8 DUP8 PUSH2 0xB38 PUSH2 0xB2F PUSH2 0x2A6C JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x291D JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xBDE PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH2 0xBEB PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23C3 JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND PUSH2 0xC67 JUMPI POP PUSH2 0xC23 PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC19 DUP7 PUSH2 0x206C JUMP JUMPDEST POP SLOAD DIV AND ISZERO PUSH2 0x2437 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0x12C8D6025943157CBCB4E904B3E3D97D2AC7EAE9F61F343B2E7CB23BE24BDBB7 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C72656164792077617320617070726F766564206279206F776E657200000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xDCD JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xDB7 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xD94 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD3C JUMPI JUMPDEST PUSH2 0xD38 DUP8 DUP8 PUSH2 0xD2E DUP3 DUP13 SUB DUP4 PUSH2 0x2231 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x20C0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xD81 JUMPI POP POP POP DUP3 PUSH2 0xD38 SWAP5 PUSH2 0xD2E SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xD63 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD2E DUP3 PUSH2 0xD38 DUP7 DUP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xCFE JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1D SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xE4C PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x2188 JUMP JUMPDEST PUSH2 0xE59 PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0xE6C PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC19 DUP8 PUSH2 0x206C JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0xEC9 JUMPI POP DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER PUSH32 0xB8B1CBDD07C030BED9E01F4EE5465E3A3FD2AA8F7135C84467C0F3CF203925EB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2050726F706F73616C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F7420617070726F766564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH2 0xF4F PUSH2 0x2109 JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP4 PUSH1 0x44 SWAP1 DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0x7 SLOAD AND SWAP5 CALLER DUP7 SUB PUSH2 0x13AA JUMPI DUP5 DUP10 SWAP9 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x20 SWAP7 PUSH1 0xA DUP9 MSTORE PUSH1 0xFF DUP10 DUP14 KECCAK256 SLOAD AND PUSH2 0x1367 JUMPI DUP7 EQ PUSH2 0x1324 JUMPI DUP1 PUSH1 0x17 SLOAD AND DUP7 EQ PUSH2 0x12E1 JUMPI DUP1 PUSH1 0x18 SLOAD AND DUP7 EQ PUSH2 0x129E JUMPI PUSH1 0x19 SLOAD AND DUP6 EQ PUSH2 0x125B JUMPI PUSH1 0x4B DUP5 GT PUSH2 0x1218 JUMPI DUP5 DUP11 MSTORE PUSH1 0xE DUP7 MSTORE DUP7 DUP11 KECCAK256 SLOAD PUSH2 0x11D5 JUMPI PUSH1 0x16 SLOAD DUP10 GT PUSH2 0x116C JUMPI POP POP POP PUSH2 0xFE0 PUSH1 0x64 SWAP2 DUP8 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0xFE8 PUSH2 0x2BF6 JUMP JUMPDEST POP DIV SWAP5 PUSH1 0x1A SLOAD SWAP1 PUSH1 0x1B SLOAD PUSH2 0xFFC DUP2 DUP5 PUSH2 0x21D6 JUMP JUMPDEST SWAP3 PUSH2 0x100A PUSH1 0x1C SLOAD DUP1 SWAP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1032 JUMPI POP POP POP POP POP PUSH2 0x1025 PUSH1 0xE SWAP4 SWAP5 SWAP6 PUSH1 0x1E SLOAD PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x1E SSTORE JUMPDEST DUP6 MSTORE MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x1043 SWAP2 SWAP3 SWAP5 SWAP10 SWAP4 SWAP6 SWAP8 SWAP9 POP PUSH2 0x2B8F JUMP JUMPDEST DUP2 PUSH2 0x104C PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH2 0x1056 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP3 PUSH2 0x1060 SWAP1 PUSH2 0x2B8F JUMP JUMPDEST DUP2 PUSH2 0x1069 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH2 0x1073 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP8 PUSH2 0x107D SWAP1 PUSH2 0x2B8F JUMP JUMPDEST SWAP1 PUSH2 0x1086 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH2 0x1090 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP2 PUSH2 0x109B SWAP1 DUP3 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x10A3 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP7 PUSH2 0x10B3 SWAP1 DUP3 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x10BB PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 PUSH2 0x10CA SWAP2 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x10D2 PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 DUP7 PUSH2 0x10E1 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x10EE SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x10F7 SWAP2 PUSH2 0x23B6 JUMP JUMPDEST DUP2 PUSH2 0x1100 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x110D SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x1116 SWAP2 PUSH2 0x23B6 JUMP JUMPDEST DUP3 PUSH2 0x111F PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x112C SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AA5 JUMP JUMPDEST PUSH2 0x1135 SWAP2 PUSH2 0x23B6 JUMP JUMPDEST SWAP6 PUSH1 0x1E SLOAD SWAP1 PUSH2 0x1143 SWAP2 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH1 0x1F SLOAD SWAP1 PUSH2 0x1153 SWAP2 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x1F SSTORE DUP2 SLOAD SWAP1 PUSH2 0x1162 SWAP2 PUSH2 0x2A57 JUMP JUMPDEST DUP2 SSTORE PUSH1 0xE SWAP2 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x38 PUSH32 0x416D6F756E742063616E2774206578636565647320746865206D617820747261 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E73616374696F6E20776974686472617720616D6F756E740000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1C PUSH32 0x55736572206861732070656E64696E67205769746864726177616C7300000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x19 PUSH32 0x546865206665652063616E6E6F74206578636565642037352500000000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1B PUSH32 0x5465616D2063616E2774206D616B65207769746864726177616C730000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x536B796C65722063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x48656973656E2063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x4261636B656E642063616E2774206D616B65207769746864726177616C730000 DUP6 PUSH1 0x1E DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH32 0x4F776E6572732063616E2774206D616B65207769746864726177616C73000000 DUP7 PUSH1 0x1D DUP8 DUP14 DUP16 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x22 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206261636B65 SWAP3 PUSH1 0x20 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E64000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1B SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x17 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x14A1 PUSH2 0x2109 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x19 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 DUP2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI CALLER DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x11 DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x16F7 JUMPI DUP2 LT PUSH2 0x16B2 JUMPI TIMESTAMP GT PUSH2 0x170D JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x12 DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x16F7 JUMPI DUP2 LT PUSH2 0x16B2 JUMPI CALLER DUP5 MSTORE PUSH1 0x12 DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x15 SLOAD LT PUSH2 0x1648 JUMPI PUSH1 0x13 SLOAD CALLVALUE LT PUSH2 0x15B8 JUMPI POP PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP2 SWAP3 CALLER DUP5 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x15A4 DUP3 CALLER ADDRESS PUSH2 0x2815 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP2 DUP2 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0xA4 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E742073656E74206973206E6F7420657175616C20746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686520424E4220616D6F756E7420726571756972656420666F722077697468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74206D616B65206D6F7265207468616E206F6E65207769 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746864726177616C207065722064617900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0x11 DUP3 MSTORE TIMESTAMP DUP5 DUP5 KECCAK256 SSTORE PUSH1 0x12 DUP3 MSTORE DUP3 DUP5 DUP2 KECCAK256 SSTORE PUSH2 0x152C JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA61 PUSH1 0x20 SWAP3 PUSH2 0xB3D PUSH2 0x174A PUSH2 0x2109 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x2A57 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x21 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x17E4 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x17EC PUSH2 0x2124 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x1827 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0xA61 DUP8 DUP8 DUP8 PUSH2 0x273E JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x185D JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1852 PUSH2 0x184B PUSH1 0x20 SWAP8 SWAP7 PUSH2 0xA61 SWAP7 PUSH2 0xB38 PUSH2 0xB2F PUSH2 0x2A6C JUMP JUMPDEST CALLER DUP4 PUSH2 0x291D JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP2 CALLDATALOAD PUSH2 0x192D PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x206C JUMP JUMPDEST POP PUSH1 0xFF SWAP2 PUSH2 0x194E DUP4 PUSH1 0xA0 PUSH1 0x2 EXP DUP1 SWAP5 SLOAD DIV AND ISZERO PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP8 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C69 JUMPI POP LT PUSH2 0x1BFD JUMPI SWAP1 PUSH2 0x196D PUSH1 0x7 SWAP3 PUSH2 0x206C JUMP JUMPDEST POP SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 NOT DUP3 SLOAD AND OR DUP1 DUP3 SSTORE DUP5 DUP5 DUP1 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND PUSH2 0x1BA3 JUMPI JUMPDEST SWAP2 POP POP PUSH24 0x10000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B67 JUMPI JUMPDEST DUP3 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B31 JUMPI JUMPDEST DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1AD2 JUMPI JUMPDEST ADD SLOAD SWAP1 DUP2 AND PUSH2 0x1A11 JUMPI DUP5 DUP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DIV AND SWAP3 DUP4 ISZERO PUSH2 0x1A68 JUMPI POP POP POP DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 DUP2 DUP1 DUP1 DUP1 DUP5 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP4 POP MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xAC9D517045A5EC57DA9F145E5C349535857BAA98B41FA00AEA81886B40B65EE9 PUSH1 0x80 PUSH1 0x3 DUP4 ADD SLOAD DUP8 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD SWAP2 DUP4 PUSH1 0x1A SSTORE DUP1 PUSH1 0x1B SSTORE DUP2 PUSH1 0x1C SSTORE DUP3 PUSH1 0x1D SSTORE DUP12 MLOAD SWAP4 DUP5 MSTORE DUP10 DUP5 ADD MSTORE DUP11 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 PUSH2 0x1A04 JUMP JUMPDEST PUSH32 0x7752C7A6D518AB1CF03B50E7D7FD3DA3258EB319DC343789E0A7BED06C43066C DUP5 PUSH1 0x1 DUP4 ADD SLOAD DUP1 PUSH1 0x13 SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x1B9A ADDRESS BALANCE PUSH2 0x1B77 PUSH1 0x21 SLOAD PUSH2 0x24AB JUMP JUMPDEST ADDRESS DUP10 MSTORE DUP9 DUP7 MSTORE PUSH1 0x64 PUSH2 0x1B8B DUP10 DUP12 KECCAK256 SLOAD PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1B93 PUSH2 0x2BF6 JUMP JUMPDEST POP DIV PUSH2 0x2253 JUMP JUMPDEST DUP7 PUSH1 0x21 SSTORE PUSH2 0x19D4 JUMP JUMPDEST PUSH23 0x100000000000000000000000000000000000000000000 PUSH32 0x1B48326D6E9158A921C6006B9D6AD4B9D777C488E9B7924B3E0C8B0B1304604 SWAP4 DIV AND ISZERO ISZERO PUSH1 0xFF NOT PUSH1 0xD SLOAD AND DUP7 DUP3 AND OR PUSH1 0xD SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP8 DUP5 DUP5 PUSH2 0x19AF JUMP JUMPDEST POP POP POP PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A20617070726F76616C7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6973206C657373207468616E2072657175697265640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP11 MSTORE PUSH1 0x6 DUP8 MSTORE DUP9 DUP11 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SLOAD AND DUP12 MSTORE DUP8 MSTORE DUP6 DUP10 DUP12 KECCAK256 SLOAD AND PUSH2 0x1CD6 JUMPI JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CC0 JUMPI PUSH1 0x1 ADD PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x24 DUP11 PUSH1 0x11 DUP11 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1CC0 JUMPI SWAP1 PUSH2 0x1CAF JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x18 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA61 PUSH2 0x1D30 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x291D JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E27 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x1E11 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1DF0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1D97 JUMPI JUMPDEST PUSH2 0xD38 DUP7 DUP7 PUSH2 0xD2E DUP3 DUP12 SUB DUP4 PUSH2 0x2231 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x1DDD JUMPI POP POP POP DUP3 PUSH2 0xD38 SWAP5 PUSH2 0xD2E SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x1D86 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD2E DUP3 PUSH2 0xD38 DUP7 PUSH2 0x1D86 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1D66 JUMP JUMPDEST DUP5 DUP5 SWAP3 CALLVALUE PUSH2 0x7F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F3 JUMPI CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH2 0x1C0 SWAP6 MSTORE MUL DUP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF SWAP1 DUP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SLOAD AND SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SLOAD SWAP5 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP4 ADD SLOAD SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 DUP5 ADD SLOAD SWAP3 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB7 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP9 DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP13 DUP14 DUP4 AND DUP3 MSTORE DUP5 PUSH1 0xA0 PUSH1 0x2 EXP DUP5 DIV AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x20A7 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x20F5 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x211F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x211F JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2141 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C652069736E277420656E61626C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x218F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420616E206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21E3 JUMPI JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2218 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2218 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 PUSH1 0xB SLOAD AND SWAP2 PUSH2 0x227B PUSH1 0x0 SWAP4 ADDRESS DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 ADDRESS PUSH2 0x291D JUMP JUMPDEST PUSH1 0xB SLOAD AND SWAP1 PUSH2 0x12C TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x239F JUMPI TIMESTAMP DUP2 LT PUSH2 0x2358 JUMPI PUSH1 0xC4 PUSH1 0x60 SWAP3 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE ADDRESS PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE DUP9 PUSH1 0x44 DUP6 ADD MSTORE DUP9 PUSH1 0x64 DUP6 ADD MSTORE ADDRESS PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x234D JUMPI PUSH2 0x2322 JUMPI JUMPDEST POP POP PUSH1 0x20 PUSH32 0xFDB748C915E4E67B4BB23287BF4295A4595CE48B50343214369F72CCFB974CFA SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x2346 JUMPI JUMPDEST PUSH2 0x2338 DUP2 DUP4 PUSH2 0x2231 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7E0 JUMPI DUP1 PUSH2 0x22F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x21E3 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x23CA JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6573206E6F7420657869737400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x243E JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617320616C726561647920657865637574656400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x60 DUP5 ADD DUP3 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x2218 JUMPI DUP4 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP1 DUP5 CALLDATASIZE DUP4 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x20A7 JUMPI ADDRESS DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0xB SLOAD AND SWAP2 DUP7 MLOAD SWAP3 PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP2 DUP5 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x264B JUMPI PUSH1 0x0 SWAP5 PUSH2 0x2611 JUMPI JUMPDEST POP DUP9 MLOAD SWAP4 PUSH1 0x1 SWAP5 DUP6 LT ISZERO PUSH2 0x20A7 JUMPI PUSH2 0x254F SWAP2 DUP8 DUP6 SWAP3 AND DUP11 DUP13 ADD MSTORE ADDRESS PUSH2 0x291D JUMP JUMPDEST DUP5 PUSH1 0xB SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x211F JUMPI SWAP2 DUP8 SWAP9 SWAP5 SWAP4 SWAP2 SWAP9 MLOAD SWAP9 DUP10 SWAP6 PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0xA4 DUP8 ADD SWAP3 PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xC4 DUP7 ADD SWAP5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x25F7 JUMPI POP POP POP POP POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 DUP2 SWAP6 ADDRESS PUSH1 0x64 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x25EC JUMPI PUSH2 0x25E3 JUMPI POP POP POP JUMP JUMPDEST DUP3 GT PUSH2 0x2218 JUMPI MSTORE JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP12 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x25B0 JUMP JUMPDEST DUP3 DUP2 DUP2 SWAP7 SWAP4 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x2644 JUMPI JUMPDEST PUSH2 0x2629 DUP2 DUP4 PUSH2 0x2231 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24C JUMPI MLOAD SWAP1 DUP7 DUP3 AND DUP3 SUB PUSH2 0x7E0 JUMPI POP SWAP3 CODESIZE PUSH2 0x252F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x261F JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x265D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26D1 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2799 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND SWAP1 PUSH2 0x275B DUP3 ISZERO ISZERO PUSH2 0x2656 JUMP JUMPDEST DUP4 AND SWAP1 PUSH2 0x2769 DUP3 ISZERO ISZERO PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x2804 JUMPI JUMPDEST POP ISZERO SWAP1 DUP2 PUSH2 0x27EE JUMPI JUMPDEST POP PUSH2 0x279B JUMPI JUMPDEST POP PUSH2 0x2815 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27BE PUSH1 0x64 PUSH2 0x27AC PUSH1 0x1D SLOAD DUP8 PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0x27B4 PUSH2 0x2BF6 JUMP JUMPDEST POP DIV PUSH1 0x21 SLOAD PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x21 SSTORE PUSH2 0x27E5 ADDRESS BALANCE PUSH2 0x27CF DUP7 PUSH2 0x24AB JUMP JUMPDEST ADDRESS DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x64 PUSH2 0x1B8B PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x21 SSTORE CODESIZE PUSH2 0x2793 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x24 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x278D JUMP JUMPDEST DUP4 MSTORE POP PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 PUSH2 0x282C DUP4 ISZERO ISZERO PUSH2 0x2656 JUMP JUMPDEST AND SWAP2 PUSH2 0x2839 DUP4 ISZERO ISZERO PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x28B1 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0x2886 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 PUSH1 0x20 SWAP6 PUSH2 0xB38 PUSH2 0xB2F PUSH2 0x2A6C JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x28A1 DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0x2A57 JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP4 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x29EB JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x297E JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2A62 SWAP1 DUP3 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2358 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A79 DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x1E DUP3 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2AAD JUMPI POP JUMP JUMPDEST PUSH2 0x2ACC SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x20C0 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2ADA JUMPI DIV SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI PUSH1 0x1E DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x1E SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 PUSH1 0x1E SWAP2 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST SUB PUSH2 0x2B1C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 PUSH1 0x64 SWAP2 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 PUSH1 0xA SWAP2 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2BEF JUMPI DUP1 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP3 SUB PUSH2 0x21E3 JUMPI PUSH2 0x2B14 SWAP1 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2C03 DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x1A DUP3 MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CALL LOG0 0xED 0xCC PUSH27 0x52A47C82615094E790EBE5A3FB9DC62C8479E9C1CE783F3B9E7364 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "348:15445:0:-:0;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;4958:9;4954:83;;348:15445;4954:83;348:15445;4958:9;348:15445;;4993:32;348:15445;736:10:9;4993:32:0;;4954:83;348:15445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:28;348:15445;2697:28;;;348:15445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;;;-1:-1:-1;;;;;348:15445:0;;:::i;:::-;;;;11117:20;348:15445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;348:15445:0;;;;;4255:11:2;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;736:10:9;1781:66:1;736:10:9;;348:15445:0;;1789:7:1;348:15445:0;;;;;1781:66:1;:::i;:::-;12572:161:0;;348:15445;12743:241;;348:15445;12994:142;;348:15445;;;;;;;;;;;;;;;;;;;;;736:10:9;348:15445:0;;;13161:609;;348:15445;;;13161:609;;348:15445;;;;13161:609;;348:15445;;;;13161:609;;348:15445;;;;13161:609;;348:15445;;;;13161:609;;348:15445;;;;;;13161:609;;348:15445;;;;13161:609;;348:15445;;;;;;13161:609;;348:15445;;;;;;13161:609;;348:15445;;;;;;13161:609;;348:15445;;;;;13161:609;;348:15445;;;13161:609;;;348:15445;;;13146:9;348:15445;;;;;;;;;;;;13146:9;348:15445;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;348:15445:0;;;;;;-1:-1:-1;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;13146:9;348:15445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13146:9;348:15445;;;;;;;;;;;13787:36;;;;;;348:15445;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;12994:142;13039:29;12994:142;348:15445;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;12743:241;1789:7:1;12804:70:0;348:15445;;12804:51;348:15445;;12804:37;348:15445;;;;12804:37;:::i;:::-;:51;:::i;:70::-;12897:19;348:15445;12743:241;348:15445;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;12572:161;12640:16;12623:13;348:15445;12623:33;348:15445;12572:161;348:15445;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;-1:-1:-1;;348:15445:0;;;;5539:30;736:10:9;5513:9:0;348:15445;736:10:9;;348:15445:0;;1789:7:1;348:15445:0;;1781:66:1;348:15445:0;;;;;;1781:66:1;:::i;:::-;5394:21:0;348:15445;5386:55;348:15445;;;;;5386:55;:::i;:::-;-1:-1:-1;;348:15445:0;5394:21;348:15445;5513:9;;348:15445;5513:9;:::i;:::-;348:15445;5513:9;348:15445;;5539:30;348:15445;;;;;;;;;;;;;;;;736:10:9;348:15445:0;;;;1789:7:1;348:15445:0;;1781:66:1;348:15445:0;;;;;;1781:66:1;:::i;:::-;-1:-1:-1;;;;;348:15445:0;5636:64;348:15445;5667:16;348:15445;;5685:14;348:15445;5660:4;;5636:64;:::i;:::-;5711;348:15445;5742:16;348:15445;;5760:14;348:15445;5660:4;;5711:64;:::i;:::-;5786:54;348:15445;5817:11;348:15445;;;;5660:4;;5786:54;:::i;:::-;348:15445;;;;5868:43;:31;5685:14;348:15445;5760:14;348:15445;5868:31;;:::i;:::-;348:15445;;5868:43;;:::i;:::-;348:15445;;5685:14;348:15445;;5760:14;348:15445;;;;5667:16;348:15445;;5660:4;6049:21;6020:55;;;348:15445;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;:::i;:::-;;;;;;;;;;;;;;6137:19;348:15445;;;;;;6137:19;348:15445;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;599:32;348:15445;;;;;;;;;;;;;;;;;;;;;;;;;;2315:34;348:15445;;;;;;;;;;;;;;;;;;;;;;;2397:29;348:15445;;;;;;;;;;;;;;;;;;;;;;;4039:6:2;348:15445:0;;:::i;:::-;;;736:10:9;;4039:6:2;:::i;:::-;348:15445:0;;;;;;;;;;;;;;;;5178:32;5260:9;348:15445;5095:46;348:15445;5103:12;348:15445;;5095:46;:::i;:::-;5196:4;348:15445;;;;;;;;5178:32;:::i;:::-;348:15445;;:::i;:::-;;5215:3;5260:9;348:15445;;5260:9;:::i;:::-;5286:8;;;;348:15445;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;736:10:9;;348:15445:0;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;7059:35:2;;;;348:15445:0;;;;7189:37:2;348:15445:0;1548:5:8;348:15445:0;;1496:29:8;348:15445:0;;:::i;:::-;1504:6:8;;;;1496:29;:::i;:::-;1548:5;:::i;:::-;736:10:9;;7189:37:2;:::i;348:15445:0:-;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:10:9;;348:15445:0;;1789:7:1;348:15445:0;;1781:66:1;348:15445:0;;;;;;1781:66:1;:::i;:::-;1074:88:10;1096:9;348:15445:0;1082:30:10;;1074:88;:::i;:::-;348:15445:0;;;1257:16:10;348:15445:0;;;;;736:10:9;348:15445:0;;;;;;;;;;;;1458:22:10;1449:96;348:15445:0;-1:-1:-1;;;1458:22:10;;;:::i;:::-;348:15445:0;;;;1457:32:10;1449:96;:::i;:::-;348:15445:0;;;1257:16:10;348:15445:0;;;;;736:10:9;;348:15445:0;;;;;;;;;;;;;;736:10:9;14077:42:0;;;;348:15445;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;-1:-1:-1;;;;348:15445:0;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2433:34;348:15445;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1367:6:1;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;736:10:9;;348:15445:0;;1789:7:1;348:15445:0;;1781:66:1;348:15445:0;;;;;;1781:66:1;:::i;:::-;1074:88:10;1096:9;348:15445:0;1082:30:10;;1074:88;:::i;:::-;1449:96;348:15445:0;-1:-1:-1;;;1458:22:10;;;:::i;1449:96::-;348:15445:0;;;15569:16;348:15445;;;;;736:10:9;348:15445:0;;;;;;;;;;;;;;;;;15569:16;348:15445;;;;;736:10:9;;348:15445:0;;;;;;;;;;;;736:10:9;15741:41:0;;;;348:15445;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;1642:8:1;348:15445:0;;736:10:9;;2000:25:1;;348:15445:0;;2075:1:1;;348:15445:0;;;;;;;;2237:7:1;348:15445:0;;;;;;;;;;9322:15;;348:15445;;;9397:16;348:15445;;9391:22;;348:15445;;;9472:16;348:15445;;9466:22;;348:15445;;9547:11;348:15445;;9541:17;;348:15445;;9616:2;9609:9;;348:15445;;;;;9667:20;348:15445;;;;;;;;9758:29;348:15445;9748:39;;348:15445;;9881:15;;;;9901:3;9881:15;;;:::i;:::-;348:15445;;:::i;:::-;;;;9937:15;348:15445;;9955:15;348:15445;9937:33;;;;:::i;:::-;348:15445;9937:46;9973:10;348:15445;9937:46;;;:::i;:::-;9998:15;;;;348:15445;;;;;10047:29;9667:20;348:15445;;;10047:14;348:15445;10047:29;:::i;:::-;:14;348:15445;9994:970;348:15445;;;;;;;;9994:970;10151:24;;;;;;;;;;;:::i;:::-;348:15445;;;:::i;:::-;;3573:5:8;;;:::i;:::-;10239:24:0;;;;:::i;:::-;348:15445;;;:::i;:::-;;3573:5:8;;;:::i;:::-;10322:19:0;;;;:::i;:::-;348:15445;;;:::i;:::-;;3573:5:8;;;:::i;:::-;10400:37:0;;;;;:::i;:::-;348:15445;;:::i;:::-;;9901:3;348:15445;;10487:37;;;;;:::i;:::-;348:15445;;:::i;:::-;;9901:3;348:15445;;10569:32;;;;:::i;:::-;348:15445;;:::i;:::-;;9901:3;348:15445;;;;;;:::i;:::-;1496:29:8;;1504:6;;;;1496:29;:::i;:::-;1548:5;;;:::i;:::-;348:15445:0;;;:::i;:::-;1496:29:8;;1504:6;;;;1496:29;:::i;:::-;1548:5;;;:::i;:::-;348:15445:0;;;:::i;:::-;1496:29:8;;1504:6;;;;1496:29;:::i;:::-;1548:5;;;:::i;:::-;348:15445:0;10796:14;348:15445;10796:37;;;;:::i;:::-;:14;348:15445;10865:14;348:15445;10865:35;;;;:::i;:::-;:14;348:15445;;;10927:25;;;;:::i;:::-;348:15445;;9667:20;9994:970;;;348:15445;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;9547:11;348:15445;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:34;348:15445;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1647:93:0;348:15445;;;;;;;;;;;;;;;;;;;;;;;;1021:39;348:15445;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;;;-1:-1:-1;;;;;348:15445:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1847:88:0;348:15445;;;;;;;;;;;;;;;;;;;;;;2697:28;348:15445;;;;;;;;;;;;;;;;;;;;736:10:9;348:15445:0;;;;11273:22;348:15445;;;;;;11309:5;348:15445;;;;;;;;601:6:8;;348:15445:0;;11255:15;:60;11251:193;;348:15445;736:10:9;348:15445:0;;11489:23;348:15445;;;;;;11526:1;348:15445;;;;;;;;601:6:8;;348:15445:0;;736:10:9;348:15445:0;;11489:23;348:15445;;;;;;;;;;11583:19;348:15445;-1:-1:-1;348:15445:0;;11802:13;348:15445;11788:9;:28;348:15445;;736:10:9;12079:16:0;736:10:9;;;348:15445:0;;11917:20;348:15445;;;;;;736:10:9;12007:6:0;736:10:9;;11986:4:0;12007:6;:::i;:::-;736:10:9;348:15445:0;;11917:20;348:15445;;;;;;;;;;;12079:16;348:15445;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;11273:22;348:15445;-1:-1:-1;;;;;348:15445:0;;;;11251:193;736:10:9;348:15445:0;;11273:22;348:15445;;11255:15;348:15445;;;;11396:23;348:15445;;;;;;;11251:193;;348:15445;;;;;;;;;;;;;;6264:41:2;348:15445:0;;6264:41:2;348:15445:0;;:::i;:::-;736:10:9;;348:15445:0;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;6264:41:2;:::i;348:15445:0:-;;;;;;;;;;;;;;;;2617:33;348:15445;;;;;;;;;;;;;;;;;;;;;;;;3304:2:2;348:15445:0;;;;;;;;;;;;;;;;;;;2732:33;348:15445;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;736:10:9;348:15445:0;;;;;;;;;11767:37:2;;11763:239;;348:15445:0;;5649:6:2;;;;;;:::i;11763:239::-;11829:26;;;348:15445:0;;;;;;11950:28:2;1548:5:8;348:15445:0;;;5649:6:2;348:15445:0;1496:29:8;348:15445:0;;:::i;1548:5:8:-;736:10:9;11950:28:2;;:::i;:::-;11763:239;;;;;;;;348:15445:0;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2657:33;348:15445;;;;;;;;;;;;;;;;;;;;;;;3467:12:2;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;425:41:0;348:15445;;;;;;;;;;;;;;;;;;;;;;;;;;1074:88:10;1096:9;348:15445:0;1082:30:10;;1074:88;:::i;:::-;1458:22;;;:::i;:::-;348:15445:0;;;1449:96:10;348:15445:0;-1:-1:-1;;;348:15445:0;;;;;1457:32:10;1449:96;:::i;:::-;1470:7:1;348:15445:0;14222:17;;14263:27;;;;;;14586:57;;348:15445;;14740:22;;15314:24;14740:22;;:::i;:::-;348:15445;;;;;;;;;;;;;;;;;;14808:99;;14250:166;348:15445;;;;;;;;14917:82;;14250:166;348:15445;;;;;;15009:108;;14250:166;15131:24;;;;348:15445;;15127:173;;14250:166;15314:24;348:15445;;;;15310:98;;348:15445;;;15310:98;348:15445;-1:-1:-1;;;;;348:15445:0;;;2663:24:1;;;348:15445:0;;;;;;-1:-1:-1;;;;;348:15445:0;15314:24;348:15445;;;15314:24;348:15445;2778:44:1;;;;;15310:98:0;;;;348:15445;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;15127:173;8309:84;348:15445;;15188:26;;348:15445;15216:24;;;348:15445;1096:9:10;15242:19:0;;348:15445;14316:16;15263:24;;348:15445;;;8132:36;348:15445;;8179:34;348:15445;;8224:24;348:15445;;8259:34;348:15445;;;;;;;;;;;;;;;;;;8309:84;15127:173;;15009:108;8529:37;15082:22;348:15445;15082:22;;348:15445;;8483:30;348:15445;;;;;;8529:37;15009:108;;14917:82;7103:15;6928:4;6920:21;6969:14;;348:15445;6969:14;:::i;:::-;6928:4;348:15445;;;;;7058:3;7021:32;348:15445;;;;7021:32;:::i;:::-;348:15445;;:::i;:::-;;;7103:15;:::i;:::-;348:15445;6969:14;348:15445;14917:82;;14808:99;348:15445;8692:25;348:15445;;;;;;;8648:28;348:15445;;;;;;8648:28;348:15445;;;;;;8692:25;14808:99;;;;;348:15445;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;14292:3;348:15445;;;14316:16;348:15445;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;14312:93;;14292:3;-1:-1:-1;;348:15445:0;;;;;;14255:6;;348:15445;;;;;-1:-1:-1;;;;;348:15445:0;;;;14312:93;348:15445;;;;;;;;;14312:93;;;348:15445;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1747:93:0;348:15445;;;;;;;;;;;;;;;;;;;;;;;;4774:6:2;348:15445:0;;:::i;:::-;;;736:10:9;;4774:6:2;:::i;348:15445:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;-1:-1:-1;;;348:15445:0;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15445:0;;;;;887:27:10;348:15445:0;887:27:10;;;;;348:15445:0;;887:27:10;348:15445:0;;;;;;;;887:27:10;;;348:15445:0;;;887:27:10;;;;;348:15445:0;;887:27:10;;;;348:15445:0;887:27:10;;;;348:15445:0;887:27:10;;;;348:15445:0;887:27:10;;348:15445:0;887:27:10;;;;348:15445:0;887:27:10;;348:15445:0;;;-1:-1:-1;;;;;348:15445:0;;;;;;;-1:-1:-1;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:9:10;348:15445:0;;;;;;;;1096:9:10;-1:-1:-1;348:15445:0;;;;;-1:-1:-1;348:15445:0;:::o;:::-;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8733:402::-;-1:-1:-1;;;;;348:15445:0;;8835:15;348:15445;;-1:-1:-1;8853:24:0;-1:-1:-1;8820:4:0;;348:15445;;;;;;;;;8820:4;;8853:24;:::i;:::-;8835:15;348:15445;;9057:15;9077:3;9057:15;348:15445;9057:15;;348:15445;;;9057:15;601:6:8;;348:15445:0;;;8889:203;348:15445;;;;8889:203;;;;;348:15445;8889:203;;8820:4;8889:203;;;348:15445;;;;;;;;;;;;;;;8820:4;348:15445;;;;;;;;8889:203;;;;;;;;8733:402;348:15445;;;9108:19;348:15445;;;;;;9108:19;8733:402::o;8889:203::-;;;;;;;;;;;;;;:::i;:::-;;;348:15445;;;;8889:203;;;;;;;;;348:15445;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;7504:475;348:15445;;;;;;;;;;;;;;;;;;;;7608:1;348:15445;;;;;;;;;;;;;;;;7639:4;348:15445;;-1:-1:-1;;;;;348:15445:0;;7665:15;348:15445;;;;;7665:22;348:15445;7665:22;;;;;;;;;;;;;;-1:-1:-1;7665:22:0;;;7504:475;348:15445;;;7660:1;;348:15445;;;;;;7750:11;348:15445;;;;;;;;;7639:4;7750:11;:::i;:::-;348:15445;7665:15;348:15445;;7775:196;;;;;;348:15445;;;;;;;;7775:196;;;348:15445;7775:196;;348:15445;;;7775:196;7665:22;7775:196;;348:15445;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;7639:4;;;;;;;;-1:-1:-1;7639:4:0;;;;348:15445;;;;7945:15;348:15445;;;;7775:196;;;;;;;;;;7504:475;;;:::o;7775:196::-;348:15445;;;;;7504:475::o;7775:196::-;348:15445;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;-1:-1:-1;348:15445:0;;;;;;;;;;;;;;7665:22;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15445;;;;;;;;;;;;;7665:22;;;;;;;;;;;348:15445;;;-1:-1:-1;348:15445:0;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;6172:664;;6821:6;6172:664;;-1:-1:-1;;;;;348:15445:0;;;6304:18;6296:68;6304:18;;;6296:68;:::i;:::-;348:15445;;6383:16;6375:64;6383:16;;;6375:64;:::i;:::-;6320:1;348:15445;;;;6467:19;348:15445;;;;;;;;6467:52;;;;;6172:664;6465:55;;6537:42;;;;6172:664;6533:252;;;6172:664;6821:6;;:::i;:::-;6172:664::o;6533:252::-;6690:35;6654:3;6622:27;6633:15;348:15445;6622:27;;:::i;:::-;348:15445;;:::i;:::-;;;6690:14;348:15445;6690:35;:::i;:::-;:14;348:15445;7445:15;7272:4;7264:21;7313:12;;;:::i;:::-;7272:4;348:15445;;;;;6654:3;7363:32;348:15445;;;;7363:32;:::i;7445:15::-;6690:14;348:15445;6533:252;;;6537:42;348:15445;;-1:-1:-1;6548:25:0;348:15445;;;;;;;;6537:42;;;6467:52;348:15445;;-1:-1:-1;348:15445:0;;;;;;6467:52;;;7736:837:2;-1:-1:-1;;;;;348:15445:0;;;7867:18:2;7859:68;7867:18;;;7859:68;:::i;:::-;348:15445:0;7946:16:2;7938:64;7946:16;;;7938:64;:::i;:::-;7883:1;348:15445:0;;;;;;;;;;;;8122:21:2;;;348:15445:0;;;;;1548:5:8;8489:26:2;348:15445:0;;;1496:29:8;348:15445:0;;:::i;1548:5:8:-;348:15445:0;;;;;;;;;;;;;;8439:25:2;348:15445:0;;;;;8439:25:2;:::i;:::-;348:15445:0;;;;;;;;;;;;;8489:26:2;7736:837::o;348:15445:0:-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;10894:380:2;-1:-1:-1;;;;;348:15445:0;;;11030:19:2;;;348:15445:0;;;11109:21:2;;;348:15445:0;;;11234:32:2;348:15445:0;;11047:1:2;348:15445:0;11182:11:2;348:15445:0;;;11047:1:2;348:15445:0;;11047:1:2;348:15445:0;;;;;11047:1:2;348:15445:0;;;;;;;11234:32:2;10894:380::o;348:15445:0:-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;487:181:8;;577:5;487:181;577:5;;:::i;:::-;601:6;;;348:15445:0;;487:181:8;:::o;348:15445:0:-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;348:15445:0;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;348:15445:0;;;;;;;;1841:471:8;2144:6;;2140:47;;7050:2:0;348:15445;;;;;;7050:2;348:15445;;;2235:5:8;7050:2:0;2235:5:8;;;:::i;:::-;:10;348:15445:0;;1841:471:8;:::o;348:15445:0:-;;;;-1:-1:-1;;;;;348:15445:0;;;;;;;;;;;;;;;;;;;;;;;2140:47:8;2167:8;2149:1;2167:8;:::o;1841:471::-;2144:6;;2140:47;;9901:3:0;348:15445;;;;;;9901:3;348:15445;;;2235:5:8;9901:3:0;2235:5:8;;;:::i;1841:471::-;2144:6;;2140:47;;5207:2:0;348:15445;;;;;;5207:2;348:15445;;;2235:5:8;5207:2:0;2235:5:8;;;:::i;1841:471::-;;2144:6;;2140:47;;348:15445:0;;;;;;;;;;;2235:5:8;;;;:::i;2140:47::-;2167:8;;2149:1;2167:8;:::o;348:15445:0:-;;;;;;;:::i;:::-;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2273000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_poolHeisenDev()": "629",
								"_poolLiquidity()": "585",
								"_poolMarketing()": "541",
								"_poolTeam()": "695",
								"addressHeisenDev()": "858",
								"addressMarketing()": "528",
								"addressTeam()": "792",
								"allowance(address,address)": "1622",
								"approve(address,uint256)": "22430",
								"approveProposal(uint256)": "24099",
								"balanceOf(address)": "1001",
								"buy()": "infinite",
								"decimals()": "401",
								"decreaseAllowance(address,uint256)": "infinite",
								"executeProposal(uint256)": "infinite",
								"firstLiquidity(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "23172",
								"name()": "infinite",
								"owner()": "946",
								"proposals(uint256)": "2615",
								"revokeProposal(uint256)": "24008",
								"salesEnabled()": "1081",
								"submitProposal(bool,bool,bool,bool,uint256,bool,uint256,uint256,uint256,uint256,bool,address)": "infinite",
								"symbol()": "infinite",
								"taxFeeHeisenDev()": "1047",
								"taxFeeLiquidity()": "893",
								"taxFeeMarketing()": "805",
								"taxFeeTeam()": "1025",
								"teamPayment()": "infinite",
								"totalSupply()": "519",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"uniswapV2Router()": "572",
								"withdraw()": "infinite",
								"withdrawAllowance(address)": "1437",
								"withdrawAuthorization(address,uint256,uint256)": "infinite",
								"withdrawPrice()": "761"
							},
							"internal": {
								"_getApprovalCount(uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"addLiquidity(uint256,uint256)": "infinite",
								"isUnderDailyWithdrawalLimit(address)": "infinite",
								"swapAndAddLiquidity()": "infinite",
								"swapAndAddLiquidityTokens(uint256)": "infinite",
								"swapTokensForEth(uint256)": "infinite",
								"updateSalesStatus(bool)": "infinite",
								"updateTaxesFees(uint256,uint256,uint256,uint256)": "infinite",
								"updateWithdrawOptions(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "5377697368466973680000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "5346480000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9C064737B570A74C2BAC5D21056D93AC53115214216CD14D4A0FC9B60BE81231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 569,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 569,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 626,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 626,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1060,
									"name": "PUSH",
									"source": 0,
									"value": "11C37937E08000"
								},
								{
									"begin": 1049,
									"end": 1060,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1106,
									"end": 1107,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1152,
									"end": 1153,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1208,
									"end": 1220,
									"name": "PUSH",
									"source": 0,
									"value": "152D02C7E14AF6800000"
								},
								{
									"begin": 1208,
									"end": 1220,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1697,
									"end": 1739,
									"name": "PUSH",
									"source": 0,
									"value": "EDA73409D4BBD147F4E1295A73A2CA243A529338"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1689,
									"end": 1740,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1689,
									"end": 1740,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1797,
									"end": 1839,
									"name": "PUSH",
									"source": 0,
									"value": "3C1CD83D8850803C9C42FF5083F56B66B00FBD61"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1789,
									"end": 1840,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1789,
									"end": 1840,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1892,
									"end": 1934,
									"name": "PUSH",
									"source": 0,
									"value": "63024AC73FE77427F20E8247FA26F470C0D9700B"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1884,
									"end": 1935,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1884,
									"end": 1935,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2348,
									"end": 2349,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2425,
									"end": 2426,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2466,
									"end": 2467,
									"name": "PUSH",
									"source": 0,
									"value": "1D"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2649,
									"end": 2650,
									"name": "PUSH",
									"source": 0,
									"value": "1E"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2764,
									"end": 2765,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "C45A015500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3651,
									"end": 3693,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 3651,
									"end": 3693,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 3651,
									"end": 3693,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 3651,
									"end": 3693,
									"name": "PUSH",
									"source": 0,
									"value": "9AC64CC6E4415144C455BD8E4837FEA55603E5C3"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "AD5C464800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "28"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "C9C6539600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "32"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4169,
									"end": 4190,
									"name": "PUSH",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 4475,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 4504,
									"end": 4511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3849,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3849,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3955,
									"end": 3974,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1689,
									"end": 1740,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1789,
									"end": 1840,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1884,
									"end": 1935,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4446,
									"end": 4453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4475,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4475,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4504,
									"end": 4511,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 4504,
									"end": 4511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2663,
									"end": 2687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2663,
									"end": 2687,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2663,
									"end": 2687,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2741,
									"end": 2762,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2741,
									"end": 2762,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 569,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8944,
									"end": 8965,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9326,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 9091,
									"end": 9115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 9273,
									"end": 9303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9326,
									"end": 9363,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 9326,
									"end": 9363,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "6464726573730000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3730,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 4504,
									"end": 4511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 4169,
									"end": 4190,
									"name": "PUSH",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 4475,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP13",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "SWAP12",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3730,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3812,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 3812,
									"end": 3835,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3748,
									"end": 3774,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "7F"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 3272,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2942,
									"end": 3272,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3007,
									"end": 3029,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3007,
									"end": 3029,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 3028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3095,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3095,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "10000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9C064737B570A74C2BAC5D21056D93AC53115214216CD14D4A0FC9B60BE81231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3222,
									"end": 3264,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 3272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4F776E61626C653A204F776E6572206973206E6F7420756E6971756500000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4F776E61626C653A204F776E657220697320746865207A65726F206164647265"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "7373000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 487,
									"end": 668,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 487,
									"end": 668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 487,
									"end": 668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 601,
									"end": 607,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 601,
									"end": 607,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 487,
									"end": 668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 487,
									"end": 668,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "tag",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15793,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9f1a0edcc7a52a47c82615094e790ebe5a3fb9dc62c8479e9c1ce783f3b9e7364736f6c63430008110033",
									".code": [
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4967,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4954,
											"end": 5037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 5037,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4954,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4967,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5025,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 5037,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "ABDC640"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "D61B519"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1694505E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1B45A47A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "2A9AF7BA"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "39262773"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "553000C1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "562E9DF9"
										},
										{
											"begin": 2697,
											"end": 2725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2697,
											"end": 2725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7918447E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7A594A2B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7D81936C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "8198C341"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "85A6A091"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "933F5E07"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "98951B56"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A6F2AE3A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "B6BBA0AE"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C4CE220B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C84AD9A5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "D7196DD9"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "D8A0F828"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "DCE165A6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FE7441E7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4266,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12572,
											"end": 12733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12743,
											"end": 12984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12994,
											"end": 13136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13155,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13155,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF00000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13155,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13155,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13823,
											"name": "PUSH",
											"source": 0,
											"value": "96AA03A7CD4ABA017B05CE697DF0E528A91D045A01285C50E931B0C0C4939CE"
										},
										{
											"begin": 13787,
											"end": 13823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13823,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13136,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12994,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13039,
											"end": 13068,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A206E6577206F776E657220"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "697320746865207A65726F206164647265737300000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12984,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12743,
											"end": 12984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 12804,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12804,
											"end": 12841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12841,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12804,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12804,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12874,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12804,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12897,
											"end": 12916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A204D757374206B65657020"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6665657320617420313025206F72206C65737300000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12572,
											"end": 12733,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12572,
											"end": 12733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12640,
											"end": 12656,
											"name": "PUSH",
											"source": 0,
											"value": "11C37937E08000"
										},
										{
											"begin": 12623,
											"end": 12636,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12623,
											"end": 12656,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12572,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A204D757374206B65657020"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3530303030303030303030303030303020576569206F72206C65737300000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5569,
											"name": "PUSH",
											"source": 0,
											"value": "C5D4FBADDD2087D369F5CF16AD7544F41EF0DC291B510E4CB1CB6E6EAAE74539"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5415,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5386,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5386,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5386,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5386,
											"end": 5441,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5386,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5415,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5513,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5569,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5683,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5636,
											"end": 5700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5700,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5636,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5711,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5775,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5711,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5817,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5786,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5840,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5786,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5868,
											"end": 5899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5868,
											"end": 5911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5911,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5868,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5683,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6070,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6075,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6075,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "21A3A3648D0B2AFC084ACD733D71600B506FA4ECA7EF1F5E24718C5E17F4E7FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4661696C656420746F2073656E6420424E420000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 599,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4039,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5095,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5095,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5095,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5095,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5095,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5200,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5178,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5210,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5178,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5218,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5260,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "6CD8C20496FA31DBA3F83C7ADCA278C356A6CAA5529741A5D2B9B774613C198B"
										},
										{
											"begin": 5286,
											"end": 5294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5294,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1074,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1449,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 14077,
											"end": 14119,
											"name": "PUSH",
											"source": 0,
											"value": "12C8D6025943157CBCB4E904B3E3D97D2AC7EAE9F61F343B2E7CB23BE24BDBB7"
										},
										{
											"begin": 14077,
											"end": 14119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14119,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2061"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6C72656164792077617320617070726F766564206279206F776E657200000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1074,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 15741,
											"end": 15782,
											"name": "PUSH",
											"source": 0,
											"value": "B8B1CBDD07C030BED9E01F4EE5465E3A3FD2AA8F7135C84467C0F3CF203925EB"
										},
										{
											"begin": 15741,
											"end": 15782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15741,
											"end": 15782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15741,
											"end": 15782,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2050726F706F73616C2069"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "73206E6F7420617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9397,
											"end": 9413,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9413,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9472,
											"end": 9488,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9488,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9541,
											"end": 9558,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9541,
											"end": 9558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9616,
											"end": 9618,
											"name": "PUSH",
											"source": 0,
											"value": "4B"
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9758,
											"end": 9787,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9748,
											"end": 9787,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9748,
											"end": 9787,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9881,
											"end": 9896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 9881,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 9970,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9937,
											"end": 9970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9970,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9937,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9970,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9937,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 9973,
											"end": 9983,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9983,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9937,
											"end": 9983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9937,
											"end": 9983,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 9937,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 9998,
											"end": 10013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10047,
											"end": 10076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10076,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 10047,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10151,
											"end": 10175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10239,
											"end": 10263,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10239,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 10239,
											"end": 10263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10239,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10239,
											"end": 10263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10239,
											"end": 10263,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 10239,
											"end": 10263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10322,
											"end": 10341,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 10322,
											"end": 10341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10322,
											"end": 10341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10341,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 10322,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10400,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 10400,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10487,
											"end": 10524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 10487,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 10569,
											"end": 10601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10569,
											"end": 10601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10601,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 10569,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10810,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10796,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10810,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 10865,
											"end": 10900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10865,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10900,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 10865,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10927,
											"end": 10952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9994,
											"end": 10964,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "416D6F756E742063616E2774206578636565647320746865206D617820747261"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6E73616374696F6E20776974686472617720616D6F756E740000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "55736572206861732070656E64696E67205769746864726177616C7300000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "546865206665652063616E6E6F74206578636565642037352500000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "5465616D2063616E2774206D616B65207769746864726177616C730000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "536B796C65722063616E2774206D616B65207769746864726177616C73000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "48656973656E2063616E2774206D616B65207769746864726177616C73000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4261636B656E642063616E2774206D616B65207769746864726177616C730000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E6572732063616E2774206D616B65207769746864726177616C73000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206261636B65"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6E64000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2390,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11309,
											"end": 11314,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11255,
											"end": 11270,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11255,
											"end": 11315,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 11251,
											"end": 11444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11489,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11489,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11583,
											"end": 11602,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11815,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11788,
											"end": 11797,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11788,
											"end": 11816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12079,
											"end": 12095,
											"name": "PUSH",
											"source": 0,
											"value": "5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12007,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12095,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "54686520616D6F756E742073656E74206973206E6F7420657175616C20746F20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "74686520424E4220616D6F756E7420726571756972656420666F722077697468"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6472617700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "596F752063616E6E6F74206D616B65206D6F7265207468616E206F6E65207769"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "746864726177616C207065722064617900000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11444,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 11251,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11255,
											"end": 11270,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11396,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 11251,
											"end": 11444,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6264,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2765,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5649,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11950,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1074,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1449,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14222,
											"end": 14239,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14222,
											"end": 14239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14586,
											"end": 14643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14586,
											"end": 14643,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 15314,
											"end": 15338,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14740,
											"end": 14762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14740,
											"end": 14762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 14740,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14917,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 14917,
											"end": 14999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 15009,
											"end": 15117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15131,
											"end": 15155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15131,
											"end": 15155,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15131,
											"end": 15155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15131,
											"end": 15155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15127,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 15127,
											"end": 15300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 14250,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15314,
											"end": 15338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15314,
											"end": 15338,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15314,
											"end": 15338,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15127,
											"end": 15300,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 15127,
											"end": 15300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "AC9D517045A5EC57DA9F145E5C349535857BAA98B41FA00AEA81886B40B65EE9"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15188,
											"end": 15214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15188,
											"end": 15214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15240,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15242,
											"end": 15261,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14332,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15263,
											"end": 15287,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15263,
											"end": 15287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8132,
											"end": 8168,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8179,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8224,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8293,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8393,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15127,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 15127,
											"end": 15300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15117,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 15009,
											"end": 15117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8566,
											"name": "PUSH",
											"source": 0,
											"value": "7752C7A6D518AB1CF03B50E7D7FD3DA3258EB319DC343789E0A7BED06C43066C"
										},
										{
											"begin": 15082,
											"end": 15104,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15082,
											"end": 15104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15082,
											"end": 15104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8513,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8566,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 15009,
											"end": 15117,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14917,
											"end": 14999,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 14917,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 6928,
											"end": 6932,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6941,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6969,
											"end": 6983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6932,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7021,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7021,
											"end": 7053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7053,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 7021,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7103,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14917,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 14917,
											"end": 14999,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 8692,
											"end": 8717,
											"name": "PUSH",
											"source": 0,
											"value": "1B48326D6E9158A921C6006B9D6AD4B9D777C488E9B7924B3E0C8B0B1304604"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8648,
											"end": 8676,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8648,
											"end": 8676,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8692,
											"end": 8717,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 14808,
											"end": 14907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A20617070726F76616C7320"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6973206C657373207468616E2072657175697265640000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14292,
											"end": 14295,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 14292,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14332,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14292,
											"end": 14295,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 14292,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 14312,
											"end": 14405,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1747,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4774,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB7"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "50726573616C652069736E277420656E61626C65640000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420616E206F776E657200"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 9135,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8733,
											"end": 9135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8853,
											"end": 8877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9080,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 9057,
											"end": 9072,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9072,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9072,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "F305D71900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 9135,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 8733,
											"end": 9135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "PUSH",
											"source": 0,
											"value": "FDB748C915E4E67B4BB23287BF4295A4595CE48B50343214369F72CCFB974CFA"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 9135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8889,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 8889,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "2D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2064"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6F6573206E6F7420657869737400000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2077"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "617320616C726561647920657865637574656400000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7680,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C464800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7761,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 7750,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7680,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "791AC94700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 7775,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7665,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6296,
											"end": 6364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6364,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 6296,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 6383,
											"end": 6399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6375,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6439,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 6375,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 6172,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6821,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6622,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 6633,
											"end": 6648,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6649,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6622,
											"end": 6649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6649,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 6622,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6690,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6725,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 6690,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 7285,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7313,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7363,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7363,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 6533,
											"end": 6785,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6573,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 6537,
											"end": 6579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "571"
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 7859,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "tag",
											"source": 2,
											"value": "571"
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "572"
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 7938,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "tag",
											"source": 2,
											"value": "572"
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "578"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 8439,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "tag",
											"source": 2,
											"value": "578"
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10894,
											"end": 11274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 487,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 577,
											"end": 582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 577,
											"end": 582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 7050,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								},
								"9C064737B570A74C2BAC5D21056D93AC53115214216CD14D4A0FC9B60BE81231": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_poolHeisenDev()": "39262773",
							"_poolLiquidity()": "2a9af7ba",
							"_poolMarketing()": "1b45a47a",
							"_poolTeam()": "553000c1",
							"addressHeisenDev()": "7a594a2b",
							"addressMarketing()": "0abdc640",
							"addressTeam()": "562e9df9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveProposal(uint256)": "98951b56",
							"balanceOf(address)": "70a08231",
							"buy()": "a6f2ae3a",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"executeProposal(uint256)": "0d61b519",
							"firstLiquidity(uint256)": "d8a0f828",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proposals(uint256)": "013cf08b",
							"revokeProposal(uint256)": "85a6a091",
							"salesEnabled()": "c84ad9a5",
							"submitProposal(bool,bool,bool,bool,uint256,bool,uint256,uint256,uint256,uint256,bool,address)": "dce165a6",
							"symbol()": "95d89b41",
							"taxFeeHeisenDev()": "c4ce220b",
							"taxFeeLiquidity()": "933f5e07",
							"taxFeeMarketing()": "7d81936c",
							"taxFeeTeam()": "b6bba0ae",
							"teamPayment()": "d7196dd9",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"uniswapV2Router()": "1694505e",
							"withdraw()": "3ccfd60b",
							"withdrawAllowance(address)": "fe7441e7",
							"withdrawAuthorization(address,uint256,uint256)": "8198c341",
							"withdrawPrice()": "7918447e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backend\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BuyEgg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnb\",\"type\":\"uint256\"}],\"name\":\"FirstLiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnb\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"SalesState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TeamPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeHeisenDev\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeTeam\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeLiquidity\",\"type\":\"uint256\"}],\"name\":\"UpdateTaxesFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"}],\"name\":\"UpdateWithdrawOptions\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_poolHeisenDev\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressHeisenDev\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressMarketing\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressTeam\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"approveProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"firstLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"revokeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_updateEggSales\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_backendAddress\",\"type\":\"address\"}],\"name\":\"submitProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeHeisenDev\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"withdrawAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"HeisenDev\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"SwishFish Contract for SwishFish Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_poolHeisenDev()\":{\"notice\":\"Definition of pools `_poolHeisenDev` `_poolMarketing` `_poolTeam` `_poolLiquidity`\"},\"addressHeisenDev()\":{\"notice\":\"Definition of the Project Wallets `addressHeisenDev` Corresponds to the wallet address where the development team will receive their payments `addressMarketing` Corresponds to the wallet address where the funds for marketing will be received `addressTeam` Represents the wallet where teams and other collaborators will receive their payments\"},\"taxFeeHeisenDev()\":{\"notice\":\"Definition of the taxes fees for swaps `taxFeeHeisenDev` 2%  Initial tax fee during presale `taxFeeMarketing` 3%  Initial tax fee during presale `taxFeeTeam` 3%  Initial tax fee during presale `taxFeeLiquidity` 2%  Initial tax fee during presale This value can be modified by the method {updateTaxesFees}\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SwishFishToken.sol\":\"SwishFish\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"SwishFishToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// SwishFish Contract (SwishFishToken.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./contracts/ERC20.sol\\\";\\r\\nimport \\\"./access/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/IUniswapV2Factory.sol\\\";\\r\\nimport \\\"./interfaces/IUniswapV2Router02.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title SwishFish Contract for SwishFish Token\\r\\n * @author HeisenDev\\r\\n */\\r\\ncontract SwishFish is ERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    IUniswapV2Router02 public uniswapV2Router;\\r\\n\\r\\n    /**\\r\\n     * Definition of the token parameters\\r\\n     */\\r\\n    uint private _tokenTotalSupply = 1000000000 * 10 ** 18;\\r\\n\\r\\n    bool public salesEnabled = false;\\r\\n    bool private firstLiquidityEnabled = true;\\r\\n\\r\\n\\r\\n    mapping(address => uint256) private _authorizedWithdraws;\\r\\n    mapping(address => uint256) private _accountTransactionLast;\\r\\n    mapping(address => uint256) private _accountTransactionCount;\\r\\n    mapping(address => uint256) private _accountWithdrawalLast;\\r\\n    mapping(address => uint256) private _accountWithdrawalCount;\\r\\n\\r\\n\\r\\n    uint public withdrawPrice = 0.005 ether;\\r\\n    uint256 private _maxTransactionCount = 1;\\r\\n    uint256 private _maxWithdrawalCount = 1;\\r\\n    uint256 private _maxTransactionWithdrawAmount = 100000 ether;\\r\\n\\r\\n    /**\\r\\n     * Definition of the Project Wallets\\r\\n     * `addressHeisenDev` Corresponds to the wallet address where the development\\r\\n     * team will receive their payments\\r\\n     * `addressMarketing` Corresponds to the wallet address where the funds\\r\\n     * for marketing will be received\\r\\n     * `addressTeam` Represents the wallet where teams and other\\r\\n     * collaborators will receive their payments\\r\\n     */\\r\\n\\r\\n    address payable public addressHeisenDev = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338);\\r\\n    address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61);\\r\\n    address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B);\\r\\n\\r\\n    /**\\r\\n     * Definition of the taxes fees for swaps\\r\\n     * `taxFeeHeisenDev` 2%  Initial tax fee during presale\\r\\n     * `taxFeeMarketing` 3%  Initial tax fee during presale\\r\\n     * `taxFeeTeam` 3%  Initial tax fee during presale\\r\\n     * `taxFeeLiquidity` 2%  Initial tax fee during presale\\r\\n     * This value can be modified by the method {updateTaxesFees}\\r\\n     */\\r\\n    uint256 public taxFeeHeisenDev = 2;\\r\\n    uint256 public taxFeeMarketing = 3;\\r\\n    uint256 public taxFeeTeam = 3;\\r\\n    uint256 public taxFeeLiquidity = 2;\\r\\n\\r\\n    /**\\r\\n     * Definition of pools\\r\\n     * `_poolHeisenDev`\\r\\n     * `_poolMarketing`\\r\\n     * `_poolTeam`\\r\\n     * `_poolLiquidity`\\r\\n     */\\r\\n    uint256 public _poolHeisenDev = 0;\\r\\n    uint256 public _poolMarketing = 0;\\r\\n    uint256 public _poolTeam = 0;\\r\\n    uint256 public _poolLiquidity = 0;\\r\\n\\r\\n    mapping(address => bool) private _isExcludedFromFees;\\r\\n    mapping(address => bool) private _isExcludedFromLimits;\\r\\n    mapping(address => bool) private automatedMarketMakerPairs;\\r\\n\\r\\n    event Deposit(address indexed sender, uint amount);\\r\\n    event BuyEgg();\\r\\n    event SalesState(bool status);\\r\\n    event Withdraw(uint amount);\\r\\n    event TeamPayment(uint amount);\\r\\n    event FirstLiquidityAdded(\\r\\n        uint256 bnb\\r\\n    );\\r\\n    event LiquidityAdded(\\r\\n        uint256 bnb\\r\\n    );\\r\\n    event UpdateTaxesFees(\\r\\n        uint256 taxFeeHeisenDev,\\r\\n        uint256 taxFeeMarketing,\\r\\n        uint256 taxFeeTeam,\\r\\n        uint256 taxFeeLiquidity\\r\\n    );\\r\\n    event UpdateWithdrawOptions(\\r\\n        uint256 withdrawPrice\\r\\n    );\\r\\n    constructor(address _owner1, address _owner2, address _owner3, address _backend) {\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\\r\\n        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\r\\n        .createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n\\r\\n        automatedMarketMakerPairs[_uniswapV2Pair] = true;\\r\\n        _isExcludedFromFees[address(this)] = true;\\r\\n        _isExcludedFromFees[addressHeisenDev] = true;\\r\\n        _isExcludedFromFees[addressMarketing] = true;\\r\\n        _isExcludedFromFees[addressTeam] = true;\\r\\n\\r\\n        _isExcludedFromLimits[address(this)] = true;\\r\\n        _isExcludedFromLimits[_uniswapV2Pair] = true;\\r\\n        /*\\r\\n            _setOwners is an internal function in Ownable.sol that is only called here,\\r\\n            and CANNOT be called ever again\\r\\n        */\\r\\n        _addOwner(_owner1);\\r\\n        _addOwner(_owner2);\\r\\n        _addOwner(_owner3);\\r\\n        /*\\r\\n            _transferBackend is an internal function in Ownable.sol\\r\\n        */\\r\\n        _transferBackend(_backend);\\r\\n        /*\\r\\n            _mint is an internal function in ERC20.sol that is only called here,\\r\\n            and CANNOT be called ever again\\r\\n        */\\r\\n        _mint(address(this), _tokenTotalSupply);\\r\\n    }\\r\\n\\r\\n    /// @dev Fallback function allows to deposit ether.\\r\\n    receive() external payable {\\r\\n        if (msg.value > 0) {\\r\\n            emit Deposit(_msgSender(), msg.value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function buy() external payable {\\r\\n        require(salesEnabled, \\\"Presale isn't enabled\\\");\\r\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(10).div(100);\\r\\n        addLiquidity(liquidityTokens, msg.value);\\r\\n        emit BuyEgg();\\r\\n    }\\r\\n    function firstLiquidity(uint256 tokens) external payable onlyOwner {\\r\\n        require(firstLiquidityEnabled, \\\"Presale isn't enabled\\\");\\r\\n        firstLiquidityEnabled = false;\\r\\n        addLiquidity(tokens, msg.value);\\r\\n        emit FirstLiquidityAdded(msg.value);\\r\\n    }\\r\\n    function teamPayment() external onlyOwner {\\r\\n        super._transfer(address(this), addressHeisenDev, _poolHeisenDev);\\r\\n        super._transfer(address(this), addressMarketing, _poolMarketing);\\r\\n        super._transfer(address(this), addressTeam, _poolTeam);\\r\\n        uint256 amount = _poolHeisenDev + _poolMarketing + _poolTeam;\\r\\n        _poolHeisenDev = 0;\\r\\n        _poolMarketing = 0;\\r\\n        _poolTeam = 0;\\r\\n        (bool sent, ) = addressHeisenDev.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send BNB\\\");\\r\\n        emit TeamPayment(amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal override {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        bool takeFee = !(_isExcludedFromFees[from] || _isExcludedFromFees[to]);\\r\\n\\r\\n        if (takeFee && automatedMarketMakerPairs[from]) {\\r\\n            uint256 liquidityAmount = amount.mul(taxFeeLiquidity).div(100);\\r\\n            _poolLiquidity = _poolLiquidity.add(liquidityAmount);\\r\\n            swapAndAddLiquidityTokens(amount);\\r\\n        }\\r\\n        super._transfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    function swapAndAddLiquidity() private {\\r\\n        uint256 contractBalance = address(this).balance;\\r\\n        swapTokensForEth(_poolLiquidity);\\r\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\\r\\n        addLiquidity(liquidityTokens, contractBalance);\\r\\n        _poolLiquidity = 0;\\r\\n    }\\r\\n    function swapAndAddLiquidityTokens(uint256 _tokenAmount) private {\\r\\n        uint256 contractBalance = address(this).balance;\\r\\n        swapTokensForEth(_tokenAmount);\\r\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\\r\\n        addLiquidity(liquidityTokens, contractBalance);\\r\\n        _poolLiquidity = 0;\\r\\n    }\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateTaxesFees(uint256 _heisenVerseTaxFee, uint256 _marketingTaxFee, uint256 _teamTaxFee, uint256 _liquidityTaxFee) private {\\r\\n        taxFeeHeisenDev = _heisenVerseTaxFee;\\r\\n        taxFeeMarketing = _marketingTaxFee;\\r\\n        taxFeeTeam = _teamTaxFee;\\r\\n        taxFeeLiquidity = _liquidityTaxFee;\\r\\n        emit UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee);\\r\\n    }\\r\\n\\r\\n    function updateWithdrawOptions(uint256 _withdrawPrice) private {\\r\\n        withdrawPrice = _withdrawPrice;\\r\\n        emit UpdateWithdrawOptions(_withdrawPrice);\\r\\n    }\\r\\n\\r\\n    function updateSalesStatus(bool _salesEnabled) private {\\r\\n        salesEnabled = _salesEnabled;\\r\\n        emit SalesState(_salesEnabled);\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokens, uint256 bnb) private {\\r\\n        _approve(address(this), address(uniswapV2Router), balanceOf(address(this)));\\r\\n        uniswapV2Router.addLiquidityETH{value : bnb}(\\r\\n            address(this),\\r\\n            tokens,\\r\\n            0,\\r\\n            0,\\r\\n            address(this),\\r\\n            block.timestamp.add(300)\\r\\n        );\\r\\n        emit LiquidityAdded(bnb);\\r\\n    }\\r\\n\\r\\n    function withdrawAuthorization(address to, uint256 amount, uint256 fee) external onlyBackend {\\r\\n        require(!isAnOwner(to), \\\"Owners can't make withdrawals\\\");\\r\\n        require(to != backend(), \\\"Backend can't make withdrawals\\\");\\r\\n        require(to != addressHeisenDev, \\\"Heisen can't make withdrawals\\\");\\r\\n        require(to != addressMarketing, \\\"Skyler can't make withdrawals\\\");\\r\\n        require(to != addressTeam, \\\"Team can't make withdrawals\\\");\\r\\n        require(fee <= 75, \\\"The fee cannot exceed 75%\\\");\\r\\n        require(_authorizedWithdraws[to] == 0, \\\"User has pending Withdrawals\\\");\\r\\n        require(amount <= _maxTransactionWithdrawAmount, \\\"Amount can't exceeds the max transaction withdraw amount\\\");\\r\\n\\r\\n        uint256 amountFee = amount.mul(fee).div(100);\\r\\n        uint256 totalTaxes = taxFeeHeisenDev + taxFeeMarketing + taxFeeTeam;\\r\\n        if (totalTaxes == 0) {\\r\\n            _poolHeisenDev = _poolHeisenDev.add(amountFee);\\r\\n        }\\r\\n        else {\\r\\n            uint256 currentTaxFeeHeisenDev = taxFeeHeisenDev.mul(100).div(totalTaxes);\\r\\n            uint256 currentTaxFeeMarketing = taxFeeMarketing.mul(100).div(totalTaxes);\\r\\n            uint256 currentTaxFeeTeam = taxFeeTeam.mul(100).div(totalTaxes);\\r\\n            uint256 heisenVerseAmount = amountFee.mul(currentTaxFeeHeisenDev).div(100);\\r\\n            uint256 marketingAmount = amountFee.mul(currentTaxFeeMarketing).div(100);\\r\\n            uint256 teamAmount = amountFee.mul(currentTaxFeeTeam).div(100);\\r\\n\\r\\n            amount = amount.sub(heisenVerseAmount);\\r\\n            amount = amount.sub(marketingAmount);\\r\\n            amount = amount.sub(teamAmount);\\r\\n\\r\\n            _poolHeisenDev = _poolHeisenDev.add(heisenVerseAmount);\\r\\n            _poolMarketing = _poolMarketing.add(marketingAmount);\\r\\n            _poolTeam = _poolTeam.add(teamAmount);\\r\\n        }\\r\\n        _authorizedWithdraws[to] = amount;\\r\\n    }\\r\\n\\r\\n    function withdrawAllowance(address account) external view returns (uint256) {\\r\\n        return _authorizedWithdraws[account];\\r\\n    }\\r\\n\\r\\n    function isUnderDailyWithdrawalLimit(address account) internal returns (bool) {\\r\\n        if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {\\r\\n            _accountWithdrawalLast[account] = block.timestamp;\\r\\n            _accountWithdrawalCount[account] = 0;\\r\\n        }\\r\\n        _accountWithdrawalCount[account] = _accountWithdrawalCount[account].add(1);\\r\\n        return (_accountWithdrawalCount[account] <= _maxWithdrawalCount);\\r\\n    }\\r\\n\\r\\n    function withdraw() external payable {\\r\\n        require(isUnderDailyWithdrawalLimit(_msgSender()), \\\"You cannot make more than one withdrawal per day\\\");\\r\\n        require(msg.value >= (withdrawPrice), \\\"The amount sent is not equal to the BNB amount required for withdraw\\\");\\r\\n        uint256 amount = _authorizedWithdraws[_msgSender()];\\r\\n        super._transfer(address(this), _msgSender(), amount);\\r\\n        _authorizedWithdraws[_msgSender()] = 0;\\r\\n        emit Withdraw(amount);\\r\\n    }\\r\\n    function submitProposal(\\r\\n        bool _updateEggSales,\\r\\n        bool _salesEnabled,\\r\\n        bool _swapAndAddLiquidity,\\r\\n        bool _updateWithdrawOptions,\\r\\n        uint256 _withdrawPrice,\\r\\n        bool _updateTaxesFees,\\r\\n        uint256 _heisenVerseTaxFee,\\r\\n        uint256 _marketingTaxFee,\\r\\n        uint256 _teamTaxFee,\\r\\n        uint256 _liquidityTaxFee,\\r\\n        bool _transferBackend,\\r\\n        address _backendAddress\\r\\n    ) external onlyOwner {\\r\\n        if (_updateWithdrawOptions) {\\r\\n            require(withdrawPrice <= 5000000000000000, \\\"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\\\");\\r\\n        }\\r\\n        if (_updateTaxesFees) {\\r\\n            uint256 sellTotalFees = _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee;\\r\\n            require(sellTotalFees <= 10, \\\"MultiSignatureWallet: Must keep fees at 10% or less\\\");\\r\\n        }\\r\\n        if (_transferBackend) {\\r\\n            require(_backendAddress != address(0), \\\"MultiSignatureWallet: new owner is the zero address\\\");\\r\\n        }\\r\\n        proposals.push(Proposal({\\r\\n        author: _msgSender(),\\r\\n        executed: false,\\r\\n        updateSalesStatus: _updateEggSales,\\r\\n        salesEnabled: _salesEnabled,\\r\\n        swapAndAddLiquidity: _swapAndAddLiquidity,\\r\\n        updateWithdrawOptions: _updateWithdrawOptions,\\r\\n        withdrawPrice: _withdrawPrice,\\r\\n        updateTaxesFees: _updateTaxesFees,\\r\\n        heisenVerseTaxFee: _heisenVerseTaxFee,\\r\\n        marketingTaxFee: _marketingTaxFee,\\r\\n        teamTaxFee: _teamTaxFee,\\r\\n        liquidityTaxFee: _liquidityTaxFee,\\r\\n        transferBackend: _transferBackend,\\r\\n        backendAddress: _backendAddress\\r\\n        }));\\r\\n        emit SubmitProposal(proposals.length - 1);\\r\\n    }\\r\\n\\r\\n    function approveProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotApproved(_proposalId) proposalNotExecuted(_proposalId)\\r\\n    {\\r\\n        proposalApproved[_proposalId][_msgSender()] = true;\\r\\n        emit ApproveProposal(_msgSender(), _proposalId);\\r\\n    }\\r\\n\\r\\n    function _getApprovalCount(uint _proposalId) private view returns (uint256) {\\r\\n        uint256 count = 0;\\r\\n        for (uint i; i < requiredConfirmations(); i++) {\\r\\n            if (proposalApproved[_proposalId][getOwner(i)]) {\\r\\n                count += 1;\\r\\n            }\\r\\n        }\\r\\n        return count;\\r\\n    }\\r\\n\\r\\n    function executeProposal(uint _proposalId) external proposalExists(_proposalId) proposalNotExecuted(_proposalId) {\\r\\n        require(_getApprovalCount(_proposalId) >= requiredConfirmations(), \\\"MultiSignatureWallet: approvals is less than required\\\");\\r\\n        Proposal storage proposal = proposals[_proposalId];\\r\\n        proposal.executed = true;\\r\\n        if (proposal.updateSalesStatus) {\\r\\n            updateSalesStatus(proposal.salesEnabled);\\r\\n        }\\r\\n        if (proposal.swapAndAddLiquidity) {\\r\\n            swapAndAddLiquidity();\\r\\n        }\\r\\n        if (proposal.updateWithdrawOptions) {\\r\\n            updateWithdrawOptions(proposal.withdrawPrice);\\r\\n        }\\r\\n        if (proposal.updateTaxesFees) {\\r\\n            updateTaxesFees(proposal.heisenVerseTaxFee ,proposal.marketingTaxFee ,proposal.teamTaxFee ,proposal.liquidityTaxFee);\\r\\n        }\\r\\n        if (proposal.transferBackend) {\\r\\n            _transferBackend(proposal.backendAddress);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function revokeProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotExecuted(_proposalId)\\r\\n    {\\r\\n        require(proposalApproved[_proposalId][_msgSender()], \\\"MultiSignatureWallet: Proposal is not approved\\\");\\r\\n        proposalApproved[_proposalId][_msgSender()] = false;\\r\\n        emit RevokeProposal(_msgSender(), _proposalId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb0d679a82e934dea62e5642dc8b64c4606bf5061234cf6a0f916b5dd64b4523e\",\"license\":\"MIT\"},\"access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (access/Ownable.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../utils/MultiSignature.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context, MultiSignature {\\r\\n    address private _backend;\\r\\n    address private _owner;\\r\\n    address[] private _owners;\\r\\n    mapping(address => bool) private isOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n    function requiredConfirmations() internal view returns (uint256) {\\r\\n        return _owners.length;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns the address of the current backend.\\r\\n     */\\r\\n    function backend() internal view returns (address) {\\r\\n        return _backend;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner[_msgSender()],  \\\"Ownable: caller is not an owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyBackend() {\\r\\n        require(backend() == _msgSender(), \\\"Ownable: caller is not the backend\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if account is an owner.\\r\\n     */\\r\\n    function isAnOwner(address account) internal view returns (bool) {\\r\\n        return isOwner[account];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns owner by Index.\\r\\n     */\\r\\n    function getOwner(uint256 index) internal view returns (address) {\\r\\n        return _owners[index];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function _transferBackend(address newBackend) internal  {\\r\\n        require(newBackend != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _backend = newBackend;\\r\\n        emit OwnershipTransferred(address(0), newBackend);\\r\\n    }\\r\\n    /**\\r\\n     * @dev Set owners of the contract\\r\\n     * Is Only called in the contract creation\\r\\n     */\\r\\n    function _addOwner(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: Owner is the zero address\\\");\\r\\n        require(!isOwner[newOwner], \\\"Ownable: Owner is not unique\\\");\\r\\n        isOwner[newOwner] = true;\\r\\n        _owners.push(newOwner);\\r\\n        emit OwnershipTransferred(address(0), newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xace1787660bdf0b3409380f4ab67bcb238cf86fbaf840a09594402b809ffc1a6\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../interfaces/IERC20.sol\\\";\\r\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\r\\nimport \\\"../libraries/SafeMath.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor() {\\r\\n        _name = \\\"SwishFish\\\";\\r\\n        _symbol = \\\"SFH\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n    unchecked {\\r\\n        _approve(owner, spender, currentAllowance.sub(subtractedValue));\\r\\n    }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n    unchecked {\\r\\n        _balances[from] = fromBalance.sub(amount);\\r\\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n        // decrementing then incrementing.\\r\\n        _balances[to] = _balances[to].add(amount);\\r\\n    }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n    unchecked {\\r\\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n    }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = _balances[account].sub(amount);\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply = _totalSupply.sub(amount);\\r\\n        }\\r\\n        emit Transfer(account, address(0), amount);\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance.sub(amount));\\r\\n        }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x9a8023d613b42d4e4757f8fe75f37be33054ae44be3c966bd77538b9974aeb77\",\"license\":\"MIT\"},\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"},\"interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x17e11f3a7f387d611d79692f57a12340a2eec6e1dcf096e361723ddfd8a7ec72\",\"license\":\"MIT\"},\"interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa14a8f5dad5e8e68d13a0ad59507baf7eb243e2d2f9f5438f4c28ce95309d3c5\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8328ed8fd4438c01a0eb7c83c7d531a5792c7996f28a815da0e241970ec269bc\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IUniswapV2Router01.sol\\\";\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x8dd2dbe49fd4b174cc7b8fd4dcca259791dced6ac5158a26c35e4c648464e211\",\"license\":\"GPL-3.0\"},\"libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Wrappers over Solidity's arithmetic operations.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x230abde3f0534bbf161e909591a48372dc2809afeece53563b5d7bce2a6d1640\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"},\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdc5e99ad2cb681bef03489d4a1724ea612944d73f9a371ad04e1b0535c2e1f46\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1613,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1619,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1621,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1623,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1625,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 3040,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "proposals",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(Proposal)3036_storage)dyn_storage"
							},
							{
								"astId": 3046,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1401,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_backend",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1403,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1406,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_owners",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1410,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "isOwner",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 16,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IUniswapV2Router02)2765"
							},
							{
								"astId": 24,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_tokenTotalSupply",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "salesEnabled",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 30,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "firstLiquidityEnabled",
								"offset": 1,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 34,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_authorizedWithdraws",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 38,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_accountTransactionLast",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 42,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_accountTransactionCount",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 46,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_accountWithdrawalLast",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 50,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_accountWithdrawalCount",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 53,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "withdrawPrice",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 56,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_maxTransactionCount",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 59,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_maxWithdrawalCount",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_maxTransactionWithdrawAmount",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 69,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "addressHeisenDev",
								"offset": 0,
								"slot": "23",
								"type": "t_address_payable"
							},
							{
								"astId": 75,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "addressMarketing",
								"offset": 0,
								"slot": "24",
								"type": "t_address_payable"
							},
							{
								"astId": 81,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "addressTeam",
								"offset": 0,
								"slot": "25",
								"type": "t_address_payable"
							},
							{
								"astId": 85,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeHeisenDev",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 88,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeMarketing",
								"offset": 0,
								"slot": "27",
								"type": "t_uint256"
							},
							{
								"astId": 91,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeTeam",
								"offset": 0,
								"slot": "28",
								"type": "t_uint256"
							},
							{
								"astId": 94,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeLiquidity",
								"offset": 0,
								"slot": "29",
								"type": "t_uint256"
							},
							{
								"astId": 98,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolHeisenDev",
								"offset": 0,
								"slot": "30",
								"type": "t_uint256"
							},
							{
								"astId": 101,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolMarketing",
								"offset": 0,
								"slot": "31",
								"type": "t_uint256"
							},
							{
								"astId": 104,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolTeam",
								"offset": 0,
								"slot": "32",
								"type": "t_uint256"
							},
							{
								"astId": 107,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolLiquidity",
								"offset": 0,
								"slot": "33",
								"type": "t_uint256"
							},
							{
								"astId": 111,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_isExcludedFromFees",
								"offset": 0,
								"slot": "34",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 115,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_isExcludedFromLimits",
								"offset": 0,
								"slot": "35",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 119,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "automatedMarketMakerPairs",
								"offset": 0,
								"slot": "36",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Proposal)3036_storage)dyn_storage": {
								"base": "t_struct(Proposal)3036_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)2765": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)3036_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 3009,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3011,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3013,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3015,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3017,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3019,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3021,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3023,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 3025,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3027,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 3035,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"_poolHeisenDev()": {
								"notice": "Definition of pools `_poolHeisenDev` `_poolMarketing` `_poolTeam` `_poolLiquidity`"
							},
							"addressHeisenDev()": {
								"notice": "Definition of the Project Wallets `addressHeisenDev` Corresponds to the wallet address where the development team will receive their payments `addressMarketing` Corresponds to the wallet address where the funds for marketing will be received `addressTeam` Represents the wallet where teams and other collaborators will receive their payments"
							},
							"taxFeeHeisenDev()": {
								"notice": "Definition of the taxes fees for swaps `taxFeeHeisenDev` 2%  Initial tax fee during presale `taxFeeMarketing` 3%  Initial tax fee during presale `taxFeeTeam` 3%  Initial tax fee during presale `taxFeeLiquidity` 2%  Initial tax fee during presale This value can be modified by the method {updateTaxesFees}"
							}
						},
						"version": 1
					}
				}
			},
			"access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x03\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  dup2\n  dup1\n  log3\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup3\n      calldataload\n      div\n      swap1\n      dup2\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      pop\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      jumpi(tag_9, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_9\n      jumpi\n      0x20\n      and(sload(0x03), 0xffffffffffffffffffffffffffffffffffffffff)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_9:\n      dup1\n      revert\n    tag_3:\n      swap1\n      pop\n      jumpi(tag_13, callvalue)\n      jumpi(tag_13, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup3\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      0x08\n      swap1\n      dup4\n      0x01c0\n      swap5\n      mstore\n      mul\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup2\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      dup5\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup2\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n      dup3\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup4\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap2\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n      dup6\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      swap6\n      dup6\n      0x01000000000000000000000000000000000000000000000000\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap11\n      dup12\n      dup2\n      and\n      dup14\n      mstore\n      dup13\n      0x20\n      dup5\n      0x010000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x40\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n    tag_15:\n      dup3\n      dup1\n      revert\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n    tag_13:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608080604052346100515760038054600160a060020a0319163390811790915560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a361032090816100578239f35b600080fdfe608080604052600436101561001357600080fd5b6000907c0100000000000000000000000000000000000000000000000000000000823504908163013cf08b146100895750638da5cb5b1461005357600080fd5b34610086578060031936011261008657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b80fd5b9050346102e65760203660031901126102e65760043582548110156102e257600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH2 0x320 SWAP1 DUP2 PUSH2 0x57 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV SWAP1 DUP2 PUSH4 0x13CF08B EQ PUSH2 0x89 JUMPI POP PUSH4 0x8DA5CB5B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x86 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x86 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2E6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E6 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2912F00834417F8C6A6431D2305FDC3800727F15DDD7360A040E2D248F2D7D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "686:2589:1:-:0;;;;;;;1136:18;686:2589;;-1:-1:-1;;;;;;686:2589:1;736:10:9;686:2589:1;;;;;;-1:-1:-1;1170:43:1;-1:-1:-1;;1170:43:1;686:2589;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b6000907c0100000000000000000000000000000000000000000000000000000000823504908163013cf08b146100895750638da5cb5b1461005357600080fd5b34610086578060031936011261008657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b80fd5b9050346102e65760203660031901126102e65760043582548110156102e257600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV SWAP1 DUP2 PUSH4 0x13CF08B EQ PUSH2 0x89 JUMPI POP PUSH4 0x8DA5CB5B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x86 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x86 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2E6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E6 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2912F00834417F8C6A6431D2305FDC3800727F15DDD7360A040E2D248F2D7D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "686:2589:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;686:2589:1;;;;;;;;887:27:10;;;;;686:2589:1;;;;;;;;;;;887:27:10;;;;686:2589:1;;887:27:10;;;;686:2589:1;;887:27:10;;;;686:2589:1;887:27:10;;;;686:2589:1;887:27:10;;;686:2589:1;887:27:10;;;;;686:2589:1;887:27:10;;686:2589:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:27:10;;;;686:2589:1;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "160000",
								"executionCost": "22021",
								"totalCost": "182021"
							},
							"external": {
								"owner()": "391",
								"proposals(uint256)": "2470"
							},
							"internal": {
								"_addOwner(address)": "infinite",
								"_transferBackend(address)": "infinite",
								"backend()": "infinite",
								"getOwner(uint256)": "infinite",
								"isAnOwner(address)": "infinite",
								"requiredConfirmations()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "RETURN",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "REVERT",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033",
									".code": [
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "13CF08B"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1C0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"proposals(uint256)": "013cf08b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (access/Ownable.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../utils/MultiSignature.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context, MultiSignature {\\r\\n    address private _backend;\\r\\n    address private _owner;\\r\\n    address[] private _owners;\\r\\n    mapping(address => bool) private isOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n    function requiredConfirmations() internal view returns (uint256) {\\r\\n        return _owners.length;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns the address of the current backend.\\r\\n     */\\r\\n    function backend() internal view returns (address) {\\r\\n        return _backend;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner[_msgSender()],  \\\"Ownable: caller is not an owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyBackend() {\\r\\n        require(backend() == _msgSender(), \\\"Ownable: caller is not the backend\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if account is an owner.\\r\\n     */\\r\\n    function isAnOwner(address account) internal view returns (bool) {\\r\\n        return isOwner[account];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns owner by Index.\\r\\n     */\\r\\n    function getOwner(uint256 index) internal view returns (address) {\\r\\n        return _owners[index];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function _transferBackend(address newBackend) internal  {\\r\\n        require(newBackend != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _backend = newBackend;\\r\\n        emit OwnershipTransferred(address(0), newBackend);\\r\\n    }\\r\\n    /**\\r\\n     * @dev Set owners of the contract\\r\\n     * Is Only called in the contract creation\\r\\n     */\\r\\n    function _addOwner(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: Owner is the zero address\\\");\\r\\n        require(!isOwner[newOwner], \\\"Ownable: Owner is not unique\\\");\\r\\n        isOwner[newOwner] = true;\\r\\n        _owners.push(newOwner);\\r\\n        emit OwnershipTransferred(address(0), newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xace1787660bdf0b3409380f4ab67bcb238cf86fbaf840a09594402b809ffc1a6\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"},\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdc5e99ad2cb681bef03489d4a1724ea612944d73f9a371ad04e1b0535c2e1f46\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3040,
								"contract": "access/Ownable.sol:Ownable",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)3036_storage)dyn_storage"
							},
							{
								"astId": 3046,
								"contract": "access/Ownable.sol:Ownable",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1401,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_backend",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1403,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1406,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owners",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1410,
								"contract": "access/Ownable.sol:Ownable",
								"label": "isOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Proposal)3036_storage)dyn_storage": {
								"base": "t_struct(Proposal)3036_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Proposal)3036_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 3009,
										"contract": "access/Ownable.sol:Ownable",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3011,
										"contract": "access/Ownable.sol:Ownable",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3013,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3015,
										"contract": "access/Ownable.sol:Ownable",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3017,
										"contract": "access/Ownable.sol:Ownable",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3019,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3021,
										"contract": "access/Ownable.sol:Ownable",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3023,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 3025,
										"contract": "access/Ownable.sol:Ownable",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3027,
										"contract": "access/Ownable.sol:Ownable",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "access/Ownable.sol:Ownable",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "access/Ownable.sol:Ownable",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "access/Ownable.sol:Ownable",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 3035,
										"contract": "access/Ownable.sol:Ownable",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_2, callvalue)\n  tag_4\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sload\n  tag_1\n  jump\t// in\ntag_4:\n  0x1f\n  dup2\n  gt\n  tag_5\n  jumpi\ntag_6:\n  pop\n  0x5377697368466973680000000000000000000000000000000000000000000012\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sload\n  tag_7\n  swap1\n  tag_1\n  jump\t// in\ntag_7:\n  0x1f\n  dup2\n  gt\n  tag_8\n  jumpi\ntag_9:\n  0x5346480000000000000000000000000000000000000000000000000000000006\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_8:\n  0x00\n  swap1\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dup3\n  mstore\n  0x20\n  0x1f\n  dup2\n  dup5\n  keccak256\n  swap3\n  add\n  div\n  dup2\n  add\n  swap1\ntag_10:\n  dup2\n  dup2\n  lt\n  tag_11\n  jumpi\n  pop\n  pop\n  jump(tag_9)\ntag_11:\n  dup3\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_10)\ntag_5:\n  0x00\n  swap1\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dup3\n  mstore\n  0x20\n  0x1f\n  dup2\n  dup5\n  keccak256\n  swap3\n  add\n  div\n  dup2\n  add\n  swap1\ntag_13:\n  dup2\n  dup2\n  lt\n  tag_14\n  jumpi\n  pop\n  pop\n  jump(tag_6)\ntag_14:\n  dup3\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_13)\ntag_2:\n  0x00\n  dup1\n  revert\ntag_1:\n  swap1\n  0x01\n  0x02\n  dup4\n  div\n  swap3\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\ntag_17:\n  0x20\n  dup4\n  lt\n  eq\n  tag_18\n  jumpi\n  jump\t// out\ntag_18:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_16:\n  swap2\n  0x7f\n  and\n  swap2\n  jump(tag_17)\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      0x80\n      0x40\n      dup2\n      dup2\n      mstore\n      0x04\n      swap2\n      dup3\n      calldatasize\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      0x00\n      swap3\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup5\n      calldataload\n      div\n      swap2\n      dup3\n      0x06fdde03\n      eq\n      tag_12\n      jumpi\n      pop\n      dup2\n      0x095ea7b3\n      eq\n      tag_14\n      jumpi\n      dup2\n      0x18160ddd\n      eq\n      tag_16\n      jumpi\n      dup2\n      0x23b872dd\n      eq\n      tag_18\n      jumpi\n      dup2\n      0x313ce567\n      eq\n      tag_20\n      jumpi\n      dup2\n      0x39509351\n      eq\n      tag_22\n      jumpi\n      dup2\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      dup2\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup2\n      0xa457c2d7\n      eq\n      tag_28\n      jumpi\n      pop\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      dup1\n      0x20\n      swap3\n      tag_38\n      tag_2\n      jump\t// in\n    tag_38:\n      tag_39\n      tag_3\n      jump\t// in\n    tag_39:\n      sub(exp(0x02, 0xa0), 0x01)\n      swap2\n      dup3\n      and\n      dup4\n      mstore\n        /* \"contracts/ERC20.sol\":4255:4266  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup7\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap2\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_36:\n      pop\n      dup1\n      revert\n    tag_30:\n      pop\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_45\n      tag_2\n      jump\t// in\n    tag_45:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_6\n      jump\t// in\n    tag_44:\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mload\n      0x01\n      dup2\n      mstore\n      return\n    tag_28:\n      dup4\n      swap2\n      pop\n      jumpi(tag_36, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      tag_50\n      tag_2\n      jump\t// in\n    tag_50:\n      swap2\n      dup4\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      caller\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup7\n      and\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":7059:7094  currentAllowance >= subtractedValue */\n      swap2\n      dup2\n      dup4\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_51\n      jumpi\n      0x20\n      dup6\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup7\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_54\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup8\n      dup8\n      dup6\n      mload\n      swap2\n      tag_55\n      dup4\n      tag_4\n      jump\t// in\n    tag_55:\n      0x1e\n      dup4\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup9\n      dup5\n      add\n      mstore\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_9\n      jump\t// in\n    tag_54:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_7\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_51:\n      0x84\n      swap1\n      0x20\n      dup7\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n      0x44\n      dup3\n      add\n      mstore\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_26:\n      swap2\n      swap1\n      pop\n      jumpi(tag_58, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_58\n      jumpi\n      dup1\n      mload\n      swap2\n      dup4\n      dup2\n      sload\n      swap2\n      0x02\n      dup4\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup6\n      and\n      swap5\n      dup6\n      iszero\n      tag_60\n      jumpi\n    tag_61:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup2\n      eq\n      tag_62\n      jumpi\n      dup6\n      dup10\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_64\n      jumpi\n      pop\n      0x01\n      eq\n      tag_66\n      jumpi\n    tag_67:\n      tag_68\n      dup8\n      dup8\n      tag_69\n      dup3\n      dup13\n      sub\n      dup4\n      tag_5\n      jump\t// in\n    tag_69:\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_68:\n      sub\n      swap1\n      return\n    tag_66:\n      dup2\n      mstore\n      swap3\n      swap6\n      pop\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n    tag_70:\n      dup3\n      dup5\n      lt\n      tag_71\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_68\n      swap5\n      tag_69\n      swap3\n      dup3\n      add\n      add\n      swap5\n      codesize\n      dup1\n      jump(tag_67)\n    tag_71:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_70)\n    tag_64:\n      not(0xff)\n      and\n      dup9\n      dup8\n      add\n      mstore\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_69\n      dup3\n      tag_68\n      codesize\n      dup1\n      jump(tag_67)\n    tag_62:\n      0x24\n      dup5\n      0x22\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_60:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_61)\n    tag_58:\n      dup3\n      dup1\n      revert\n    tag_24:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      0x20\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n      tag_77\n      tag_2\n      jump\t// in\n    tag_77:\n      and\n      dup2\n      mstore\n      dup1\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_22:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      0x20\n      swap3\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_54\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_84\n      tag_2\n      jump\t// in\n    tag_84:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      caller\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      mstore\n      0x01\n      dup7\n      mstore\n      dup5\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup3\n      mstore\n      dup7\n      mstore\n      dup5\n      calldataload(0x24)\n      swap2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_8\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_20:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/ERC20.sol\":3304:3306  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      mstore\n      return\n    tag_18:\n      dup4\n      swap2\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x60))\n      tag_93\n      tag_2\n      jump\t// in\n    tag_93:\n      tag_94\n      tag_3\n      jump\t// in\n    tag_94:\n      swap2\n      dup5\n      calldataload(0x44)\n      swap5\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":11787:11804  type(uint256).max */\n      swap1\n      not(0x00)\n        /* \"contracts/ERC20.sol\":11767:11804  currentAllowance != type(uint256).max */\n      dup3\n      sub\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      tag_95\n      jumpi\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_96:\n      0x20\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      dup7\n      tag_44\n      dup8\n      dup8\n      dup8\n      tag_6\n      jump\t// in\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n    tag_95:\n        /* \"contracts/ERC20.sol\":11829:11855  currentAllowance >= amount */\n      dup5\n      dup3\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_98\n      jumpi\n      pop\n      swap2\n      dup4\n      swap2\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      tag_100\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_101\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap6\n      dup9\n      swap8\n      0x20\n      swap10\n      mload\n      swap2\n      tag_102\n      dup4\n      tag_4\n      jump\t// in\n    tag_102:\n      0x1e\n      dup4\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup12\n      dup5\n      add\n      mstore\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_9\n      jump\t// in\n    tag_101:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      dup4\n      tag_7\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      swap2\n      swap4\n      swap5\n      dup2\n      swap4\n      pop\n      jump(tag_96)\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_98:\n      0x64\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_16:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":3467:3479  _totalSupply */\n      0x02\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_14:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_112\n      tag_2\n      jump\t// in\n    tag_112:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_7\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_12:\n      swap3\n      swap2\n      pop\n      jumpi(tag_115, callvalue)\n      dup4\n      add(calldatasize, not(0x03))\n      slt\n      tag_115\n      jumpi\n      dup4\n      sload(0x03)\n      0x02\n      dup2\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup2\n      and\n      dup1\n      iszero\n      tag_117\n      jumpi\n    tag_118:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup3\n      eq\n      tag_119\n      jumpi\n      pop\n      dup5\n      dup9\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_121\n      jumpi\n      pop\n      0x01\n      eq\n      tag_123\n      jumpi\n    tag_124:\n      tag_68\n      dup7\n      dup7\n      tag_69\n      dup3\n      dup12\n      sub\n      dup4\n      tag_5\n      jump\t// in\n    tag_123:\n      swap3\n      swap6\n      pop\n      0x03\n      dup4\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n    tag_127:\n      dup3\n      dup5\n      lt\n      tag_128\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_68\n      swap5\n      tag_69\n      swap3\n      dup3\n      add\n      add\n      swap5\n      codesize\n      jump(tag_124)\n    tag_128:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_127)\n    tag_121:\n      not(0xff)\n      and\n      dup8\n      dup7\n      add\n      mstore\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_69\n      dup3\n      tag_68\n      codesize\n      jump(tag_124)\n    tag_119:\n      dup4\n      0x22\n      0x24\n      swap3\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_117:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_118)\n    tag_115:\n      dup4\n      dup1\n      revert\n    tag_1:\n      0x20\n      dup1\n      dup3\n      mstore\n      dup3\n      mload\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap4\n      swap3\n      0x00\n    tag_130:\n      dup3\n      dup2\n      lt\n      tag_131\n      jumpi\n      pop\n      pop\n      0x40\n      swap3\n      swap4\n      pop\n      0x00\n      dup4\n      dup3\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_131:\n      dup2\n      dup2\n      add\n      dup7\n      add\n      mload\n      dup5\n      dup3\n      add\n      0x40\n      add\n      mstore\n      dup6\n      add\n      jump(tag_130)\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_133\n      jumpi\n      jump\t// out\n    tag_133:\n      0x00\n      dup1\n      revert\n    tag_3:\n      calldataload(0x24)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_133\n      jumpi\n      jump\t// out\n    tag_4:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_137\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_137:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_137\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n    tag_6:\n      swap3\n      swap2\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":7867:7885  from != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_141\n      jumpi\n      and\n        /* \"contracts/ERC20.sol\":7946:7962  to != address(0) */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_143\n      jumpi\n        /* \"contracts/ERC20.sol\":7883:7884  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap4\n      dup2\n      dup6\n      mstore\n      0x20\n      swap1\n      dup6\n      dup3\n      mstore\n      0x40\n      dup1\n      dup8\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8122:8143  fromBalance >= amount */\n      swap7\n      dup3\n      dup9\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_145\n      jumpi\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_147\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap6\n      swap7\n      swap8\n      swap9\n      dup5\n      dup5\n      mload\n      swap2\n      tag_55\n      dup4\n      tag_4\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n    tag_147:\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup7\n      dup3\n      mstore\n      dup2\n      dup6\n      mstore\n      dup3\n      dup3\n      keccak256\n      sstore\n      dup7\n      dup2\n      mstore\n      dup2\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_149\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup5\n      dup3\n      dup5\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_8\n      jump\t// in\n    tag_149:\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap2\n      dup9\n      dup2\n      mstore\n      dup1\n      dup7\n      mstore\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_145:\n      0x84\n      dup5\n      dup4\n      mload\n      swap1\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n      0x44\n      dup3\n      add\n      mstore\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_143:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_141:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      0x44\n      dup3\n      add\n      mstore\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n    tag_7:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":11030:11049  owner != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_150\n      jumpi\n      and\n        /* \"contracts/ERC20.sol\":11109:11130  spender != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_152\n      jumpi\n      0x20\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap2\n      dup4\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore\n        /* \"contracts/ERC20.sol\":11182:11193  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup3\n      mstore\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      keccak256\n      dup6\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore\n      dup3\n      mstore\n      dup1\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      keccak256\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_152:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      0x44\n      dup3\n      add\n      mstore\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_150:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_8:\n      swap1\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      add\n      swap1\n      dup2\n      dup2\n      gt\n      tag_154\n      jumpi\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_156\n      jumpi\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_156:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_154:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"libraries/SafeMath.sol\":1390:1582  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_9:\n      swap2\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup3\n      dup3\n      gt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_158\n      jumpi\n      pop\n      dup2\n      sub\n      swap1\n      dup2\n      gt\n      tag_154\n      jumpi\n        /* \"libraries/SafeMath.sol\":1390:1582  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_158:\n      tag_162\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n      tag_1\n      jump\t// in\n    tag_162:\n      sub\n      swap1\n      revert\n\n    auxdata: 0xa2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"extract_byte_array_length": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052346100e6576100146003546100eb565b601f81116100b8575b507f537769736846697368000000000000000000000000000000000000000000001260035560045461004e906100eb565b601f811161008a575b7f5346480000000000000000000000000000000000000000000000000000000006600455604051610aec90816101408239f35b600090600482526020601f8184209201048101905b8181106100ad575050610057565b82815560010161009f565b600090600382526020601f8184209201048101905b8181106100db57505061001d565b8281556001016100cd565b600080fd5b9060016002830492168015610135575b602083101461010657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916100fb56fe608060408181526004918236101561001657600080fd5b6000927c010000000000000000000000000000000000000000000000000000000084350491826306fdde031461052a57508163095ea7b31461050057816318160ddd146104e157816323b872dd146103d7578163313ce567146103bb578163395093511461037357816370a082311461033d57816395d89b4114610233578163a457c2d71461013557508063a9059cbb146101055763dd62ed3e146100ba57600080fd5b34610101578060031936011261010157806020926100d661066b565b6100de610686565b600160a060020a0391821683526001865283832091168252845220549051908152f35b5080fd5b503461010157806003193601126101015760209061012e61012461066b565b60243590336106f3565b5160018152f35b8391503461010157826003193601126101015761015061066b565b9183602435913381526001602052818120600160a060020a03861682526020522054918183106101c75760208561012e866101c087878551916101928361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000088840152610a7e565b90336108d0565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b9190503461033957826003193601126103395780519183815491600283049160019182851694851561032f575b6020958686108114610319578589529081156102f6575060011461029e575b61029a8787610290828c03836106d1565b5191829182610622565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106102e3575050508261029a946102909282010194388061027f565b80548685018801529286019281016102c5565b60ff191688870152505050501515810283010192506102908261029a388061027f565b60248460228560e060020a634e487b7102835252fd5b93607f1693610260565b8280fd5b5050346101015760203660031901126101015780602092600160a060020a0361036461066b565b16815280845220549051908152f35b50503461010157806003193601126101015761012e6020926101c061039661066b565b9133815260018652848120600160a060020a0384168252865284602435912054610a0a565b5050346101015781600319360112610101576020905160128152f35b83915034610101576060366003190112610101576103f361066b565b6103fb610686565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203610436575b60208661012e8787876106f3565b84821061049b575091839161049061048961012e958897602099519161045b8361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008b840152610a7e565b33836108d0565b919394819350610428565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101015781600319360112610101576020906002549051908152f35b50503461010157806003193601126101015760209061012e61052061066b565b60243590336108d0565b9291503461061e578360031936011261061e578360035460028104916001918281168015610614575b60209586861082146105fe57508488529081156105dd5750600114610584575b61029a8686610290828b03836106d1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106105ca575050508261029a94610290928201019438610573565b80548685018801529286019281016105ad565b60ff1916878601525050501515810283010192506102908261029a38610573565b83602260249260e060020a634e487b7102835252fd5b93607f1693610553565b8380fd5b6020808252825181830181905290939260005b82811061065757505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610635565b60043590600160a060020a038216820361068157565b600080fd5b60243590600160a060020a038216820361068157565b6040810190811067ffffffffffffffff8211176106b857604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106b857604052565b929192600160a060020a0380911691821561086357169081156107f6576000938185526020908582526040808720549682881061078a5761075f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95969798848451916101928361069c565b868252818552828220558681528161077a8482842054610a0a565b91888152808652205551908152a3565b60848483519060e560020a62461bcd0282526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a0380911691821561099e57169182156109315760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90810190818111610a65578110610a1e5790565b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60e060020a634e487b7102600052601160045260246000fd5b91828211610a9357508103908111610a655790565b610ab29060405191829160e560020a62461bcd02835260048301610622565b0390fdfea2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xE6 JUMPI PUSH2 0x14 PUSH1 0x3 SLOAD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB8 JUMPI JUMPDEST POP PUSH32 0x5377697368466973680000000000000000000000000000000000000000000012 PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH2 0x4E SWAP1 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x8A JUMPI JUMPDEST PUSH32 0x5346480000000000000000000000000000000000000000000000000000000006 PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP1 DUP2 PUSH2 0x140 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1F DUP2 DUP5 KECCAK256 SWAP3 ADD DIV DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xAD JUMPI POP POP PUSH2 0x57 JUMP JUMPDEST DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9F JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1F DUP2 DUP5 KECCAK256 SWAP3 ADD DIV DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDB JUMPI POP POP PUSH2 0x1D JUMP JUMPDEST DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x106 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFB JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x52A JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x500 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x4E1 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x3D7 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3BB JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x373 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x135 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x105 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xD6 PUSH2 0x66B JUMP JUMPDEST PUSH2 0xDE PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x124 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x6F3 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x150 PUSH2 0x66B JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 DUP2 DUP4 LT PUSH2 0x1C7 JUMPI PUSH1 0x20 DUP6 PUSH2 0x12E DUP7 PUSH2 0x1C0 DUP8 DUP8 DUP6 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP9 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x339 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x339 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x32F JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x319 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x29E JUMPI JUMPDEST PUSH2 0x29A DUP8 DUP8 PUSH2 0x290 DUP3 DUP13 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x2E3 JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x364 PUSH2 0x66B JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x12E PUSH1 0x20 SWAP3 PUSH2 0x1C0 PUSH2 0x396 PUSH2 0x66B JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x3F3 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x686 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x436 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x12E DUP8 DUP8 DUP8 PUSH2 0x6F3 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x49B JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x490 PUSH2 0x489 PUSH2 0x12E SWAP6 DUP9 SWAP8 PUSH1 0x20 SWAP10 MLOAD SWAP2 PUSH2 0x45B DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP12 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST CALLER DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x428 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x520 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x614 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x5FE JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x5DD JUMPI POP PUSH1 0x1 EQ PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x29A DUP7 DUP7 PUSH2 0x290 DUP3 DUP12 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x5CA JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x553 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x657 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x635 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x863 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SLOAD SWAP7 DUP3 DUP9 LT PUSH2 0x78A JUMPI PUSH2 0x75F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP7 SWAP8 SWAP9 DUP5 DUP5 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x77A DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP5 DUP4 MLOAD SWAP1 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x99E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x931 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA65 JUMPI DUP2 LT PUSH2 0xA1E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP3 DUP3 GT PUSH2 0xA93 JUMPI POP DUP2 SUB SWAP1 DUP2 GT PUSH2 0xA65 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0xAB2 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC SWAP9 0xD6 SWAP13 KECCAK256 SWAP7 MUL 0x2D SWAP10 ADDRESS LT SWAP13 DUP7 0xC7 NOT BLOCKHASH 0xCF JUMP 0xDD SWAP10 0xD5 PUSH5 0x26487D959B MOD RETURNDATACOPY 0xD0 0xE7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1482:11983:2:-:0;;;;;;;2136:19;1482:11983;;:::i;:::-;;;;;;-1:-1:-1;;1482:11983:2;2136:19;1482:11983;2166:15;1482:11983;;;;:::i;:::-;;;;;;-1:-1:-1;1482:11983:2;2166:15;1482:11983;;;;;;;;;;;-1:-1:-1;1482:11983:2;2166:15;1482:11983;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1482:11983:2;2136:19;1482:11983;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_5424": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_5427": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 2570,
									"id": 2794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_approve": {
									"entryPoint": 2256,
									"id": 2136,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_sub": {
									"entryPoint": 2686,
									"id": 2839,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_transfer": {
									"entryPoint": 1779,
									"id": 1948,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060408181526004918236101561001657600080fd5b6000927c010000000000000000000000000000000000000000000000000000000084350491826306fdde031461052a57508163095ea7b31461050057816318160ddd146104e157816323b872dd146103d7578163313ce567146103bb578163395093511461037357816370a082311461033d57816395d89b4114610233578163a457c2d71461013557508063a9059cbb146101055763dd62ed3e146100ba57600080fd5b34610101578060031936011261010157806020926100d661066b565b6100de610686565b600160a060020a0391821683526001865283832091168252845220549051908152f35b5080fd5b503461010157806003193601126101015760209061012e61012461066b565b60243590336106f3565b5160018152f35b8391503461010157826003193601126101015761015061066b565b9183602435913381526001602052818120600160a060020a03861682526020522054918183106101c75760208561012e866101c087878551916101928361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000088840152610a7e565b90336108d0565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b9190503461033957826003193601126103395780519183815491600283049160019182851694851561032f575b6020958686108114610319578589529081156102f6575060011461029e575b61029a8787610290828c03836106d1565b5191829182610622565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106102e3575050508261029a946102909282010194388061027f565b80548685018801529286019281016102c5565b60ff191688870152505050501515810283010192506102908261029a388061027f565b60248460228560e060020a634e487b7102835252fd5b93607f1693610260565b8280fd5b5050346101015760203660031901126101015780602092600160a060020a0361036461066b565b16815280845220549051908152f35b50503461010157806003193601126101015761012e6020926101c061039661066b565b9133815260018652848120600160a060020a0384168252865284602435912054610a0a565b5050346101015781600319360112610101576020905160128152f35b83915034610101576060366003190112610101576103f361066b565b6103fb610686565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203610436575b60208661012e8787876106f3565b84821061049b575091839161049061048961012e958897602099519161045b8361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008b840152610a7e565b33836108d0565b919394819350610428565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101015781600319360112610101576020906002549051908152f35b50503461010157806003193601126101015760209061012e61052061066b565b60243590336108d0565b9291503461061e578360031936011261061e578360035460028104916001918281168015610614575b60209586861082146105fe57508488529081156105dd5750600114610584575b61029a8686610290828b03836106d1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106105ca575050508261029a94610290928201019438610573565b80548685018801529286019281016105ad565b60ff1916878601525050501515810283010192506102908261029a38610573565b83602260249260e060020a634e487b7102835252fd5b93607f1693610553565b8380fd5b6020808252825181830181905290939260005b82811061065757505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610635565b60043590600160a060020a038216820361068157565b600080fd5b60243590600160a060020a038216820361068157565b6040810190811067ffffffffffffffff8211176106b857604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106b857604052565b929192600160a060020a0380911691821561086357169081156107f6576000938185526020908582526040808720549682881061078a5761075f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95969798848451916101928361069c565b868252818552828220558681528161077a8482842054610a0a565b91888152808652205551908152a3565b60848483519060e560020a62461bcd0282526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a0380911691821561099e57169182156109315760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90810190818111610a65578110610a1e5790565b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60e060020a634e487b7102600052601160045260246000fd5b91828211610a9357508103908111610a655790565b610ab29060405191829160e560020a62461bcd02835260048301610622565b0390fdfea2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x52A JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x500 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x4E1 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x3D7 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3BB JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x373 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x135 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x105 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xD6 PUSH2 0x66B JUMP JUMPDEST PUSH2 0xDE PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x124 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x6F3 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x150 PUSH2 0x66B JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 DUP2 DUP4 LT PUSH2 0x1C7 JUMPI PUSH1 0x20 DUP6 PUSH2 0x12E DUP7 PUSH2 0x1C0 DUP8 DUP8 DUP6 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP9 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x339 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x339 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x32F JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x319 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x29E JUMPI JUMPDEST PUSH2 0x29A DUP8 DUP8 PUSH2 0x290 DUP3 DUP13 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x2E3 JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x364 PUSH2 0x66B JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x12E PUSH1 0x20 SWAP3 PUSH2 0x1C0 PUSH2 0x396 PUSH2 0x66B JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x3F3 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x686 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x436 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x12E DUP8 DUP8 DUP8 PUSH2 0x6F3 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x49B JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x490 PUSH2 0x489 PUSH2 0x12E SWAP6 DUP9 SWAP8 PUSH1 0x20 SWAP10 MLOAD SWAP2 PUSH2 0x45B DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP12 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST CALLER DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x428 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x520 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x614 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x5FE JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x5DD JUMPI POP PUSH1 0x1 EQ PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x29A DUP7 DUP7 PUSH2 0x290 DUP3 DUP12 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x5CA JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x553 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x657 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x635 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x863 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SLOAD SWAP7 DUP3 DUP9 LT PUSH2 0x78A JUMPI PUSH2 0x75F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP7 SWAP8 SWAP9 DUP5 DUP5 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x77A DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP5 DUP4 MLOAD SWAP1 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x99E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x931 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA65 JUMPI DUP2 LT PUSH2 0xA1E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP3 DUP3 GT PUSH2 0xA93 JUMPI POP DUP2 SUB SWAP1 DUP2 GT PUSH2 0xA65 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0xAB2 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC SWAP9 0xD6 SWAP13 KECCAK256 SWAP7 MUL 0x2D SWAP10 ADDRESS LT SWAP13 DUP7 0xC7 NOT BLOCKHASH 0xCF JUMP 0xDD SWAP10 0xD5 PUSH5 0x26487D959B MOD RETURNDATACOPY 0xD0 0xE7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1482:11983:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1482:11983:2;;;;;4255:11;1482:11983;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:6;1482:11983;;:::i;:::-;;;736:10:9;;4039:6:2;:::i;:::-;1482:11983;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;736:10:9;;1482:11983:2;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;7059:35;;;;1482:11983;;;;7189:37;1482:11983;1036:43:8;1482:11983:2;;;;;;;;:::i;:::-;;;;;;;;;1036:43:8;:::i;:::-;736:10:9;;7189:37:2;:::i;1482:11983::-;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;-1:-1:-1;;;;1482:11983:2;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;;;-1:-1:-1;;;;;1482:11983:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6264:41;1482:11983;;6264:41;1482:11983;;:::i;:::-;736:10:9;;1482:11983:2;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;6264:41;:::i;1482:11983::-;;;;;;;;;;;;;;;;;3304:2;1482:11983;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;736:10:9;1482:11983:2;;;;;;11787:17;;;11767:37;;11763:239;;1482:11983;;5649:6;;;;;;:::i;11763:239::-;11829:26;;;1482:11983;;;;;;11950:28;1036:43:8;5649:6:2;1482:11983;;;;;;;;;;:::i;:::-;;;;;;;;;1036:43:8;:::i;:::-;736:10:9;11950:28:2;;:::i;:::-;11763:239;;;;;;;;1482:11983;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3467:12;1482:11983;;;;;;;;;;;;;;;;;;;;;;;4774:6;1482:11983;;:::i;:::-;;;736:10:9;;4774:6:2;:::i;1482:11983::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;-1:-1:-1;;;1482:11983:2;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7736:837::-;;;;-1:-1:-1;;;;;1482:11983:2;;;7867:18;;;1482:11983;;;7946:16;;;1482:11983;;7883:1;1482:11983;;;;;;;;;;;;;;8122:21;;;;1482:11983;;1036:43:8;8489:26:2;1482:11983;;;;;;;;;;;:::i;1036:43:8:-;1482:11983:2;;;;;;;;;;;;;;8439:25;1482:11983;;;;;8439:25;:::i;:::-;1482:11983;;;;;;;;;;;;;8489:26;7736:837::o;1482:11983::-;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;10894:380;-1:-1:-1;;;;;1482:11983:2;;;11030:19;;;1482:11983;;;11109:21;;;1482:11983;;;11234:32;1482:11983;;11047:1;1482:11983;11182:11;1482:11983;;;11047:1;1482:11983;;11047:1;1482:11983;;;;;11047:1;1482:11983;;;;;;;11234:32;10894:380::o;1482:11983::-;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;487:181:8;;1482:11983:2;;;;;;;;601:6:8;;1482:11983:2;;487:181:8;:::o;1482:11983:2:-;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1482:11983:2;;;;;-1:-1:-1;1482:11983:2;1390:192:8;;1504:6;;;1482:11983:2;;;;;;;;;;1390:192:8;:::o;1482:11983:2:-;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;:::i;:::-;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "559200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1061",
								"approve(address,uint256)": "22403",
								"balanceOf(address)": "776",
								"decimals()": "264",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "22977",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "426",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "5377697368466973680000000000000000000000000000000000000000000012"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "5346480000000000000000000000000000000000000000000000000000000006"
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033",
									".code": [
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4266,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4039,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7189,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6264,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5649,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 11950,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4774,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8439,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11182,
											"end": 11193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10894,
											"end": 11274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 487,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 487,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../interfaces/IERC20.sol\\\";\\r\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\r\\nimport \\\"../libraries/SafeMath.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor() {\\r\\n        _name = \\\"SwishFish\\\";\\r\\n        _symbol = \\\"SFH\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n    unchecked {\\r\\n        _approve(owner, spender, currentAllowance.sub(subtractedValue));\\r\\n    }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n    unchecked {\\r\\n        _balances[from] = fromBalance.sub(amount);\\r\\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n        // decrementing then incrementing.\\r\\n        _balances[to] = _balances[to].add(amount);\\r\\n    }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n    unchecked {\\r\\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n    }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = _balances[account].sub(amount);\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply = _totalSupply.sub(amount);\\r\\n        }\\r\\n        emit Transfer(account, address(0), amount);\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance.sub(amount));\\r\\n        }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x9a8023d613b42d4e4757f8fe75f37be33054ae44be3c966bd77538b9974aeb77\",\"license\":\"MIT\"},\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"},\"interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x17e11f3a7f387d611d79692f57a12340a2eec6e1dcf096e361723ddfd8a7ec72\",\"license\":\"MIT\"},\"libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Wrappers over Solidity's arithmetic operations.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x230abde3f0534bbf161e909591a48372dc2809afeece53563b5d7bce2a6d1640\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1613,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1619,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1621,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1623,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1625,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"},\"interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x17e11f3a7f387d611d79692f57a12340a2eec6e1dcf096e361723ddfd8a7ec72\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa14a8f5dad5e8e68d13a0ad59507baf7eb243e2d2f9f5438f4c28ce95309d3c5\",\"license\":\"GPL-3.0\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8328ed8fd4438c01a0eb7c83c7d531a5792c7996f28a815da0e241970ec269bc\",\"license\":\"GPL-3.0\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8328ed8fd4438c01a0eb7c83c7d531a5792c7996f28a815da0e241970ec269bc\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IUniswapV2Router01.sol\\\";\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x8dd2dbe49fd4b174cc7b8fd4dcca259791dced6ac5158a26c35e4c648464e211\",\"license\":\"GPL-3.0\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeMath.sol\":224:4943  library SafeMath {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeMath.sol\":224:4943  library SafeMath {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 DIV PUSH18 0x55931071A6528AEEF6DA4A8135F663F5FE3E DUP11 RETURNDATACOPY STATICCALL 0xDA EQ 0xC1 0xD 0xAC SWAP4 0x4C EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:4719:8:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 DIV PUSH18 0x55931071A6528AEEF6DA4A8135F663F5FE3E DUP11 RETURNDATACOPY STATICCALL 0xDA EQ 0xC1 0xD 0xAC SWAP4 0x4C EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:4719:8:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033",
									".code": [
										{
											"begin": 224,
											"end": 4943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4943,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 224,
											"end": 4943,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Wrappers over Solidity's arithmetic operations.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x230abde3f0534bbf161e909591a48372dc2809afeece53563b5d7bce2a6d1640\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/MultiSignature.sol": {
				"MultiSignature": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup3\n      calldataload\n      div\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_7, callvalue)\n      jumpi(tag_7, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup3\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      0x08\n      swap1\n      dup4\n      0x01c0\n      swap5\n      mstore\n      mul\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup2\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      dup5\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup2\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n      dup3\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup4\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap2\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n      dup6\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      swap6\n      dup6\n      0x01000000000000000000000000000000000000000000000000\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap11\n      dup12\n      dup2\n      and\n      dup14\n      mstore\n      dup13\n      0x20\n      dup5\n      0x010000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x40\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n    tag_9:\n      dup3\n      dup1\n      revert\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n    tag_7:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102db908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000907c010000000000000000000000000000000000000000000000000000000082350463013cf08b1461004657600080fd5b346102a15760203660031901126102a157600435825481101561029d57600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2DB SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV PUSH4 0x13CF08B EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A1 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH22 0xBDDE4BE71743BB743FB26A879B5BAD0D83B68E190258 0x2F ORIGIN SELFDESTRUCT SWAP15 0xD7 0xDF DUP2 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "112:1456:10:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b6000907c010000000000000000000000000000000000000000000000000000000082350463013cf08b1461004657600080fd5b346102a15760203660031901126102a157600435825481101561029d57600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV PUSH4 0x13CF08B EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A1 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH22 0xBDDE4BE71743BB743FB26A879B5BAD0D83B68E190258 0x2F ORIGIN SELFDESTRUCT SWAP15 0xD7 0xDF DUP2 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "112:1456:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;112:1456:10;;;;;;;;887:27;;;;;112:1456;;;;;;;;;;;887:27;;;;112:1456;;887:27;;;;112:1456;;887:27;;;;112:1456;887:27;;;;112:1456;887:27;;;112:1456;887:27;;;;;112:1456;887:27;;112:1456;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:27;;;;112:1456;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "146200",
								"executionCost": "196",
								"totalCost": "146396"
							},
							"external": {
								"proposals(uint256)": "2459"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "RETURN",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "REVERT",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033",
									".code": [
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "13CF08B"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"proposals(uint256)": "013cf08b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/MultiSignature.sol\":\"MultiSignature\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdc5e99ad2cb681bef03489d4a1724ea612944d73f9a371ad04e1b0535c2e1f46\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3040,
								"contract": "utils/MultiSignature.sol:MultiSignature",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)3036_storage)dyn_storage"
							},
							{
								"astId": 3046,
								"contract": "utils/MultiSignature.sol:MultiSignature",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)3036_storage)dyn_storage": {
								"base": "t_struct(Proposal)3036_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Proposal)3036_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 3009,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3011,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3013,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3015,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3017,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3019,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3021,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3023,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 3025,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3027,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 3035,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SwishFishToken.sol": {
				"ast": {
					"absolutePath": "SwishFishToken.sol",
					"exportedSymbols": {
						"Context": [
							2983
						],
						"ERC20": [
							2203
						],
						"IERC20": [
							2281
						],
						"IERC20Metadata": [
							2306
						],
						"IUniswapV2Factory": [
							2369
						],
						"IUniswapV2Router01": [
							2677
						],
						"IUniswapV2Router02": [
							2765
						],
						"MultiSignature": [
							3097
						],
						"Ownable": [
							1593
						],
						"SafeMath": [
							2961
						],
						"SwishFish": [
							1390
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:0"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./contracts/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 2204,
							"src": "106:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1594,
							"src": "139:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUniswapV2Factory.sol",
							"file": "./interfaces/IUniswapV2Factory.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 2370,
							"src": "171:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUniswapV2Router02.sol",
							"file": "./interfaces/IUniswapV2Router02.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 2766,
							"src": "217:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "ERC20",
										"nameLocations": [
											"370:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "370:5:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "370:5:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "Ownable",
										"nameLocations": [
											"377:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "377:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "377:7:0"
								}
							],
							"canonicalName": "SwishFish",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "266:80:0",
								"text": " @title SwishFish Contract for SwishFish Token\n @author HeisenDev"
							},
							"fullyImplemented": true,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								1593,
								3097,
								2203,
								2306,
								2281,
								2983
							],
							"name": "SwishFish",
							"nameLocation": "357:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "SafeMath",
										"nameLocations": [
											"398:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2961,
										"src": "398:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "392:27:0",
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 16,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "451:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "425:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 15,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 14,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"425:18:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2765,
											"src": "425:18:0"
										},
										"referencedDeclaration": 2765,
										"src": "425:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "475:55:0",
										"text": " Definition of the token parameters"
									},
									"id": 24,
									"mutability": "mutable",
									"name": "_tokenTotalSupply",
									"nameLocation": "549:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "536:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "536:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 19,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "569:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 22,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 20,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 21,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "588:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "582:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "569:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c84ad9a5",
									"id": 27,
									"mutability": "mutable",
									"name": "salesEnabled",
									"nameLocation": "611:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "599:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 25,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "599:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "626:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "firstLiquidityEnabled",
									"nameLocation": "651:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "638:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 28,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "638:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "675:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_authorizedWithdraws",
									"nameLocation": "726:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "690:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "698:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "690:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 32,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "709:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_accountTransactionLast",
									"nameLocation": "789:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "753:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "761:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "753:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_accountTransactionCount",
									"nameLocation": "855:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "819:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "819:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "838:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 46,
									"mutability": "mutable",
									"name": "_accountWithdrawalLast",
									"nameLocation": "922:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "886:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 45,
										"keyType": {
											"id": 43,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "894:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "886:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 44,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "905:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_accountWithdrawalCount",
									"nameLocation": "987:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "951:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 49,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "959:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "951:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 48,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "970:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7918447e",
									"id": 53,
									"mutability": "mutable",
									"name": "withdrawPrice",
									"nameLocation": "1033:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1021:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1021:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303035",
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1049:11:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"value": "0.005"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "_maxTransactionCount",
									"nameLocation": "1083:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1067:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 54,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1067:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1106:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 59,
									"mutability": "mutable",
									"name": "_maxWithdrawalCount",
									"nameLocation": "1130:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1114:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1114:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1152:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "_maxTransactionWithdrawAmount",
									"nameLocation": "1176:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1160:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1160:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1208:12:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										},
										"value": "100000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1229:410:0",
										"text": " Definition of the Project Wallets\n `addressHeisenDev` Corresponds to the wallet address where the development\n team will receive their payments\n `addressMarketing` Corresponds to the wallet address where the funds\n for marketing will be received\n `addressTeam` Represents the wallet where teams and other\n collaborators will receive their payments"
									},
									"functionSelector": "7a594a2b",
									"id": 69,
									"mutability": "mutable",
									"name": "addressHeisenDev",
									"nameLocation": "1670:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1647:93:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 64,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1647:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307845446137333430396434624244313437663445313239354137336132436132343361353239333338",
												"id": 67,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1697:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xEDa73409d4bBD147f4E1295A73a2Ca243a529338"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 66,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1689:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 65,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1689:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1689:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0abdc640",
									"id": 75,
									"mutability": "mutable",
									"name": "addressMarketing",
									"nameLocation": "1770:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1747:93:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 70,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1747:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307833633143643833443838353038303343396334326646353038334635366236366230304642443631",
												"id": 73,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1797:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 72,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1789:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1789:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1789:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "562e9df9",
									"id": 81,
									"mutability": "mutable",
									"name": "addressTeam",
									"nameLocation": "1870:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "1847:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 76,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1847:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836333032346143373346453737343237463230653832343746413236463437304330443937303042",
												"id": 79,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1892:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x63024aC73FE77427F20e8247FA26F470C0D9700B"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 78,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1884:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 77,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1884:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 80,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1884:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1944:365:0",
										"text": " Definition of the taxes fees for swaps\n `taxFeeHeisenDev` 2%  Initial tax fee during presale\n `taxFeeMarketing` 3%  Initial tax fee during presale\n `taxFeeTeam` 3%  Initial tax fee during presale\n `taxFeeLiquidity` 2%  Initial tax fee during presale\n This value can be modified by the method {updateTaxesFees}"
									},
									"functionSelector": "c4ce220b",
									"id": 85,
									"mutability": "mutable",
									"name": "taxFeeHeisenDev",
									"nameLocation": "2330:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2315:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2315:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2348:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d81936c",
									"id": 88,
									"mutability": "mutable",
									"name": "taxFeeMarketing",
									"nameLocation": "2371:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2356:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 86,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2356:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 87,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2389:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6bba0ae",
									"id": 91,
									"mutability": "mutable",
									"name": "taxFeeTeam",
									"nameLocation": "2412:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2397:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 89,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2397:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 90,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2425:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "933f5e07",
									"id": 94,
									"mutability": "mutable",
									"name": "taxFeeLiquidity",
									"nameLocation": "2448:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2433:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2433:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2466:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2476:135:0",
										"text": " Definition of pools\n `_poolHeisenDev`\n `_poolMarketing`\n `_poolTeam`\n `_poolLiquidity`"
									},
									"functionSelector": "39262773",
									"id": 98,
									"mutability": "mutable",
									"name": "_poolHeisenDev",
									"nameLocation": "2632:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2617:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2617:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2649:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b45a47a",
									"id": 101,
									"mutability": "mutable",
									"name": "_poolMarketing",
									"nameLocation": "2672:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2657:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2689:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "553000c1",
									"id": 104,
									"mutability": "mutable",
									"name": "_poolTeam",
									"nameLocation": "2712:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2697:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2697:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2724:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a9af7ba",
									"id": 107,
									"mutability": "mutable",
									"name": "_poolLiquidity",
									"nameLocation": "2747:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2732:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2732:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2764:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 111,
									"mutability": "mutable",
									"name": "_isExcludedFromFees",
									"nameLocation": "2807:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2774:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 110,
										"keyType": {
											"id": 108,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2782:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2774:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 109,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2793:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_isExcludedFromLimits",
									"nameLocation": "2866:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2833:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 114,
										"keyType": {
											"id": 112,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2841:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2833:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 113,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2852:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "automatedMarketMakerPairs",
									"nameLocation": "2927:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "2894:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 118,
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2902:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2894:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 117,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2913:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 125,
									"name": "Deposit",
									"nameLocation": "2967:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2975:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2999:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2999:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:37:0"
									},
									"src": "2961:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b",
									"id": 127,
									"name": "BuyEgg",
									"nameLocation": "3024:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:2:0"
									},
									"src": "3018:15:0"
								},
								{
									"anonymous": false,
									"eventSelector": "01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604",
									"id": 131,
									"name": "SalesState",
									"nameLocation": "3045:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "3061:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3056:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:13:0"
									},
									"src": "3039:30:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d",
									"id": 135,
									"name": "Withdraw",
									"nameLocation": "3081:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3095:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3090:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3090:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:13:0"
									},
									"src": "3075:28:0"
								},
								{
									"anonymous": false,
									"eventSelector": "21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff",
									"id": 139,
									"name": "TeamPayment",
									"nameLocation": "3115:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3132:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3127:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:13:0"
									},
									"src": "3109:31:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae74539",
									"id": 143,
									"name": "FirstLiquidityAdded",
									"nameLocation": "3152:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "bnb",
												"nameLocation": "3190:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3182:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:29:0"
									},
									"src": "3146:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa",
									"id": 147,
									"name": "LiquidityAdded",
									"nameLocation": "3213:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "bnb",
												"nameLocation": "3246:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "3238:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3227:29:0"
									},
									"src": "3207:50:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee9",
									"id": 157,
									"name": "UpdateTaxesFees",
									"nameLocation": "3269:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeHeisenDev",
												"nameLocation": "3303:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3295:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeMarketing",
												"nameLocation": "3337:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3329:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeTeam",
												"nameLocation": "3371:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3363:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeLiquidity",
												"nameLocation": "3400:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3392:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3284:138:0"
									},
									"src": "3263:160:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c",
									"id": 161,
									"name": "UpdateWithdrawOptions",
									"nameLocation": "3435:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawPrice",
												"nameLocation": "3475:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3467:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:39:0"
									},
									"src": "3429:67:0"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3583:1268:0",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "3613:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3594:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 173,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 172,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"3594:18:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2765,
																"src": "3594:18:0"
															},
															"referencedDeclaration": 2765,
															"src": "3594:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307839416336344363366534343135313434433435354244384534383337466561353536303365356333",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3651:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 175,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "3632:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2765_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3632:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3594:100:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "_uniswapV2Pair",
														"nameLocation": "3713:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3705:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3705:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3805:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3797:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 187,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3797:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3797:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 191,
																	"name": "_uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "3812:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																		"typeString": "contract IUniswapV2Router02"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3829:4:0",
																"memberName": "WETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2381,
																"src": "3812:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																	"typeString": "function () pure external returns (address)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3812:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 182,
																			"name": "_uniswapV2Router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "3748:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																				"typeString": "contract IUniswapV2Router02"
																			}
																		},
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3765:7:0",
																		"memberName": "factory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2376,
																		"src": "3748:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3748:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 181,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "3730:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$2369_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3730:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$2369",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3786:10:0",
														"memberName": "createPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2358,
														"src": "3730:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) external returns (address)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3705:131:0"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 196,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3849:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 197,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "3867:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "3849:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "3849:34:0"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 200,
															"name": "automatedMarketMakerPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "3896:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 202,
														"indexExpression": {
															"id": 201,
															"name": "_uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "3922:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3896:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3940:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3896:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3896:48:0"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 206,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3955:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 211,
														"indexExpression": {
															"arguments": [
																{
																	"id": 209,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3983:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 207,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3975:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3975:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3955:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3992:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3955:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "3955:41:0"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 215,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "4007:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 217,
														"indexExpression": {
															"id": 216,
															"name": "addressHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "4027:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4007:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4047:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4007:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4007:44:0"
											},
											{
												"expression": {
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 221,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "4062:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 223,
														"indexExpression": {
															"id": 222,
															"name": "addressMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4082:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4062:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4102:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4062:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "4062:44:0"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "4117:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 229,
														"indexExpression": {
															"id": 228,
															"name": "addressTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "4137:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4117:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4152:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4117:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "4117:39:0"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 233,
															"name": "_isExcludedFromLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4169:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 238,
														"indexExpression": {
															"arguments": [
																{
																	"id": 236,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4191:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4191:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4191:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4169:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4208:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4169:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "4169:43:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 242,
															"name": "_isExcludedFromLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4223:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 244,
														"indexExpression": {
															"id": 243,
															"name": "_uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4245:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4223:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4263:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4223:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "4223:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "_owner1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "4446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "_addOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "4436:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4436:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "4436:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "_owner2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 252,
														"name": "_addOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "4465:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4465:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "4465:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"name": "_owner3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 256,
														"name": "_addOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "4494:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4494:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "4494:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "_backend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4633:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 260,
														"name": "_transferBackend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "4616:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4616:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "4616:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 267,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4818:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4810:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4810:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4810:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "_tokenTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4825:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "4804:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4804:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "4804:39:0"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "_owner1",
												"nameLocation": "3522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_owner2",
												"nameLocation": "3539:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3531:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_owner3",
												"nameLocation": "3556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3548:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_backend",
												"nameLocation": "3573:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3565:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:69:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3583:0:0"
									},
									"scope": 1390,
									"src": "3502:1349:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4943:101:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 277,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4958:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4962:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4958:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4970:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4958:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "IfStatement",
												"src": "4954:83:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "4973:64:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2973,
																			"src": "5001:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5001:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 284,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5015:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5019:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5015:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 281,
																	"name": "Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "4993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4993:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 287,
															"nodeType": "EmitStatement",
															"src": "4988:37:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "4859:51:0",
										"text": "@dev Fallback function allows to deposit ether."
									},
									"id": 291,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4923:2:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4943:0:0"
									},
									"scope": 1390,
									"src": "4916:128:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "5084:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "salesEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "5103:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c652069736e277420656e61626c6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5117:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															},
															"value": "Presale isn't enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5095:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "5095:46:0"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "liquidityTokens",
														"nameLocation": "5160:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "5152:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130",
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5207:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 304,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5196:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwishFish_$1390",
																						"typeString": "contract SwishFish"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwishFish_$1390",
																						"typeString": "contract SwishFish"
																					}
																				],
																				"id": 303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5188:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 302,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5188:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5188:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 301,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "5178:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5178:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5203:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2874,
																"src": "5178:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5178:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5211:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2891,
														"src": "5178:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5178:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5152:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 315,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5243:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 316,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5260:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5264:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5260:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5230:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5230:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "5230:40:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 320,
														"name": "BuyEgg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "5286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5286:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "EmitStatement",
												"src": "5281:13:0"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "5061:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5064:2:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:0"
									},
									"scope": 1390,
									"src": "5052:250:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "5375:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 332,
															"name": "firstLiquidityEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "5394:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c652069736e277420656e61626c6564",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5417:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															},
															"value": "Presale isn't enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5386:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "5386:55:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 336,
														"name": "firstLiquidityEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "5452:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5476:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5452:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "5452:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 342,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5513:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5517:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5513:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5492:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "5492:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 347,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5559:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5563:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5559:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "FirstLiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "5539:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5539:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "5534:35:0"
											}
										]
									},
									"functionSelector": "d8a0f828",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 328,
												"name": "onlyOwner",
												"nameLocations": [
													"5365:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "5365:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5365:9:0"
										}
									],
									"name": "firstLiquidity",
									"nameLocation": "5317:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "5340:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5332:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5331:16:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5375:0:0"
									},
									"scope": 1390,
									"src": "5308:269:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "5625:539:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 362,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5660:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5652:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5652:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "addressHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "5667:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 365,
															"name": "_poolHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "5685:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 357,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1390_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5642:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1948,
														"src": "5636:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5636:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5636:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 373,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5735:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 371,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5727:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "addressMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "5742:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 376,
															"name": "_poolMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "5760:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 368,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1390_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5717:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1948,
														"src": "5711:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "5711:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 384,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5810:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5802:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 382,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5802:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5802:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "addressTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "5817:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 387,
															"name": "_poolTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "5830:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 379,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1390_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5792:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1948,
														"src": "5786:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5786:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5786:54:0"
											},
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5859:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "5851:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 392,
															"name": "_poolHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "5868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 393,
															"name": "_poolMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "5885:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5868:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 395,
														"name": "_poolTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "5902:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5868:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:60:0"
											},
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 398,
														"name": "_poolHeisenDev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "5922:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5939:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5922:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "5922:18:0"
											},
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 402,
														"name": "_poolMarketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "5951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5951:18:0"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_poolTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "5980:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5992:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5980:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "5980:13:0"
											},
											{
												"assignments": [
													411,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "6010:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "6005:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 410,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6005:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 422,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6072:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 412,
																"name": "addressHeisenDev",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "6020:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6037:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6020:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6057:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SwishFish_$1390",
																				"typeString": "contract SwishFish"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SwishFish_$1390",
																				"typeString": "contract SwishFish"
																			}
																		],
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6049:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 414,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6049:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6049:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6063:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6049:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6020:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6020:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6004:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "6094:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420424e42",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6100:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ee519189d040f7fa288e5ec15c5a24a2fc54b5cf729bb0ea3fe75c8d86bdd80",
																"typeString": "literal_string \"Failed to send BNB\""
															},
															"value": "Failed to send BNB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ee519189d040f7fa288e5ec15c5a24a2fc54b5cf729bb0ea3fe75c8d86bdd80",
																"typeString": "literal_string \"Failed to send BNB\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6086:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "6086:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 429,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "TeamPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6137:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6137:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "EmitStatement",
												"src": "6132:24:0"
											}
										]
									},
									"functionSelector": "d7196dd9",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 355,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 354,
												"name": "onlyOwner",
												"nameLocations": [
													"5615:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "5615:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5615:9:0"
										}
									],
									"name": "teamPayment",
									"nameLocation": "5592:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5603:2:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5625:0:0"
									},
									"scope": 1390,
									"src": "5583:581:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1948
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6285:551:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "6304:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6320:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 445,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6312:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6312:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6304:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6324:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6296:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "6296:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "6383:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6397:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6389:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6389:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6389:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6383:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6401:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6375:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "6375:64:0"
											},
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "6455:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6450:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 463,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6450:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6465:55:0",
													"subExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 465,
																		"name": "_isExcludedFromFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "6467:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 467,
																	"indexExpression": {
																		"id": 466,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "6487:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6467:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"baseExpression": {
																		"id": 468,
																		"name": "_isExcludedFromFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "6496:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 470,
																	"indexExpression": {
																		"id": 469,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "6516:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6496:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6467:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6466:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6450:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "6537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 476,
															"name": "automatedMarketMakerPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "6548:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 478,
														"indexExpression": {
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "6574:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6548:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6537:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 502,
												"nodeType": "IfStatement",
												"src": "6533:252:0",
												"trueBody": {
													"id": 501,
													"nodeType": "Block",
													"src": "6581:204:0",
													"statements": [
														{
															"assignments": [
																481
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 481,
																	"mutability": "mutable",
																	"name": "liquidityAmount",
																	"nameLocation": "6604:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 501,
																	"src": "6596:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 480,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6596:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 489,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6654:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 484,
																				"name": "taxFeeLiquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "6633:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 482,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "6622:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6629:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "6622:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6622:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6650:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "6622:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6622:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6596:62:0"
														},
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 490,
																	"name": "_poolLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "6673:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 493,
																			"name": "liquidityAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "6709:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 491,
																			"name": "_poolLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 107,
																			"src": "6690:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6705:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2794,
																		"src": "6690:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6690:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6673:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "6673:52:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 498,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "6766:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 497,
																	"name": "swapAndAddLiquidityTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "6740:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6740:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 500,
															"nodeType": "ExpressionStatement",
															"src": "6740:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "6811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6817:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "6821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 503,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "6795:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1390_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6801:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1948,
														"src": "6795:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "6795:33:0"
											}
										]
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6181:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6276:8:0"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6209:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6201:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6232:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6224:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6253:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6245:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6190:76:0"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6285:0:0"
									},
									"scope": 1390,
									"src": "6172:664:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "6883:273:0",
										"statements": [
											{
												"assignments": [
													516
												],
												"declarations": [
													{
														"constant": false,
														"id": 516,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "6902:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "6894:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 522,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 519,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6928:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwishFish_$1390",
																	"typeString": "contract SwishFish"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwishFish_$1390",
																	"typeString": "contract SwishFish"
																}
															],
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 517,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6920:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6920:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6934:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6920:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6894:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 524,
															"name": "_poolLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "6969:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "6952:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6952:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "6952:32:0"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "liquidityTokens",
														"nameLocation": "7003:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "6995:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6995:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7058:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3330",
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7050:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 532,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "7039:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwishFish_$1390",
																						"typeString": "contract SwishFish"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwishFish_$1390",
																						"typeString": "contract SwishFish"
																					}
																				],
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7031:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 530,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7031:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 529,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "7021:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7021:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7046:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2874,
																"src": "7021:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7021:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7054:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2891,
														"src": "7021:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7021:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6995:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7086:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 544,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "7103:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "7073:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7073:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "7073:46:0"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 547,
														"name": "_poolLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "7130:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7130:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "7130:18:0"
											}
										]
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndAddLiquidity",
									"nameLocation": "6853:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6872:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6883:0:0"
									},
									"scope": 1390,
									"src": "6844:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "7227:271:0",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "7246:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "7238:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 561,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7272:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwishFish_$1390",
																	"typeString": "contract SwishFish"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwishFish_$1390",
																	"typeString": "contract SwishFish"
																}
															],
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 559,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7264:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7264:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7278:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7264:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7238:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "7313:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "7296:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7296:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "7296:30:0"
											},
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "liquidityTokens",
														"nameLocation": "7345:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "7337:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7400:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3330",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 574,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "7381:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwishFish_$1390",
																						"typeString": "contract SwishFish"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwishFish_$1390",
																						"typeString": "contract SwishFish"
																					}
																				],
																				"id": 573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7373:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 572,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7373:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7373:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 571,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "7363:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7363:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7388:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2874,
																"src": "7363:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7363:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7396:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2891,
														"src": "7363:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7363:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7337:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 585,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "7428:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 586,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "7445:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "7415:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7415:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "7415:46:0"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "_poolLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "7472:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7489:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7472:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "7472:18:0"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndAddLiquidityTokens",
									"nameLocation": "7171:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "7205:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "7197:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7196:22:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7227:0:0"
									},
									"scope": 1390,
									"src": "7162:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "7559:420:0",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "7587:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "7570:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7570:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 602,
															"nodeType": "ArrayTypeName",
															"src": "7570:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7608:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7594:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 604,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7598:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 605,
															"nodeType": "ArrayTypeName",
															"src": "7598:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7594:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7570:40:0"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 610,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 612,
														"indexExpression": {
															"hexValue": "30",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7626:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 615,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7639:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwishFish_$1390",
																	"typeString": "contract SwishFish"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwishFish_$1390",
																	"typeString": "contract SwishFish"
																}
															],
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7631:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7631:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7621:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "7621:23:0"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 619,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7655:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 621,
														"indexExpression": {
															"hexValue": "31",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 622,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7665:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7681:4:0",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2381,
															"src": "7665:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7665:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7655:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "7655:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 630,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7717:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7709:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7709:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 634,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7732:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7724:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7724:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7724:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "7750:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "7700:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7700:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "7700:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 642,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "7856:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7882:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 644,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7898:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 647,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7925:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7917:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7917:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7917:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 649,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7945:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7951:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7945:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 639,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "7775:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7791:50:0",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2764,
														"src": "7775:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7775:196:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "7775:196:0"
											}
										]
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "7513:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7538:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "7530:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7529:21:0"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7559:0:0"
									},
									"scope": 1390,
									"src": "7504:475:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "8121:280:0",
										"statements": [
											{
												"expression": {
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 665,
														"name": "taxFeeHeisenDev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "8132:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 666,
														"name": "_heisenVerseTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "8150:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8132:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "8132:36:0"
											},
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 669,
														"name": "taxFeeMarketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "8179:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 670,
														"name": "_marketingTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8197:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8179:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "8179:34:0"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 673,
														"name": "taxFeeTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "8224:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 674,
														"name": "_teamTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "8237:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8224:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "8224:24:0"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "taxFeeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "8259:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 678,
														"name": "_liquidityTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "8277:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8259:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "8259:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 682,
															"name": "_heisenVerseTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "8325:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 683,
															"name": "_marketingTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "8345:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 684,
															"name": "_teamTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8363:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 685,
															"name": "_liquidityTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "8376:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "UpdateTaxesFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "8309:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8309:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "EmitStatement",
												"src": "8304:89:0"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTaxesFees",
									"nameLocation": "7996:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "_heisenVerseTaxFee",
												"nameLocation": "8020:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "8012:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "_marketingTaxFee",
												"nameLocation": "8048:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "8040:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_teamTaxFee",
												"nameLocation": "8074:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "8066:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_liquidityTaxFee",
												"nameLocation": "8095:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "8087:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:101:0"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8121:0:0"
									},
									"scope": 1390,
									"src": "7987:414:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "8472:102:0",
										"statements": [
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 694,
														"name": "withdrawPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "8483:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 695,
														"name": "_withdrawPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "8499:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8483:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "8483:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 699,
															"name": "_withdrawPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "8551:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "UpdateWithdrawOptions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "8529:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "EmitStatement",
												"src": "8524:42:0"
											}
										]
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateWithdrawOptions",
									"nameLocation": "8418:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "_withdrawPrice",
												"nameLocation": "8448:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8440:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8439:24:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8472:0:0"
									},
									"scope": 1390,
									"src": "8409:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "8637:88:0",
										"statements": [
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "salesEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "8648:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "_salesEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "8663:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8648:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "8648:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 713,
															"name": "_salesEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8703:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 712,
														"name": "SalesState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "8692:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8692:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "EmitStatement",
												"src": "8687:30:0"
											}
										]
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateSalesStatus",
									"nameLocation": "8591:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "_salesEnabled",
												"nameLocation": "8614:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "8609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8609:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8608:20:0"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8637:0:0"
									},
									"scope": 1390,
									"src": "8582:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "8792:343:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 727,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8820:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8812:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8812:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8835:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8827:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8827:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 736,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8871:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SwishFish_$1390",
																				"typeString": "contract SwishFish"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SwishFish_$1390",
																				"typeString": "contract SwishFish"
																			}
																		],
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8863:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 734,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8863:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8863:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 733,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "8853:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8853:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "8803:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8803:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "8803:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 748,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 746,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8948:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8948:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8997:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9013:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 755,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9037:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9029:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 753,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9029:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9029:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "333030",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9077:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "300"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 757,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9057:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9063:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "9057:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9073:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2794,
																"src": "9057:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9057:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 741,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "8889:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2765",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8905:15:0",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2427,
															"src": "8889:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 744,
																"name": "bnb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "8929:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8889:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8889:203:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "8889:203:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 765,
															"name": "bnb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "9123:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "9108:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9108:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "EmitStatement",
												"src": "9103:24:0"
											}
										]
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "8742:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "8763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "bnb",
												"nameLocation": "8779:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8771:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8754:29:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8792:0:0"
									},
									"scope": 1390,
									"src": "8733:402:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "9236:1779:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9255:14:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 782,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "9266:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "isAnOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "9256:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9256:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e6572732063616e2774206d616b65207769746864726177616c73",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9271:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c70aa7dac05afdcc37899ab915937cb2f50b8965c39bd188a3887acfca21a7f4",
																"typeString": "literal_string \"Owners can't make withdrawals\""
															},
															"value": "Owners can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c70aa7dac05afdcc37899ab915937cb2f50b8965c39bd188a3887acfca21a7f4",
																"typeString": "literal_string \"Owners can't make withdrawals\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9247:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9247:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "9247:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "9322:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 790,
																	"name": "backend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "9328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9328:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9322:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261636b656e642063616e2774206d616b65207769746864726177616c73",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9339:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_087d903943e0111908d23dbd0bace84cd93f22f4d2e4354879c6c0ad8774b8cc",
																"typeString": "literal_string \"Backend can't make withdrawals\""
															},
															"value": "Backend can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_087d903943e0111908d23dbd0bace84cd93f22f4d2e4354879c6c0ad8774b8cc",
																"typeString": "literal_string \"Backend can't make withdrawals\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9314:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "9314:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "9391:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 798,
																"name": "addressHeisenDev",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "9397:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9391:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48656973656e2063616e2774206d616b65207769746864726177616c73",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9415:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82ebf0ed1affdc6bc676ebd4931d90ecfde5400124bfa6d66b92076f643976bf",
																"typeString": "literal_string \"Heisen can't make withdrawals\""
															},
															"value": "Heisen can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82ebf0ed1affdc6bc676ebd4931d90ecfde5400124bfa6d66b92076f643976bf",
																"typeString": "literal_string \"Heisen can't make withdrawals\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9383:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "9383:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "9466:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 805,
																"name": "addressMarketing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "9472:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9466:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536b796c65722063616e2774206d616b65207769746864726177616c73",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9490:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8462903eb2c1faab9c8e71b283a41fb43dcff3a398504e31f5571f4e28aab807",
																"typeString": "literal_string \"Skyler can't make withdrawals\""
															},
															"value": "Skyler can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8462903eb2c1faab9c8e71b283a41fb43dcff3a398504e31f5571f4e28aab807",
																"typeString": "literal_string \"Skyler can't make withdrawals\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9458:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "9458:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 811,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "9541:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 812,
																"name": "addressTeam",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "9547:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9541:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5465616d2063616e2774206d616b65207769746864726177616c73",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9560:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4e9192c23e6f9cd45406748560396a595dbab09597d8432d10f6cdf8b9fe498",
																"typeString": "literal_string \"Team can't make withdrawals\""
															},
															"value": "Team can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4e9192c23e6f9cd45406748560396a595dbab09597d8432d10f6cdf8b9fe498",
																"typeString": "literal_string \"Team can't make withdrawals\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9533:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "9533:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "9609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3735",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9616:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_75_by_1",
																	"typeString": "int_const 75"
																},
																"value": "75"
															},
															"src": "9609:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206665652063616e6e6f742065786365656420373525",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9620:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38ff6a08c02164c185f87c58e3e41fde8d362d51c111db731aa2015678688c19",
																"typeString": "literal_string \"The fee cannot exceed 75%\""
															},
															"value": "The fee cannot exceed 75%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38ff6a08c02164c185f87c58e3e41fde8d362d51c111db731aa2015678688c19",
																"typeString": "literal_string \"The fee cannot exceed 75%\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9601:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "9601:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 825,
																	"name": "_authorizedWithdraws",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "9667:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"id": 826,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "9688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9667:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9695:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9667:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206861732070656e64696e67205769746864726177616c73",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9698:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db601e28a9a212a678822aa4d67ad9873f3bc27745156eda75a77e92138f1176",
																"typeString": "literal_string \"User has pending Withdrawals\""
															},
															"value": "User has pending Withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db601e28a9a212a678822aa4d67ad9873f3bc27745156eda75a77e92138f1176",
																"typeString": "literal_string \"User has pending Withdrawals\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9659:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "9659:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "9748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 835,
																"name": "_maxTransactionWithdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "9758:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9748:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742063616e2774206578636565647320746865206d6178207472616e73616374696f6e20776974686472617720616d6f756e74",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9789:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78d04560e88fa98c9d1681cbefba44a9a270c44bdf20ffbc00add4b3113ec8e6",
																"typeString": "literal_string \"Amount can't exceeds the max transaction withdraw amount\""
															},
															"value": "Amount can't exceeds the max transaction withdraw amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78d04560e88fa98c9d1681cbefba44a9a270c44bdf20ffbc00add4b3113ec8e6",
																"typeString": "literal_string \"Amount can't exceeds the max transaction withdraw amount\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9740:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "9740:108:0"
											},
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "amountFee",
														"nameLocation": "9869:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "9861:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9901:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 844,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "9892:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 842,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "9881:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9888:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2874,
																"src": "9881:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9881:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9897:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2891,
														"src": "9881:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9881:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9861:44:0"
											},
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "totalTaxes",
														"nameLocation": "9924:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "9916:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 852,
															"name": "taxFeeHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "9937:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 853,
															"name": "taxFeeMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "9955:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9937:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 855,
														"name": "taxFeeTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "9973:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9937:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9916:67:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "totalTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "9998:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10012:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9998:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "10103:861:0",
													"statements": [
														{
															"assignments": [
																870
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 870,
																	"mutability": "mutable",
																	"name": "currentTaxFeeHeisenDev",
																	"nameLocation": "10126:22:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 971,
																	"src": "10118:30:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 869,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10118:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 878,
															"initialValue": {
																"arguments": [
																	{
																		"id": 876,
																		"name": "totalTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "10180:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10171:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"id": 871,
																				"name": "taxFeeHeisenDev",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "10151:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10167:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "10151:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10151:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10176:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "10151:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10151:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10118:73:0"
														},
														{
															"assignments": [
																880
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 880,
																	"mutability": "mutable",
																	"name": "currentTaxFeeMarketing",
																	"nameLocation": "10214:22:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 971,
																	"src": "10206:30:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 879,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10206:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 888,
															"initialValue": {
																"arguments": [
																	{
																		"id": 886,
																		"name": "totalTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "10268:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10259:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"id": 881,
																				"name": "taxFeeMarketing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 88,
																				"src": "10239:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10255:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "10239:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10239:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10264:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "10239:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10239:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10206:73:0"
														},
														{
															"assignments": [
																890
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 890,
																	"mutability": "mutable",
																	"name": "currentTaxFeeTeam",
																	"nameLocation": "10302:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 971,
																	"src": "10294:25:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 889,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10294:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 898,
															"initialValue": {
																"arguments": [
																	{
																		"id": 896,
																		"name": "totalTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "10346:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10337:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"id": 891,
																				"name": "taxFeeTeam",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 91,
																				"src": "10322:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10333:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "10322:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10322:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10342:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "10322:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10322:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10294:63:0"
														},
														{
															"assignments": [
																900
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 900,
																	"mutability": "mutable",
																	"name": "heisenVerseAmount",
																	"nameLocation": "10380:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 971,
																	"src": "10372:25:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 899,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10372:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 908,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10442:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 903,
																				"name": "currentTaxFeeHeisenDev",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 870,
																				"src": "10414:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 901,
																				"name": "amountFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "10400:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10410:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "10400:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10400:37:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10438:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "10400:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10400:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10372:74:0"
														},
														{
															"assignments": [
																910
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 910,
																	"mutability": "mutable",
																	"name": "marketingAmount",
																	"nameLocation": "10469:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 971,
																	"src": "10461:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 909,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10461:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 918,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10529:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 913,
																				"name": "currentTaxFeeMarketing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 880,
																				"src": "10501:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 911,
																				"name": "amountFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "10487:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10497:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "10487:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10487:37:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10525:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "10487:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10487:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10461:72:0"
														},
														{
															"assignments": [
																920
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 920,
																	"mutability": "mutable",
																	"name": "teamAmount",
																	"nameLocation": "10556:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 971,
																	"src": "10548:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 919,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10548:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 928,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10606:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 923,
																				"name": "currentTaxFeeTeam",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "10583:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 921,
																				"name": "amountFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "10569:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10579:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2874,
																			"src": "10569:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10569:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10602:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2891,
																	"src": "10569:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10569:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10548:62:0"
														},
														{
															"expression": {
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 929,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "10627:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 932,
																			"name": "heisenVerseAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "10647:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 930,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "10636:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10643:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2811,
																		"src": "10636:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10636:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10627:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"nodeType": "ExpressionStatement",
															"src": "10627:38:0"
														},
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 936,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "10680:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 939,
																			"name": "marketingAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "10700:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 937,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "10689:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10696:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2811,
																		"src": "10689:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10689:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10680:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "10680:36:0"
														},
														{
															"expression": {
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 943,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "10731:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 946,
																			"name": "teamAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "10751:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 944,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "10740:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10747:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2811,
																		"src": "10740:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10740:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10731:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "10731:31:0"
														},
														{
															"expression": {
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 950,
																	"name": "_poolHeisenDev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10779:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 953,
																			"name": "heisenVerseAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "10815:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 951,
																			"name": "_poolHeisenDev",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "10796:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10811:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2794,
																		"src": "10796:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10796:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10779:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 956,
															"nodeType": "ExpressionStatement",
															"src": "10779:54:0"
														},
														{
															"expression": {
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 957,
																	"name": "_poolMarketing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10848:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 960,
																			"name": "marketingAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "10884:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 958,
																			"name": "_poolMarketing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "10865:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10880:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2794,
																		"src": "10865:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10865:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10848:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "10848:52:0"
														},
														{
															"expression": {
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 964,
																	"name": "_poolTeam",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "10915:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 967,
																			"name": "teamAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "10941:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 965,
																			"name": "_poolTeam",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 104,
																			"src": "10927:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10937:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2794,
																		"src": "10927:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10927:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10915:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 970,
															"nodeType": "ExpressionStatement",
															"src": "10915:37:0"
														}
													]
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "9994:970:0",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "10015:73:0",
													"statements": [
														{
															"expression": {
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 861,
																	"name": "_poolHeisenDev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10030:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 864,
																			"name": "amountFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "10066:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 862,
																			"name": "_poolHeisenDev",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "10047:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10062:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2794,
																		"src": "10047:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10047:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10030:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "10030:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 973,
															"name": "_authorizedWithdraws",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "10974:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 975,
														"indexExpression": {
															"id": 974,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "10995:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10974:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 976,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "11001:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10974:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "10974:33:0"
											}
										]
									},
									"functionSelector": "8198c341",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 777,
												"name": "onlyBackend",
												"nameLocations": [
													"9224:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1492,
												"src": "9224:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9224:11:0"
										}
									],
									"name": "withdrawAuthorization",
									"nameLocation": "9152:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9182:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "9174:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9194:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "9186:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "9210:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "9202:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9173:41:0"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9236:0:0"
									},
									"scope": 1390,
									"src": "9143:1872:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "11099:55:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 987,
														"name": "_authorizedWithdraws",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "11117:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 989,
													"indexExpression": {
														"id": 988,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "11138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11117:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 986,
												"id": 990,
												"nodeType": "Return",
												"src": "11110:36:0"
											}
										]
									},
									"functionSelector": "fe7441e7",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAllowance",
									"nameLocation": "11032:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "11050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11049:17:0"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "11090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11089:9:0"
									},
									"scope": 1390,
									"src": "11023:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "11240:371:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 999,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11261:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11255:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11309:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1001,
																	"name": "_accountWithdrawalLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "11273:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1003,
																"indexExpression": {
																	"id": 1002,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "11296:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11273:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11305:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2794,
															"src": "11273:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11273:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11255:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "11251:193:0",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "11317:127:0",
													"statements": [
														{
															"expression": {
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1008,
																		"name": "_accountWithdrawalLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "11332:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1010,
																	"indexExpression": {
																		"id": 1009,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "11355:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11332:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1011,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11366:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11372:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11366:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11332:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1014,
															"nodeType": "ExpressionStatement",
															"src": "11332:49:0"
														},
														{
															"expression": {
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1015,
																		"name": "_accountWithdrawalCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "11396:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1017,
																	"indexExpression": {
																		"id": 1016,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "11420:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11396:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11396:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "11396:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1023,
															"name": "_accountWithdrawalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "11454:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"id": 1024,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "11478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11454:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1026,
																	"name": "_accountWithdrawalCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "11489:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1028,
																"indexExpression": {
																	"id": 1027,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "11513:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11489:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11522:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2794,
															"src": "11489:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11489:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11454:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "11454:74:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1034,
																	"name": "_accountWithdrawalCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "11547:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1036,
																"indexExpression": {
																	"id": 1035,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "11571:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11547:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1037,
																"name": "_maxWithdrawalCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "11583:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11547:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1039,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11546:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 998,
												"id": 1040,
												"nodeType": "Return",
												"src": "11539:64:0"
											}
										]
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUnderDailyWithdrawalLimit",
									"nameLocation": "11171:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11207:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "11199:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11198:17:0"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "11234:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11233:6:0"
									},
									"scope": 1390,
									"src": "11162:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "11656:447:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1047,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "11703:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11703:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1046,
																"name": "isUnderDailyWithdrawalLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "11675:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) returns (bool)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11675:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e65207769746864726177616c2070657220646179",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11718:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa3e1a48a111edc3918551979db0c35d329138c58eca1178380e7c6dc08484aa",
																"typeString": "literal_string \"You cannot make more than one withdrawal per day\""
															},
															"value": "You cannot make more than one withdrawal per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa3e1a48a111edc3918551979db0c35d329138c58eca1178380e7c6dc08484aa",
																"typeString": "literal_string \"You cannot make more than one withdrawal per day\""
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11667:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "11667:102:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1054,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11788:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11792:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "11788:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"id": 1056,
																		"name": "withdrawPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "11802:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11801:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11788:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520616d6f756e742073656e74206973206e6f7420657175616c20746f2074686520424e4220616d6f756e7420726571756972656420666f72207769746864726177",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11818:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63fc0d5f4edc6e17f1f372aebf68cd18310995f5d1e15dca27497b81fbf4ab72",
																"typeString": "literal_string \"The amount sent is not equal to the BNB amount required for withdraw\""
															},
															"value": "The amount sent is not equal to the BNB amount required for withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63fc0d5f4edc6e17f1f372aebf68cd18310995f5d1e15dca27497b81fbf4ab72",
																"typeString": "literal_string \"The amount sent is not equal to the BNB amount required for withdraw\""
															}
														],
														"id": 1053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11780:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "11780:109:0"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "11908:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "11900:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"baseExpression": {
														"id": 1064,
														"name": "_authorizedWithdraws",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "11917:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1067,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1065,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "11938:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11938:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11917:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11900:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1074,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11986:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1390",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11978:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11978:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11978:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1076,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "11993:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11993:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "12007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1069,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "11962:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1390_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11968:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1948,
														"src": "11962:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11962:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "11962:52:0"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1081,
															"name": "_authorizedWithdraws",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "12025:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1082,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "12046:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12046:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12025:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12025:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "12025:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1089,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "12088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1088,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "12079:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12079:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "EmitStatement",
												"src": "12074:21:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11628:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11636:2:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11656:0:0"
									},
									"scope": 1390,
									"src": "11619:484:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "12561:1270:0",
										"statements": [
											{
												"condition": {
													"id": 1122,
													"name": "_updateWithdrawOptions",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1101,
													"src": "12576:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "12572:161:0",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "12600:133:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1124,
																			"name": "withdrawPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 53,
																			"src": "12623:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "35303030303030303030303030303030",
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12640:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5000000000000000_by_1",
																				"typeString": "int_const 5000000000000000"
																			},
																			"value": "5000000000000000"
																		},
																		"src": "12623:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d756c74695369676e617475726557616c6c65743a204d757374206b656570203530303030303030303030303030303020576569206f72206c657373",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12658:62:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b1af6e9e78247a111ba17a159dd4360ea3481c7f2e76797f5cf69bbf3bed489e",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\""
																		},
																		"value": "MultiSignatureWallet: Must keep 5000000000000000 Wei or less"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b1af6e9e78247a111ba17a159dd4360ea3481c7f2e76797f5cf69bbf3bed489e",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\""
																		}
																	],
																	"id": 1123,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12615:106:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1129,
															"nodeType": "ExpressionStatement",
															"src": "12615:106:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1132,
													"name": "_updateTaxesFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "12747:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "12743:241:0",
												"trueBody": {
													"id": 1150,
													"nodeType": "Block",
													"src": "12765:219:0",
													"statements": [
														{
															"assignments": [
																1134
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1134,
																	"mutability": "mutable",
																	"name": "sellTotalFees",
																	"nameLocation": "12788:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1150,
																	"src": "12780:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1133,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12780:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1142,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1135,
																			"name": "_heisenVerseTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "12804:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1136,
																			"name": "_marketingTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "12825:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12804:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1138,
																		"name": "_teamTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "12844:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12804:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1140,
																	"name": "_liquidityTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "12858:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12804:70:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12780:94:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1144,
																			"name": "sellTotalFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "12897:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12914:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "12897:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d756c74695369676e617475726557616c6c65743a204d757374206b656570206665657320617420313025206f72206c657373",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12918:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_64d7da9d3627bed486e3571b002047ac22bd302023ad9ca8c7b8066b1d42a5ac",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep fees at 10% or less\""
																		},
																		"value": "MultiSignatureWallet: Must keep fees at 10% or less"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_64d7da9d3627bed486e3571b002047ac22bd302023ad9ca8c7b8066b1d42a5ac",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep fees at 10% or less\""
																		}
																	],
																	"id": 1143,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12889:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12889:83:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1149,
															"nodeType": "ExpressionStatement",
															"src": "12889:83:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1152,
													"name": "_transferBackend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1115,
													"src": "12998:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "12994:142:0",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13016:120:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "_backendAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "13039:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13066:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13058:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13058:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13058:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "13039:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220697320746865207a65726f2061646472657373",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13070:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f9a40112b701da5565c96754f9ce4cac286167c1b4f1dd9ec7cfbe39e7eac9ee",
																			"typeString": "literal_string \"MultiSignatureWallet: new owner is the zero address\""
																		},
																		"value": "MultiSignatureWallet: new owner is the zero address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f9a40112b701da5565c96754f9ce4cac286167c1b4f1dd9ec7cfbe39e7eac9ee",
																			"typeString": "literal_string \"MultiSignatureWallet: new owner is the zero address\""
																		}
																	],
																	"id": 1153,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13031:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13031:93:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "ExpressionStatement",
															"src": "13031:93:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1169,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "13189:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13189:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13222:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"id": 1172,
																	"name": "_updateEggSales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "13257:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1173,
																	"name": "_salesEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "13297:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1174,
																	"name": "_swapAndAddLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "13342:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1175,
																	"name": "_updateWithdrawOptions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "13396:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1176,
																	"name": "_withdrawPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "13444:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1177,
																	"name": "_updateTaxesFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "13486:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1178,
																	"name": "_heisenVerseTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "13532:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1179,
																	"name": "_marketingTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "13578:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1180,
																	"name": "_teamTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "13617:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1181,
																	"name": "_liquidityTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "13656:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1182,
																	"name": "_transferBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "13700:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1183,
																	"name": "_backendAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "13743:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1168,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3036,
																"src": "13161:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$3036_storage_ptr_$",
																	"typeString": "type(struct MultiSignature.Proposal storage pointer)"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"13181:6:0",
																"13212:8:0",
																"13238:17:0",
																"13283:12:0",
																"13321:19:0",
																"13373:21:0",
																"13429:13:0",
																"13469:15:0",
																"13513:17:0",
																"13561:15:0",
																"13605:10:0",
																"13639:15:0",
																"13683:15:0",
																"13727:14:0"
															],
															"names": [
																"author",
																"executed",
																"updateSalesStatus",
																"salesEnabled",
																"swapAndAddLiquidity",
																"updateWithdrawOptions",
																"withdrawPrice",
																"updateTaxesFees",
																"heisenVerseTaxFee",
																"marketingTaxFee",
																"teamTaxFee",
																"liquidityTaxFee",
																"transferBackend",
																"backendAddress"
															],
															"nodeType": "FunctionCall",
															"src": "13161:609:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$3036_memory_ptr",
																"typeString": "struct MultiSignature.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$3036_memory_ptr",
																"typeString": "struct MultiSignature.Proposal memory"
															}
														],
														"expression": {
															"id": 1165,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3040,
															"src": "13146:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage",
																"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13156:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "13146:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$3036_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MultiSignature.Proposal storage ref[] storage pointer,struct MultiSignature.Proposal storage ref)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13146:625:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "13146:625:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1188,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "13802:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13812:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13802:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13821:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13802:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"name": "SubmitProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2995,
														"src": "13787:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13787:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "EmitStatement",
												"src": "13782:41:0"
											}
										]
									},
									"functionSelector": "dce165a6",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1119,
												"name": "onlyOwner",
												"nameLocations": [
													"12551:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "12551:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12551:9:0"
										}
									],
									"name": "submitProposal",
									"nameLocation": "12118:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "_updateEggSales",
												"nameLocation": "12148:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12143:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "_salesEnabled",
												"nameLocation": "12179:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12174:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "_swapAndAddLiquidity",
												"nameLocation": "12208:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12203:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "_updateWithdrawOptions",
												"nameLocation": "12244:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12239:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12239:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_withdrawPrice",
												"nameLocation": "12285:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12277:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_updateTaxesFees",
												"nameLocation": "12315:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12310:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "_heisenVerseTaxFee",
												"nameLocation": "12350:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12342:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "_marketingTaxFee",
												"nameLocation": "12387:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12379:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "_teamTaxFee",
												"nameLocation": "12422:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12414:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "_liquidityTaxFee",
												"nameLocation": "12452:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12444:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "_transferBackend",
												"nameLocation": "12484:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12479:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "_backendAddress",
												"nameLocation": "12519:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12511:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12132:409:0"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12561:0:0"
									},
									"scope": 1390,
									"src": "12109:1722:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "14000:127:0",
										"statements": [
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1211,
																"name": "proposalApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3046,
																"src": "14011:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1215,
															"indexExpression": {
																"id": 1212,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "14028:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14011:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1216,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1213,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "14041:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14041:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14011:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14057:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "14011:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "14011:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1221,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "14093:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14093:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "_proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "14107:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "ApproveProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "14077:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14077:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "EmitStatement",
												"src": "14072:47:0"
											}
										]
									},
									"functionSelector": "98951b56",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1200,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1199,
												"name": "onlyOwner",
												"nameLocations": [
													"13891:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "13891:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13891:9:0"
										},
										{
											"arguments": [
												{
													"id": 1202,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1197,
													"src": "13916:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "proposalExists",
												"nameLocations": [
													"13901:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3064,
												"src": "13901:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13901:27:0"
										},
										{
											"arguments": [
												{
													"id": 1205,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1197,
													"src": "13949:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1204,
												"name": "proposalNotApproved",
												"nameLocations": [
													"13929:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3081,
												"src": "13929:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13929:32:0"
										},
										{
											"arguments": [
												{
													"id": 1208,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1197,
													"src": "13982:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1207,
												"name": "proposalNotExecuted",
												"nameLocations": [
													"13962:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3096,
												"src": "13962:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13962:32:0"
										}
									],
									"name": "approveProposal",
									"nameLocation": "13848:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "13869:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "13864:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13863:18:0"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14000:0:0"
									},
									"scope": 1390,
									"src": "13839:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "14211:235:0",
										"statements": [
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "14230:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "14222:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"initialValue": {
													"hexValue": "30",
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14238:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14222:17:0"
											},
											{
												"body": {
													"id": 1261,
													"nodeType": "Block",
													"src": "14297:119:0",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1248,
																		"name": "proposalApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3046,
																		"src": "14316:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 1250,
																	"indexExpression": {
																		"id": 1249,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "14333:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14316:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1254,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 1252,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1239,
																			"src": "14355:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1251,
																		"name": "getOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "14346:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14346:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14316:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1260,
															"nodeType": "IfStatement",
															"src": "14312:93:0",
															"trueBody": {
																"id": 1259,
																"nodeType": "Block",
																"src": "14360:45:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1255,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "14379:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14388:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "14379:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1258,
																		"nodeType": "ExpressionStatement",
																		"src": "14379:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1241,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "14263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1242,
															"name": "requiredConfirmations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "14267:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14267:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14263:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"initializationExpression": {
													"assignments": [
														1239
													],
													"declarations": [
														{
															"constant": false,
															"id": 1239,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14260:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1262,
															"src": "14255:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1238,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "14255:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1240,
													"nodeType": "VariableDeclarationStatement",
													"src": "14255:6:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14292:3:0",
														"subExpression": {
															"id": 1245,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "14292:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1247,
													"nodeType": "ExpressionStatement",
													"src": "14292:3:0"
												},
												"nodeType": "ForStatement",
												"src": "14250:166:0"
											},
											{
												"expression": {
													"id": 1263,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "14433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1233,
												"id": 1264,
												"nodeType": "Return",
												"src": "14426:12:0"
											}
										]
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovalCount",
									"nameLocation": "14144:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "14167:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "14162:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14161:18:0"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "14202:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14201:9:0"
									},
									"scope": 1390,
									"src": "14135:311:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "14567:848:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1279,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "14604:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1278,
																	"name": "_getApprovalCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "14586:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14586:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1281,
																	"name": "requiredConfirmations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "14620:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14620:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14586:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a20617070726f76616c73206973206c657373207468616e207265717569726564",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14645:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_953de992fe3126690fbccd56c3eb41bf5101b499e0b29d5ebef10e29539c7131",
																"typeString": "literal_string \"MultiSignatureWallet: approvals is less than required\""
															},
															"value": "MultiSignatureWallet: approvals is less than required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_953de992fe3126690fbccd56c3eb41bf5101b499e0b29d5ebef10e29539c7131",
																"typeString": "literal_string \"MultiSignatureWallet: approvals is less than required\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14578:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "14578:123:0"
											},
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "14729:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1349,
														"src": "14712:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
															"typeString": "struct MultiSignature.Proposal"
														},
														"typeName": {
															"id": 1288,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1287,
																"name": "Proposal",
																"nameLocations": [
																	"14712:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3036,
																"src": "14712:8:0"
															},
															"referencedDeclaration": 3036,
															"src": "14712:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																"typeString": "struct MultiSignature.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"baseExpression": {
														"id": 1290,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3040,
														"src": "14740:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage",
															"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
														}
													},
													"id": 1292,
													"indexExpression": {
														"id": 1291,
														"name": "_proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "14750:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14740:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$3036_storage",
														"typeString": "struct MultiSignature.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14712:50:0"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1294,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "14773:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																"typeString": "struct MultiSignature.Proposal storage pointer"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14782:8:0",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3011,
														"src": "14773:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14793:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "14773:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "14773:24:0"
											},
											{
												"condition": {
													"expression": {
														"id": 1300,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "14812:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14821:17:0",
													"memberName": "updateSalesStatus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3013,
													"src": "14812:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "14808:99:0",
												"trueBody": {
													"id": 1307,
													"nodeType": "Block",
													"src": "14840:67:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1303,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "14873:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14882:12:0",
																		"memberName": "salesEnabled",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3015,
																		"src": "14873:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1302,
																	"name": "updateSalesStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "14855:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
																		"typeString": "function (bool)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14855:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1306,
															"nodeType": "ExpressionStatement",
															"src": "14855:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1309,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "14921:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14930:19:0",
													"memberName": "swapAndAddLiquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3017,
													"src": "14921:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1315,
												"nodeType": "IfStatement",
												"src": "14917:82:0",
												"trueBody": {
													"id": 1314,
													"nodeType": "Block",
													"src": "14951:48:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1311,
																	"name": "swapAndAddLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "14966:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14966:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1313,
															"nodeType": "ExpressionStatement",
															"src": "14966:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1316,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "15013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15022:21:0",
													"memberName": "updateWithdrawOptions",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3019,
													"src": "15013:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "15009:108:0",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "15045:72:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1319,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "15082:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15091:13:0",
																		"memberName": "withdrawPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3021,
																		"src": "15082:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1318,
																	"name": "updateWithdrawOptions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "15060:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15060:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "15060:45:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1325,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "15131:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15140:15:0",
													"memberName": "updateTaxesFees",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3023,
													"src": "15131:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "15127:173:0",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "15157:143:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1328,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "15188:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15197:17:0",
																		"memberName": "heisenVerseTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3025,
																		"src": "15188:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1330,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "15216:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15225:15:0",
																		"memberName": "marketingTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3027,
																		"src": "15216:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1332,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "15242:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15251:10:0",
																		"memberName": "teamTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "15242:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1334,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "15263:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15272:15:0",
																		"memberName": "liquidityTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3031,
																		"src": "15263:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1327,
																	"name": "updateTaxesFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "15172:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15172:116:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1337,
															"nodeType": "ExpressionStatement",
															"src": "15172:116:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1340,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "15314:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15323:15:0",
													"memberName": "transferBackend",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3033,
													"src": "15314:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "15310:98:0",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "15340:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1343,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "15372:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15381:14:0",
																		"memberName": "backendAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3035,
																		"src": "15372:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1342,
																	"name": "_transferBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "15355:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15355:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1346,
															"nodeType": "ExpressionStatement",
															"src": "15355:41:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1271,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1268,
													"src": "14521:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1270,
												"name": "proposalExists",
												"nameLocations": [
													"14506:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3064,
												"src": "14506:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14506:27:0"
										},
										{
											"arguments": [
												{
													"id": 1274,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1268,
													"src": "14554:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1273,
												"name": "proposalNotExecuted",
												"nameLocations": [
													"14534:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3096,
												"src": "14534:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14534:32:0"
										}
									],
									"name": "executeProposal",
									"nameLocation": "14463:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "14484:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "14479:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14478:18:0"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14567:0:0"
									},
									"scope": 1390,
									"src": "14454:961:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "15550:240:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1364,
																	"name": "proposalApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3046,
																	"src": "15569:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(uint256 => mapping(address => bool))"
																	}
																},
																"id": 1366,
																"indexExpression": {
																	"id": 1365,
																	"name": "_proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "15586:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15569:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1369,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1367,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "15599:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15599:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15569:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206973206e6f7420617070726f766564",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15614:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16bf0dfdf621e13211addd9bc2d05822a44f1a962fe2989d13a49a0ab872e198",
																"typeString": "literal_string \"MultiSignatureWallet: Proposal is not approved\""
															},
															"value": "MultiSignatureWallet: Proposal is not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16bf0dfdf621e13211addd9bc2d05822a44f1a962fe2989d13a49a0ab872e198",
																"typeString": "literal_string \"MultiSignatureWallet: Proposal is not approved\""
															}
														],
														"id": 1363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15561:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "15561:102:0"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1373,
																"name": "proposalApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3046,
																"src": "15674:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1377,
															"indexExpression": {
																"id": 1374,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "15691:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15674:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1375,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "15704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15704:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15674:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15720:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "15674:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "15674:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "15756:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15756:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1385,
															"name": "_proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "15770:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"name": "RevokeProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3007,
														"src": "15741:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15741:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "EmitStatement",
												"src": "15736:46:0"
											}
										]
									},
									"functionSelector": "85a6a091",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1355,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1354,
												"name": "onlyOwner",
												"nameLocations": [
													"15474:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "15474:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15474:9:0"
										},
										{
											"arguments": [
												{
													"id": 1357,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "15499:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "proposalExists",
												"nameLocations": [
													"15484:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3064,
												"src": "15484:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15484:27:0"
										},
										{
											"arguments": [
												{
													"id": 1360,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "15532:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1359,
												"name": "proposalNotExecuted",
												"nameLocations": [
													"15512:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3096,
												"src": "15512:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15512:32:0"
										}
									],
									"name": "revokeProposal",
									"nameLocation": "15432:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "15452:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "15447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15447:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15446:18:0"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15550:0:0"
									},
									"scope": 1390,
									"src": "15423:367:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "348:15445:0",
							"usedErrors": []
						}
					],
					"src": "79:15716:0"
				},
				"id": 0
			},
			"access/Ownable.sol": {
				"ast": {
					"absolutePath": "access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2983
						],
						"MultiSignature": [
							3097
						],
						"Ownable": [
							1593
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1392,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:1"
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2984,
							"src": "106:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "utils/MultiSignature.sol",
							"file": "../utils/MultiSignature.sol",
							"id": 1394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 3098,
							"src": "138:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1396,
										"name": "Context",
										"nameLocations": [
											"706:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2983,
										"src": "706:7:1"
									},
									"id": 1397,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:1"
								},
								{
									"baseName": {
										"id": 1398,
										"name": "MultiSignature",
										"nameLocations": [
											"715:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3097,
										"src": "715:14:1"
									},
									"id": 1399,
									"nodeType": "InheritanceSpecifier",
									"src": "715:14:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1395,
								"nodeType": "StructuredDocumentation",
								"src": "179:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593,
								3097,
								2983
							],
							"name": "Ownable",
							"nameLocation": "695:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1401,
									"mutability": "mutable",
									"name": "_backend",
									"nameLocation": "753:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "737:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1400,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "737:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1403,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "784:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "768:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1402,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1406,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "815:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "797:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1405,
										"nodeType": "ArrayTypeName",
										"src": "797:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1410,
									"mutability": "mutable",
									"name": "isOwner",
									"nameLocation": "862:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "829:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1409,
										"keyType": {
											"id": 1407,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "829:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1408,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "848:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1416,
									"name": "OwnershipTransferred",
									"nameLocation": "882:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "919:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "903:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "950:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "934:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:57:1"
									},
									"src": "876:84:1"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "1082:139:1",
										"statements": [
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "1101:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "1093:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1420,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1093:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1422,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "1113:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1113:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1093:32:1"
											},
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1425,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "1136:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1426,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "1145:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1136:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "1136:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1191:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1430,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1191:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1191:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1434,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "1203:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1429,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "1170:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "EmitStatement",
												"src": "1165:48:1"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "968:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1438,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:1"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:1"
									},
									"scope": 1593,
									"src": "1067:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "1349:32:1",
										"statements": [
											{
												"expression": {
													"id": 1444,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1403,
													"src": "1367:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1443,
												"id": 1445,
												"nodeType": "Return",
												"src": "1360:13:1"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "1229:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1311:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:1"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1340:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:9:1"
									},
									"scope": 1593,
									"src": "1302:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "1452:40:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1452,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1478:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1470:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1454,
												"nodeType": "Return",
												"src": "1463:21:1"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requiredConfirmations",
									"nameLocation": "1396:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:2:1"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1443:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:9:1"
									},
									"scope": 1593,
									"src": "1387:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "1624:34:1",
										"statements": [
											{
												"expression": {
													"id": 1462,
													"name": "_backend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1401,
													"src": "1642:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1463,
												"nodeType": "Return",
												"src": "1635:15:1"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "1498:69:1",
										"text": " @dev Returns the address of the current backend."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backend",
									"nameLocation": "1582:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:2:1"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:9:1"
									},
									"scope": 1593,
									"src": "1573:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "1770:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1469,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "1789:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1472,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1470,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "1797:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1797:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1789:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572",
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b6d0df19670ce9d74d6071860854e74d491a0093c7d99e46fae002c9d4c3571",
																"typeString": "literal_string \"Ownable: caller is not an owner\""
															},
															"value": "Ownable: caller is not an owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b6d0df19670ce9d74d6071860854e74d491a0093c7d99e46fae002c9d4c3571",
																"typeString": "literal_string \"Ownable: caller is not an owner\""
															}
														],
														"id": 1468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1781:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "1781:66:1"
											},
											{
												"id": 1476,
												"nodeType": "PlaceholderStatement",
												"src": "1858:1:1"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1664:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1478,
									"name": "onlyOwner",
									"nameLocation": "1758:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:2:1"
									},
									"src": "1749:118:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1981:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1482,
																	"name": "backend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "2000:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2000:9:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1484,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "2013:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2013:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2000:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b656e64",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d46c274cbe8ea53ac374353ba303ce29994acea6c1d9e568f58b06c758508642",
																"typeString": "literal_string \"Ownable: caller is not the backend\""
															},
															"value": "Ownable: caller is not the backend"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d46c274cbe8ea53ac374353ba303ce29994acea6c1d9e568f58b06c758508642",
																"typeString": "literal_string \"Ownable: caller is not the backend\""
															}
														],
														"id": 1481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1992:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "1992:72:1"
											},
											{
												"id": 1490,
												"nodeType": "PlaceholderStatement",
												"src": "2075:1:1"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "1873:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1492,
									"name": "onlyBackend",
									"nameLocation": "1967:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:2:1"
									},
									"src": "1958:126:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "2219:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1500,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "2237:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1502,
													"indexExpression": {
														"id": 1501,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1503,
												"nodeType": "Return",
												"src": "2230:23:1"
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "2092:56:1",
										"text": " @dev Throws if account is an owner."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAnOwner",
									"nameLocation": "2163:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2181:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2173:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:17:1"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2213:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2213:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:6:1"
									},
									"scope": 1593,
									"src": "2154:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "2387:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1513,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "2405:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1515,
													"indexExpression": {
														"id": 1514,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "2413:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2405:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1516,
												"nodeType": "Return",
												"src": "2398:21:1"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "2267:49:1",
										"text": " @dev Returns owner by Index."
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2331:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2348:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2340:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2339:15:1"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2378:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:9:1"
									},
									"scope": 1593,
									"src": "2322:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "2644:186:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1525,
																"name": "newBackend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "2663:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2685:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2677:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2677:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2677:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2663:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2689:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2655:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "2655:75:1"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1534,
														"name": "_backend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "2741:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1535,
														"name": "newBackend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2752:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2741:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "2741:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2807:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2799:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1539,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2799:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2799:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1543,
															"name": "newBackend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "2811:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1538,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "2778:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2778:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "EmitStatement",
												"src": "2773:49:1"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "2433:149:1",
										"text": " @dev Transfers backend Control of the contract to a new account (`newBackend`).\n Can only be called by the current owner."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBackend",
									"nameLocation": "2597:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "newBackend",
												"nameLocation": "2622:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2614:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:20:1"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2644:0:1"
									},
									"scope": 1593,
									"src": "2588:242:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2988:284:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1554,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "3007:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3027:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1555,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3019:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3007:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a204f776e657220697320746865207a65726f2061646472657373",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3031:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d084375de230cc546b866c6253d28f96190ca0b9b5b3f51477039ab8d760478c",
																"typeString": "literal_string \"Ownable: Owner is the zero address\""
															},
															"value": "Ownable: Owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d084375de230cc546b866c6253d28f96190ca0b9b5b3f51477039ab8d760478c",
																"typeString": "literal_string \"Ownable: Owner is the zero address\""
															}
														],
														"id": 1553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "2999:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3087:18:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1564,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "3088:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1566,
																"indexExpression": {
																	"id": 1565,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "3096:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3088:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a204f776e6572206973206e6f7420756e69717565",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3107:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25754d6d77e7be9e21c65850febd109c14007cd1035042c8c674f5440eb9eba8",
																"typeString": "literal_string \"Ownable: Owner is not unique\""
															},
															"value": "Ownable: Owner is not unique"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25754d6d77e7be9e21c65850febd109c14007cd1035042c8c674f5440eb9eba8",
																"typeString": "literal_string \"Ownable: Owner is not unique\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "3079:59:1"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1571,
															"name": "isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "3149:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1573,
														"indexExpression": {
															"id": 1572,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "3157:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3149:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3169:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3149:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "3149:24:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1580,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "3197:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1577,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "3184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3192:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3184:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3184:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "3184:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3251:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3243:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1584,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3243:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3243:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1588,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "3255:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1583,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "3222:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "EmitStatement",
												"src": "3217:47:1"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "2836:100:1",
										"text": " @dev Set owners of the contract\n Is Only called in the contract creation"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addOwner",
									"nameLocation": "2951:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2969:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2961:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:18:1"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:0:1"
									},
									"scope": 1593,
									"src": "2942:330:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1594,
							"src": "686:2589:1",
							"usedErrors": []
						}
					],
					"src": "79:3198:1"
				},
				"id": 1
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							2983
						],
						"ERC20": [
							2203
						],
						"IERC20": [
							2281
						],
						"IERC20Metadata": [
							2306
						],
						"SafeMath": [
							2961
						]
					},
					"id": 2204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1596,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2984,
							"src": "135:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2282,
							"src": "167:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20Metadata.sol",
							"file": "../interfaces/IERC20Metadata.sol",
							"id": 1598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2307,
							"src": "203:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 1599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2962,
							"src": "247:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1601,
										"name": "Context",
										"nameLocations": [
											"1500:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2983,
										"src": "1500:7:2"
									},
									"id": 1602,
									"nodeType": "InheritanceSpecifier",
									"src": "1500:7:2"
								},
								{
									"baseName": {
										"id": 1603,
										"name": "IERC20",
										"nameLocations": [
											"1509:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2281,
										"src": "1509:6:2"
									},
									"id": 1604,
									"nodeType": "InheritanceSpecifier",
									"src": "1509:6:2"
								},
								{
									"baseName": {
										"id": 1605,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1517:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2306,
										"src": "1517:14:2"
									},
									"id": 1606,
									"nodeType": "InheritanceSpecifier",
									"src": "1517:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1600,
								"nodeType": "StructuredDocumentation",
								"src": "286:1194:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 2203,
							"linearizedBaseContracts": [
								2203,
								2306,
								2281,
								2983
							],
							"name": "ERC20",
							"nameLocation": "1491:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1609,
									"libraryName": {
										"id": 1607,
										"name": "SafeMath",
										"nameLocations": [
											"1545:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2961,
										"src": "1545:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1539:27:2",
									"typeName": {
										"id": 1608,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1558:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1613,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1610:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "1574:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1612,
										"keyType": {
											"id": 1610,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1582:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1574:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1611,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1593:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1619,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1684:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "1628:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1618,
										"keyType": {
											"id": 1614,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1636:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1628:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1617,
											"keyType": {
												"id": 1615,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1655:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1647:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1616,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1666:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1621,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1720:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "1704:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1620,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1704:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1623,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1756:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "1741:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1622,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1741:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1625,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "1768:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1624,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1768:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "2125:64:2",
										"statements": [
											{
												"expression": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1629,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "2136:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "537769736846697368",
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_f68be8422a71ef1830af3c898e131cb4c34a1c11d8da48fb9cdcfe95fb2bbc4c",
															"typeString": "literal_string \"SwishFish\""
														},
														"value": "SwishFish"
													},
													"src": "2136:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2136:19:2"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1633,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2166:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "534648",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2176:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_57e62b5e1d08aa47727608e4636dd9ac1fe1ed6c6bfabd35d03c71a8d352957c",
															"typeString": "literal_string \"SFH\""
														},
														"value": "SFH"
													},
													"src": "2166:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2166:15:2"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "1799:306:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1638,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:2:2"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:2"
									},
									"scope": 2203,
									"src": "2111:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2293
									],
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "2328:31:2",
										"statements": [
											{
												"expression": {
													"id": 1645,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1623,
													"src": "2346:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1644,
												"id": 1646,
												"nodeType": "Return",
												"src": "2339:12:2"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "2197:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2268:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1641,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2295:8:2"
									},
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2272:2:2"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "2313:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2313:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2312:15:2"
									},
									"scope": 2203,
									"src": "2259:100:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2299
									],
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "2549:33:2",
										"statements": [
											{
												"expression": {
													"id": 1655,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1625,
													"src": "2567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1656,
												"nodeType": "Return",
												"src": "2560:14:2"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "2367:105:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2487:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1651,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2516:8:2"
									},
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:2:2"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "2534:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2534:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:15:2"
									},
									"scope": 2203,
									"src": "2478:104:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2305
									],
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "3286:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3304:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1664,
												"id": 1666,
												"nodeType": "Return",
												"src": "3297:9:2"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "2590:625:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3230:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1661,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3261:8:2"
									},
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:2"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3279:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1662,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:7:2"
									},
									"scope": 2203,
									"src": "3221:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2230
									],
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "3449:38:2",
										"statements": [
											{
												"expression": {
													"id": 1675,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1621,
													"src": "3467:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1674,
												"id": 1676,
												"nodeType": "Return",
												"src": "3460:19:2"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "3322:51:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3388:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3422:8:2"
									},
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3399:2:2"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "3440:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:2"
									},
									"scope": 2203,
									"src": "3379:108:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2238
									],
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "3633:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1687,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "3651:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1689,
													"indexExpression": {
														"id": 1688,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "3661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3651:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1690,
												"nodeType": "Return",
												"src": "3644:25:2"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "3495:49:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3559:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1683,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3606:8:2"
									},
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3577:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3569:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:17:2"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3624:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:9:2"
									},
									"scope": 2203,
									"src": "3550:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2248
									],
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3968:108:2",
										"statements": [
											{
												"assignments": [
													1704
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3987:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "3979:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1703,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3979:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1705,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "3995:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3995:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3979:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1709,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "4028:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "4035:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "4039:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1708,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "4018:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "4018:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4064:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1702,
												"id": 1715,
												"nodeType": "Return",
												"src": "4057:11:2"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "3685:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3892:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3944:8:2"
									},
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3909:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3901:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3921:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3913:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3900:28:2"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3962:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3962:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:6:2"
									},
									"scope": 2203,
									"src": "3883:193:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2258
									],
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "4237:53:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1728,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "4255:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1730,
														"indexExpression": {
															"id": 1729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "4267:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4255:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1732,
													"indexExpression": {
														"id": 1731,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "4274:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4255:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1733,
												"nodeType": "Return",
												"src": "4248:34:2"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "4084:49:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4148:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1724,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4210:8:2"
									},
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4181:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4173:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4157:32:2"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4228:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:2"
									},
									"scope": 2203,
									"src": "4139:151:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2268
									],
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "4699:112:2",
										"statements": [
											{
												"assignments": [
													1747
												],
												"declarations": [
													{
														"constant": false,
														"id": 1747,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4718:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "4710:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1746,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1748,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "4726:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4726:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4710:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1752,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "4758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1753,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "4765:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1754,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "4774:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1751,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "4749:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "4749:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4799:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1745,
												"id": 1758,
												"nodeType": "Return",
												"src": "4792:11:2"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "4298:306:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4619:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4675:8:2"
									},
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4635:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4627:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4652:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4644:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4626:33:2"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4693:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4693:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4692:6:2"
									},
									"scope": 2203,
									"src": "4610:201:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2280
									],
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "5528:158:2",
										"statements": [
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5547:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1792,
														"src": "5539:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1773,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5539:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1775,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "5557:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5557:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5539:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "5596:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "5602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1781,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "5611:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1778,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "5580:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5580:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "5580:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1785,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "5639:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1786,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "5645:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1787,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "5649:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1784,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "5629:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5629:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "5629:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5674:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1772,
												"id": 1791,
												"nodeType": "Return",
												"src": "5667:11:2"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "4819:566:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5400:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1769,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5504:8:2"
									},
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5431:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "5423:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5454:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "5446:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5475:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "5467:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5412:76:2"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "5522:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5522:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:6:2"
									},
									"scope": 2203,
									"src": "5391:295:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "6189:147:2",
										"statements": [
											{
												"assignments": [
													1804
												],
												"declarations": [
													{
														"constant": false,
														"id": 1804,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6208:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "6200:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1803,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6200:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1807,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1805,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "6216:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6216:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6200:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1809,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "6248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1810,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "6255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1816,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "6294:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1812,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "6274:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1813,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "6281:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1811,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "6264:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address,address) view returns (uint256)"
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6264:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6290:3:2",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2794,
																"src": "6264:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6264:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1808,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "6239:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6239:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "6239:67:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6324:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1802,
												"id": 1821,
												"nodeType": "Return",
												"src": "6317:11:2"
											}
										]
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "5694:395:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6104:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6122:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6147:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6139:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6121:37:2"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6183:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6183:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6182:6:2"
									},
									"scope": 2203,
									"src": "6095:241:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "6938:328:2",
										"statements": [
											{
												"assignments": [
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6957:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "6949:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1833,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6949:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1835,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "6965:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6965:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6949:28:2"
											},
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6996:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "6988:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6988:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1844,
												"initialValue": {
													"arguments": [
														{
															"id": 1841,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "7025:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "7032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1840,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "7015:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6988:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1846,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "7059:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1847,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "7079:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7059:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7096:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7051:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "7051:85:2"
											},
											{
												"id": 1861,
												"nodeType": "UncheckedBlock",
												"src": "7143:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1853,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "7173:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1854,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "7180:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1857,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "7210:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1855,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "7189:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7206:3:2",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2811,
																		"src": "7189:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7189:37:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1852,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "7164:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7164:63:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1860,
														"nodeType": "ExpressionStatement",
														"src": "7164:63:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1832,
												"id": 1863,
												"nodeType": "Return",
												"src": "7247:11:2"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "6344:489:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6848:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6874:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6866:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6891:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6883:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6883:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6865:42:2"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6932:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6932:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6931:6:2"
									},
									"scope": 2203,
									"src": "6839:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "7848:725:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1876,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "7867:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7883:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7875:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1877,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7875:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7875:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7867:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7887:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7859:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "7859:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1886,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "7946:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7960:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7952:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1887,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7952:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7952:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7946:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7964:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7938:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "7938:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1896,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "8036:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8042:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8046:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1895,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "8015:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8015:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "8015:38:2"
											},
											{
												"assignments": [
													1902
												],
												"declarations": [
													{
														"constant": false,
														"id": 1902,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8074:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "8066:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8066:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"baseExpression": {
														"id": 1903,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "8088:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1905,
													"indexExpression": {
														"id": 1904,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "8098:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8088:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8066:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "8122:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1909,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "8137:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8122:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8145:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8114:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8114:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "8114:72:2"
											},
											{
												"id": 1934,
												"nodeType": "UncheckedBlock",
												"src": "8193:279:2",
												"statements": [
													{
														"expression": {
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1914,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "8214:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1916,
																"indexExpression": {
																	"id": 1915,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "8224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8214:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1919,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "8248:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1917,
																		"name": "fromBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8232:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8244:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2811,
																	"src": "8232:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8232:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8214:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1922,
														"nodeType": "ExpressionStatement",
														"src": "8214:41:2"
													},
													{
														"expression": {
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1923,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "8423:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1925,
																"indexExpression": {
																	"id": 1924,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "8433:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8423:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1930,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "8457:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1926,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "8439:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1928,
																		"indexExpression": {
																			"id": 1927,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "8449:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8439:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8453:3:2",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2794,
																	"src": "8439:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8439:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8423:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1933,
														"nodeType": "ExpressionStatement",
														"src": "8423:41:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1936,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "8498:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1937,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8504:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1938,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8508:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1935,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "8489:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8489:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "EmitStatement",
												"src": "8484:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "8548:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1943,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8554:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1944,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8558:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1941,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "8528:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8528:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "8528:37:2"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "7274:456:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7745:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7773:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "7765:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7796:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "7788:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7817:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "7809:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7754:76:2"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7848:0:2"
									},
									"scope": 2203,
									"src": "7736:837:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "8925:507:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1957,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "8944:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8963:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8955:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1958,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8955:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8955:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8944:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8967:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8936:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8936:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "ExpressionStatement",
												"src": "8936:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9043:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9035:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1967,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9035:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9035:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1971,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "9047:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1972,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "9056:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1966,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "9014:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9014:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "9014:49:2"
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1975,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "9076:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1978,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "9108:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1976,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "9091:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9104:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2794,
															"src": "9091:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9091:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9076:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "9076:39:2"
											},
											{
												"id": 1993,
												"nodeType": "UncheckedBlock",
												"src": "9122:189:2",
												"statements": [
													{
														"expression": {
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1982,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "9252:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1984,
																"indexExpression": {
																	"id": 1983,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "9262:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9252:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1989,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "9296:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1985,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "9273:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1987,
																		"indexExpression": {
																			"id": 1986,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1951,
																			"src": "9283:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9273:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9292:3:2",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2794,
																	"src": "9273:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9273:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9252:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1992,
														"nodeType": "ExpressionStatement",
														"src": "9252:51:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9343:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9335:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1995,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9335:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9335:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "9347:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2000,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "9356:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1994,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "9326:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9326:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "EmitStatement",
												"src": "9321:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9404:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9396:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9396:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9396:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2008,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "9408:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2009,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "9417:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2003,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "9376:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9376:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "9376:48:2"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "8581:273:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8869:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8883:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "8875:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "8892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8874:33:2"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8925:0:2"
									},
									"scope": 2203,
									"src": "8860:572:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "9830:626:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2022,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "9849:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9868:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9860:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2023,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9860:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9860:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9849:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9872:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9841:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9841:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "9841:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2032,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2037,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2031,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "9919:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9919:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "9919:49:2"
											},
											{
												"assignments": [
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9987:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "9979:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9979:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2045,
												"initialValue": {
													"baseExpression": {
														"id": 2042,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "10004:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2044,
													"indexExpression": {
														"id": 2043,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "10014:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10004:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9979:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2047,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "10041:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2048,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "10059:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10041:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10067:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 2046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10033:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10033:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "10033:71:2"
											},
											{
												"id": 2071,
												"nodeType": "UncheckedBlock",
												"src": "10115:222:2",
												"statements": [
													{
														"expression": {
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2053,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "10140:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2055,
																"indexExpression": {
																	"id": 2054,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "10150:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10140:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2060,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "10184:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 2056,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "10161:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2058,
																		"indexExpression": {
																			"id": 2057,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2016,
																			"src": "10171:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10161:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10180:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2811,
																	"src": "10161:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10161:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10140:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2063,
														"nodeType": "ExpressionStatement",
														"src": "10140:51:2"
													},
													{
														"expression": {
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2064,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "10286:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2067,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "10318:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2065,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1621,
																		"src": "10301:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10314:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2811,
																	"src": "10301:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10301:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10286:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2070,
														"nodeType": "ExpressionStatement",
														"src": "10286:39:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2073,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "10361:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10378:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10370:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2074,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10370:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "10382:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2072,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "10352:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10352:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "EmitStatement",
												"src": "10347:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2082,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "10420:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10437:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10429:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10429:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10429:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "10441:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2081,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "10400:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10400:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "10400:48:2"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "9440:319:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9774:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9788:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "9780:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9805:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "9797:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9779:33:2"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9830:0:2"
									},
									"scope": 2203,
									"src": "9765:691:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "11011:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2102,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "11030:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11047:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11039:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11039:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11039:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11030:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11051:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11022:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11022:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "11022:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "11109:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11128:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11120:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2113,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11120:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11120:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11109:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11132:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11101:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11101:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "11101:68:2"
											},
											{
												"expression": {
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2121,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "11182:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2124,
															"indexExpression": {
																"id": 2122,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "11194:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11182:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2125,
														"indexExpression": {
															"id": 2123,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "11201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11182:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2126,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "11212:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11182:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "11182:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2130,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "11243:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2131,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "11250:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "11259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "11234:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11234:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "EmitStatement",
												"src": "11229:37:2"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "10464:424:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10903:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10930:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "10922:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10954:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "10946:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10980:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "10972:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10911:82:2"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11011:0:2"
									},
									"scope": 2203,
									"src": "10894:380:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "11689:320:2",
										"statements": [
											{
												"assignments": [
													2147
												],
												"declarations": [
													{
														"constant": false,
														"id": 2147,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11708:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "11700:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11700:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"arguments": [
														{
															"id": 2149,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2139,
															"src": "11737:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2150,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "11744:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2148,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "11727:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11727:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11700:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2153,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "11767:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11792:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2155,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11792:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2154,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11787:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11787:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11801:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11787:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11767:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2178,
												"nodeType": "IfStatement",
												"src": "11763:239:2",
												"trueBody": {
													"id": 2177,
													"nodeType": "Block",
													"src": "11806:196:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2161,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2147,
																			"src": "11829:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2162,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "11849:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11829:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11857:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 2160,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11821:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11821:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2166,
															"nodeType": "ExpressionStatement",
															"src": "11821:68:2"
														},
														{
															"id": 2176,
															"nodeType": "UncheckedBlock",
															"src": "11900:91:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2168,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "11934:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2169,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2141,
																				"src": "11941:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 2172,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2143,
																						"src": "11971:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2170,
																						"name": "currentAllowance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2147,
																						"src": "11950:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11967:3:2",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2811,
																					"src": "11950:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11950:28:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2167,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "11925:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11925:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2175,
																	"nodeType": "ExpressionStatement",
																	"src": "11925:54:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "11282:277:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11574:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "11600:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11632:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "11624:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11624:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11658:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "11650:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11650:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11589:82:2"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11689:0:2"
									},
									"scope": 2203,
									"src": "11565:444:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2190,
										"nodeType": "Block",
										"src": "12732:2:2",
										"statements": []
									},
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "12017:586:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12618:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12657:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "12649:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12680:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "12672:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12701:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "12693:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12638:76:2"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12732:0:2"
									},
									"scope": 2203,
									"src": "12609:125:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "13460:2:2",
										"statements": []
									},
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "12742:590:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13347:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13385:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13377:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13408:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13400:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13429:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13421:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13366:76:2"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13460:0:2"
									},
									"scope": 2203,
									"src": "13338:124:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2204,
							"src": "1482:11983:2",
							"usedErrors": []
						}
					],
					"src": "108:13359:2"
				},
				"id": 2
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2281
						]
					},
					"id": 2282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2205,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2206,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2281,
							"linearizedBaseContracts": [
								2281
							],
							"name": "IERC20",
							"nameLocation": "220:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2215,
									"name": "Transfer",
									"nameLocation": "409:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "418:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "440:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "460:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:3"
									},
									"src": "403:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2216,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2224,
									"name": "Approval",
									"nameLocation": "646:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "655:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "678:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "703:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:3"
									},
									"src": "640:78:3"
								},
								{
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:3"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:3"
									},
									"scope": 2281,
									"src": "800:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "1002:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:3"
									},
									"scope": 2281,
									"src": "943:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "1251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "1263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:3"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "1297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:3"
									},
									"scope": 2281,
									"src": "1233:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "1606:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "1621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:3"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "1661:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:3"
									},
									"scope": 2281,
									"src": "1587:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "2356:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "2373:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:3"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "2407:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:3"
									},
									"scope": 2281,
									"src": "2339:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2754:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2777:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2798:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:3"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2838:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:3"
									},
									"scope": 2281,
									"src": "2722:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2282,
							"src": "210:2637:3",
							"usedErrors": []
						}
					],
					"src": "109:2740:3"
				},
				"id": 3
			},
			"interfaces/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2281
						],
						"IERC20Metadata": [
							2306
						]
					},
					"id": 2307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2283,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2307,
							"sourceUnit": 2282,
							"src": "140:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2286,
										"name": "IERC20",
										"nameLocations": [
											"316:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2281,
										"src": "316:6:4"
									},
									"id": 2287,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2285,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 2306,
							"linearizedBaseContracts": [
								2306,
								2281
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:4"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "431:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:4"
									},
									"scope": 2306,
									"src": "392:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:4"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "559:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:4"
									},
									"scope": 2306,
									"src": "518:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:4"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "698:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2302,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:4"
									},
									"scope": 2306,
									"src": "655:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2307,
							"src": "288:420:4",
							"usedErrors": []
						}
					],
					"src": "113:597:4"
				},
				"id": 4
			},
			"interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							2369
						]
					},
					"id": 2370,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2308,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2369,
							"linearizedBaseContracts": [
								2369
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "76:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 2318,
									"name": "PairCreated",
									"nameLocation": "107:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "135:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "119:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "159:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "143:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "175:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "167:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "181:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "181:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:68:5"
									},
									"src": "101:86:5"
								},
								{
									"functionSelector": "017e7e58",
									"id": 2323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "204:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:5"
									},
									"returnParameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "235:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:9:5"
									},
									"scope": 2369,
									"src": "195:49:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 2328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "259:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:2:5"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "296:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:9:5"
									},
									"scope": 2369,
									"src": "250:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 2337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "322:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "338:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "330:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "354:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "346:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:32:5"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "393:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "385:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:14:5"
									},
									"scope": 2369,
									"src": "313:86:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 2344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "414:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "423:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "423:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:6:5"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "460:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "452:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:14:5"
									},
									"scope": 2369,
									"src": "405:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 2349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "481:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:5"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "521:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "521:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:6:5"
									},
									"scope": 2369,
									"src": "472:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 2358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "544:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "563:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "555:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "579:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "571:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:32:5"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "613:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "605:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:14:5"
									},
									"scope": 2369,
									"src": "535:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 2363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "636:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "645:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:9:5"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 2369,
									"src": "627:36:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 2368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "678:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:5"
									},
									"scope": 2369,
									"src": "669:42:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2370,
							"src": "66:648:5",
							"usedErrors": []
						}
					],
					"src": "39:677:5"
				},
				"id": 5
			},
			"interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2677
						]
					},
					"id": 2678,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2371,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2677,
							"linearizedBaseContracts": [
								2677
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "76:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "111:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:6"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "144:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:9:6"
									},
									"scope": 2677,
									"src": "102:51:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "168:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:6"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "198:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:9:6"
									},
									"scope": 2677,
									"src": "159:48:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 2406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "224:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "255:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "247:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "280:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "272:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "302:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "297:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "332:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "327:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "362:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "357:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "388:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "383:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "417:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "409:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "435:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "430:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:214:6"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "474:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "469:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "469:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "488:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "483:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "502:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "497:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "497:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:44:6"
									},
									"scope": 2677,
									"src": "215:298:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 2427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "528:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "562:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "554:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "583:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "578:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "617:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "612:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "612:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "647:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "642:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "642:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "678:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "670:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "696:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "691:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "691:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:168:6"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "743:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "738:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "738:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "761:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "756:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "756:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "777:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "772:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:50:6"
									},
									"scope": 2677,
									"src": "519:269:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 2448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "803:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "884:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "879:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "879:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "909:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "904:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "935:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "964:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "956:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "982:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "977:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "977:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:179:6"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1021:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "1016:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "1030:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1030:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:28:6"
									},
									"scope": 2677,
									"src": "794:250:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 2467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1059:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1096:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1088:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1117:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1112:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1112:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1142:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1137:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1137:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1172:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1167:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1167:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1195:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1221:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1216:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1216:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:159:6"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1260:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1255:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1255:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1278:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1273:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1273:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:34:6"
									},
									"scope": 2677,
									"src": "1050:239:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1304:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1348:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1340:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1373:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1365:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1395:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1390:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1390:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1420:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1415:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1415:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1446:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1441:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1441:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1475:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1467:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1493:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1488:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1488:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1517:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1512:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1512:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1535:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1529:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2484,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1529:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1546:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1538:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1557:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1549:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:236:6"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1584:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1584:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1603:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1598:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1598:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:28:6"
									},
									"scope": 2677,
									"src": "1295:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 2523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1627:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1674:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1666:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1695:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1690:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1720:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1715:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1715:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1750:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1745:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1745:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1781:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1773:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1799:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1794:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1794:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1823:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1818:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1818:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2511,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1835:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1852:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1844:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1863:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1855:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2515,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:216:6"
									},
									"returnParameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1895:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1890:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1890:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1913:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "1908:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:34:6"
									},
									"scope": 2677,
									"src": "1618:306:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1939:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1979:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "1974:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2003:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "1998:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1998:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2045:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2026:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2528,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2026:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2529,
													"nodeType": "ArrayTypeName",
													"src": "2026:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2068:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2060:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2086:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2081:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2533,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2081:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:138:6"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2120:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2536,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2120:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2537,
													"nodeType": "ArrayTypeName",
													"src": "2120:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:23:6"
									},
									"scope": 2677,
									"src": "1930:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2158:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2198:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "2193:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2193:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2223:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "2218:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2218:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2264:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "2245:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2545,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2245:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2546,
													"nodeType": "ArrayTypeName",
													"src": "2245:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2287:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "2279:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2305:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "2300:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2300:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:138:6"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2353:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "2339:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2553,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2339:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2554,
													"nodeType": "ArrayTypeName",
													"src": "2339:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:23:6"
									},
									"scope": 2677,
									"src": "2149:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2377:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2404:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "2399:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2399:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "2418:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2560,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2418:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2561,
													"nodeType": "ArrayTypeName",
													"src": "2418:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "2443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2460:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "2455:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2455:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:71:6"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2525:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "2511:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2568,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2511:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2569,
													"nodeType": "ArrayTypeName",
													"src": "2511:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:23:6"
									},
									"scope": 2677,
									"src": "2368:166:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 2589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2549:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2576:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2571:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2592:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2587:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2587:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2624:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2605:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2577,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2605:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2578,
													"nodeType": "ArrayTypeName",
													"src": "2605:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2638:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2630:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2647:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2642:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2642:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:86:6"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2685:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2585,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2685:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2586,
													"nodeType": "ArrayTypeName",
													"src": "2685:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:23:6"
									},
									"scope": 2677,
									"src": "2540:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2723:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2750:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "2745:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2745:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2765:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "2760:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2760:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2798:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "2779:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2594,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2779:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2595,
													"nodeType": "ArrayTypeName",
													"src": "2779:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2812:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "2804:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2821:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "2816:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2816:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:86:6"
									},
									"returnParameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2873:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "2859:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2602,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2859:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2603,
													"nodeType": "ArrayTypeName",
													"src": "2859:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:23:6"
									},
									"scope": 2677,
									"src": "2714:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 2621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2897:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2924:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "2919:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2919:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2954:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "2935:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2609,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2935:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2610,
													"nodeType": "ArrayTypeName",
													"src": "2935:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2968:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "2960:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "2972:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2972:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:68:6"
									},
									"returnParameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3042:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "3028:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2617,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3028:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2618,
													"nodeType": "ArrayTypeName",
													"src": "3028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:23:6"
									},
									"scope": 2677,
									"src": "2888:163:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3068:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3079:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3074:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3093:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3088:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3088:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3108:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3103:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3103:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:44:6"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3146:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3141:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3141:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:6"
									},
									"scope": 2677,
									"src": "3059:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3170:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3188:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "3183:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3203:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "3198:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3219:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "3214:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3214:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:48:6"
									},
									"returnParameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3259:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "3254:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3254:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:16:6"
									},
									"scope": 2677,
									"src": "3161:109:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3285:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3302:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "3297:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3318:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "3313:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3334:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "3329:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3329:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:49:6"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3374:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "3369:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3369:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:15:6"
									},
									"scope": 2677,
									"src": "3276:108:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3399:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3418:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3413:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3413:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3447:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3428:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2657,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3428:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2658,
													"nodeType": "ArrayTypeName",
													"src": "3428:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:40:6"
									},
									"returnParameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3490:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3476:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2661,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3476:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2662,
													"nodeType": "ArrayTypeName",
													"src": "3476:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:23:6"
									},
									"scope": 2677,
									"src": "3390:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3514:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3532:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "3527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3527:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3562:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "3543:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2668,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3543:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2669,
													"nodeType": "ArrayTypeName",
													"src": "3543:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3526:41:6"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3605:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "3591:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2672,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3591:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2673,
													"nodeType": "ArrayTypeName",
													"src": "3591:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:23:6"
									},
									"scope": 2677,
									"src": "3505:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2678,
							"src": "66:3551:6",
							"usedErrors": []
						}
					],
					"src": "39:3580:6"
				},
				"id": 6
			},
			"interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2677
						],
						"IUniswapV2Router02": [
							2765
						]
					},
					"id": 2766,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2679,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"absolutePath": "interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2766,
							"sourceUnit": 2678,
							"src": "66:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2681,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"136:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2677,
										"src": "136:18:7"
									},
									"id": 2682,
									"nodeType": "InheritanceSpecifier",
									"src": "136:18:7"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2765,
							"linearizedBaseContracts": [
								2765,
								2677
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "114:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "171:47:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "237:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "229:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "258:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "253:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "253:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "283:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "278:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "313:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "308:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "344:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "336:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "362:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "357:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:159:7"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "401:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "396:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "396:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:16:7"
									},
									"scope": 2765,
									"src": "162:250:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "427:57:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "503:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "495:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "524:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "519:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "549:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "544:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "579:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "574:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "610:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "602:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "628:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "623:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "652:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "647:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "670:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "664:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2714,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "664:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "681:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "673:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "692:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "684:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:216:7"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "724:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "719:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:16:7"
									},
									"scope": 2765,
									"src": "418:317:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "752:53:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "821:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2738,
												"src": "816:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "845:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2738,
												"src": "840:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "840:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "887:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2738,
												"src": "868:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2729,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "868:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2730,
													"nodeType": "ArrayTypeName",
													"src": "868:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "910:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2738,
												"src": "902:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "928:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2738,
												"src": "923:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "923:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:138:7"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:7"
									},
									"scope": 2765,
									"src": "743:210:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "968:50:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1034:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "1029:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1029:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1076:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "1057:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2741,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1057:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2742,
													"nodeType": "ArrayTypeName",
													"src": "1057:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1099:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "1091:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1117:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "1112:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1112:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:114:7"
									},
									"returnParameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:0:7"
									},
									"scope": 2765,
									"src": "959:191:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1165:50:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1231:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1226:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1226:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1255:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1250:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1250:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1297:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1278:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2755,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1278:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2756,
													"nodeType": "ArrayTypeName",
													"src": "1278:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1320:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1312:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1338:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1333:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:138:7"
									},
									"returnParameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:0:7"
									},
									"scope": 2765,
									"src": "1156:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2766,
							"src": "104:1262:7",
							"usedErrors": []
						}
					],
					"src": "39:1329:7"
				},
				"id": 7
			},
			"libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2961
						]
					},
					"id": 2962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2767,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2768,
								"nodeType": "StructuredDocumentation",
								"src": "137:85:8",
								"text": " @title SafeMath\n @dev Wrappers over Solidity's arithmetic operations."
							},
							"fullyImplemented": true,
							"id": 2961,
							"linearizedBaseContracts": [
								2961
							],
							"name": "SafeMath",
							"nameLocation": "232:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "554:114:8",
										"statements": [
											{
												"assignments": [
													2779
												],
												"declarations": [
													{
														"constant": false,
														"id": 2779,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "573:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2793,
														"src": "565:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "565:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2783,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "577:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2773,
														"src": "581:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "577:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "565:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2785,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2786,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "606:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "601:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "609:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "593:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "593:46:8"
											},
											{
												"expression": {
													"id": 2791,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2779,
													"src": "659:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2777,
												"id": 2792,
												"nodeType": "Return",
												"src": "652:8:8"
											}
										]
									},
									"documentation": {
										"id": 2769,
										"nodeType": "StructuredDocumentation",
										"src": "248:233:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "496:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "508:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "500:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "519:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "511:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:22:8"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "545:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:9:8"
									},
									"scope": 2961,
									"src": "487:181:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "1018:69:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2805,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2797,
															"src": "1040:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2806,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "1043:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1046:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2804,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2811,
															2839
														],
														"referencedDeclaration": 2839,
														"src": "1036:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2803,
												"id": 2809,
												"nodeType": "Return",
												"src": "1029:50:8"
											}
										]
									},
									"documentation": {
										"id": 2795,
										"nodeType": "StructuredDocumentation",
										"src": "676:269:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "960:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "972:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "964:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "983:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "975:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:22:8"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "1009:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:9:8"
									},
									"scope": 2961,
									"src": "951:136:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2838,
										"nodeType": "Block",
										"src": "1485:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2816,
																"src": "1504:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "1509:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1504:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2827,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2818,
															"src": "1512:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1496:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2829,
												"nodeType": "ExpressionStatement",
												"src": "1496:29:8"
											},
											{
												"assignments": [
													2831
												],
												"declarations": [
													{
														"constant": false,
														"id": 2831,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1544:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2838,
														"src": "1536:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1536:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2835,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2832,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "1548:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "1552:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1536:17:8"
											},
											{
												"expression": {
													"id": 2836,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2831,
													"src": "1573:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2837,
												"nodeType": "Return",
												"src": "1566:8:8"
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "1095:289:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1399:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1411:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "1403:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1422:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "1414:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1439:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "1425:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1425:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:50:8"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "1476:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:9:8"
									},
									"scope": 2961,
									"src": "1390:192:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2873,
										"nodeType": "Block",
										"src": "1908:404:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2849,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2842,
														"src": "2144:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2149:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2144:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2855,
												"nodeType": "IfStatement",
												"src": "2140:47:8",
												"trueBody": {
													"id": 2854,
													"nodeType": "Block",
													"src": "2152:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2174:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2848,
															"id": 2853,
															"nodeType": "Return",
															"src": "2167:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													2857
												],
												"declarations": [
													{
														"constant": false,
														"id": 2857,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2207:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2873,
														"src": "2199:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2199:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2861,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2858,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2842,
														"src": "2211:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2859,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "2215:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2199:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2863,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2857,
																	"src": "2235:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2864,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2842,
																	"src": "2239:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2235:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2866,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2844,
																"src": "2244:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2235:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2247:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2227:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2227:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2870,
												"nodeType": "ExpressionStatement",
												"src": "2227:56:8"
											},
											{
												"expression": {
													"id": 2871,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2857,
													"src": "2303:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2848,
												"id": 2872,
												"nodeType": "Return",
												"src": "2296:8:8"
											}
										]
									},
									"documentation": {
										"id": 2840,
										"nodeType": "StructuredDocumentation",
										"src": "1590:245:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1850:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1862:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1854:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1873:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1865:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1853:22:8"
									},
									"returnParameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1899:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:9:8"
									},
									"scope": 2961,
									"src": "1841:471:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2890,
										"nodeType": "Block",
										"src": "2855:65:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2885,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "2877:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2886,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "2880:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2883:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2884,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2891,
															2919
														],
														"referencedDeclaration": 2919,
														"src": "2873:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2873:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2883,
												"id": 2889,
												"nodeType": "Return",
												"src": "2866:46:8"
											}
										]
									},
									"documentation": {
										"id": 2875,
										"nodeType": "StructuredDocumentation",
										"src": "2320:462:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2797:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2809:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "2801:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2820:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "2812:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2800:22:8"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "2846:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:9:8"
									},
									"scope": 2961,
									"src": "2788:132:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2918,
										"nodeType": "Block",
										"src": "3511:183:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2904,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2896,
																"src": "3530:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3534:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3530:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2907,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "3537:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2909,
												"nodeType": "ExpressionStatement",
												"src": "3522:28:8"
											},
											{
												"assignments": [
													2911
												],
												"declarations": [
													{
														"constant": false,
														"id": 2911,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3569:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2918,
														"src": "3561:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2915,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2912,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2894,
														"src": "3573:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2913,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2896,
														"src": "3577:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3573:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3561:17:8"
											},
											{
												"expression": {
													"id": 2916,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2911,
													"src": "3685:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2902,
												"id": 2917,
												"nodeType": "Return",
												"src": "3678:8:8"
											}
										]
									},
									"documentation": {
										"id": 2892,
										"nodeType": "StructuredDocumentation",
										"src": "2928:482:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3425:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3437:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3429:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3448:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3440:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3465:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3451:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3451:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:50:8"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3502:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3501:9:8"
									},
									"scope": 2961,
									"src": "3416:278:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2935,
										"nodeType": "Block",
										"src": "4226:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2930,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "4248:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2931,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "4251:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4254:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2929,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2936,
															2960
														],
														"referencedDeclaration": 2960,
														"src": "4244:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4244:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2928,
												"id": 2934,
												"nodeType": "Return",
												"src": "4237:44:8"
											}
										]
									},
									"documentation": {
										"id": 2920,
										"nodeType": "StructuredDocumentation",
										"src": "3702:451:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4168:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4180:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "4172:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4191:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "4183:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:22:8"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "4217:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4216:9:8"
									},
									"scope": 2961,
									"src": "4159:130:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "4869:71:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2949,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "4888:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4893:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4888:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2952,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "4896:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4880:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2954,
												"nodeType": "ExpressionStatement",
												"src": "4880:29:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "4927:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "4931:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4927:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2947,
												"id": 2958,
												"nodeType": "Return",
												"src": "4920:12:8"
											}
										]
									},
									"documentation": {
										"id": 2937,
										"nodeType": "StructuredDocumentation",
										"src": "4297:471:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4783:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4795:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "4787:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4806:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "4798:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4823:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "4809:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4809:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:50:8"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "4860:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:9:8"
									},
									"scope": 2961,
									"src": "4774:166:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2962,
							"src": "224:4719:8",
							"usedErrors": []
						}
					],
					"src": "110:4835:8"
				},
				"id": 8
			},
			"utils/Context.sol": {
				"ast": {
					"absolutePath": "utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2983
						]
					},
					"id": 2984,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2963,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2964,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2983,
							"linearizedBaseContracts": [
								2983
							],
							"name": "Context",
							"nameLocation": "641:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "718:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2969,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2968,
												"id": 2971,
												"nodeType": "Return",
												"src": "729:17:9"
											}
										]
									},
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 2983,
									"src": "656:98:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "829:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2978,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2977,
												"id": 2980,
												"nodeType": "Return",
												"src": "840:15:9"
											}
										]
									},
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:9"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "813:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:9"
									},
									"scope": 2983,
									"src": "762:101:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "623:243:9",
							"usedErrors": []
						}
					],
					"src": "89:779:9"
				},
				"id": 9
			},
			"utils/MultiSignature.sol": {
				"ast": {
					"absolutePath": "utils/MultiSignature.sol",
					"exportedSymbols": {
						"MultiSignature": [
							3097
						]
					},
					"id": 3098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2985,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MultiSignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3097,
							"linearizedBaseContracts": [
								3097
							],
							"name": "MultiSignature",
							"nameLocation": "121:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e2d546b974d25b0ea62bb38332411ff2debd385eef5ec2d515baa97cf82ded8e",
									"id": 2991,
									"name": "DepositProposal",
									"nameLocation": "149:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "181:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "165:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "194:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "189:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "189:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "164:37:10"
									},
									"src": "143:59:10"
								},
								{
									"anonymous": false,
									"eventSelector": "096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce",
									"id": 2995,
									"name": "SubmitProposal",
									"nameLocation": "214:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "242:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "229:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2992,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:25:10"
									},
									"src": "208:46:10"
								},
								{
									"anonymous": false,
									"eventSelector": "12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7",
									"id": 3001,
									"name": "ApproveProposal",
									"nameLocation": "266:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "298:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3001,
												"src": "282:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2999,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "318:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3001,
												"src": "305:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "305:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:48:10"
									},
									"src": "260:70:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb",
									"id": 3007,
									"name": "RevokeProposal",
									"nameLocation": "342:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "373:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "357:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "393:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "380:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:48:10"
									},
									"src": "336:69:10"
								},
								{
									"canonicalName": "MultiSignature.Proposal",
									"id": 3036,
									"members": [
										{
											"constant": false,
											"id": 3009,
											"mutability": "mutable",
											"name": "author",
											"nameLocation": "448:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "440:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3008,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3011,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "470:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "465:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3010,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "465:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3013,
											"mutability": "mutable",
											"name": "updateSalesStatus",
											"nameLocation": "494:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "489:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3012,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "489:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3015,
											"mutability": "mutable",
											"name": "salesEnabled",
											"nameLocation": "527:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "522:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3014,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "522:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3017,
											"mutability": "mutable",
											"name": "swapAndAddLiquidity",
											"nameLocation": "555:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "550:24:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3016,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "550:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3019,
											"mutability": "mutable",
											"name": "updateWithdrawOptions",
											"nameLocation": "590:21:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "585:26:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3018,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "585:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3021,
											"mutability": "mutable",
											"name": "withdrawPrice",
											"nameLocation": "630:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "622:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3020,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "622:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3023,
											"mutability": "mutable",
											"name": "updateTaxesFees",
											"nameLocation": "659:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "654:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3022,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "654:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3025,
											"mutability": "mutable",
											"name": "heisenVerseTaxFee",
											"nameLocation": "693:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "685:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3024,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3027,
											"mutability": "mutable",
											"name": "marketingTaxFee",
											"nameLocation": "729:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "721:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3029,
											"mutability": "mutable",
											"name": "teamTaxFee",
											"nameLocation": "763:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "755:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "755:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3031,
											"mutability": "mutable",
											"name": "liquidityTaxFee",
											"nameLocation": "792:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "784:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3033,
											"mutability": "mutable",
											"name": "transferBackend",
											"nameLocation": "823:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "818:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3032,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "818:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3035,
											"mutability": "mutable",
											"name": "backendAddress",
											"nameLocation": "857:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 3036,
											"src": "849:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3034,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "420:8:10",
									"nodeType": "StructDefinition",
									"scope": 3097,
									"src": "413:466:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 3040,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "905:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 3097,
									"src": "887:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage",
										"typeString": "struct MultiSignature.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 3038,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3037,
												"name": "Proposal",
												"nameLocations": [
													"887:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3036,
												"src": "887:8:10"
											},
											"referencedDeclaration": 3036,
											"src": "887:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$3036_storage_ptr",
												"typeString": "struct MultiSignature.Proposal"
											}
										},
										"id": 3039,
										"nodeType": "ArrayTypeName",
										"src": "887:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage_ptr",
											"typeString": "struct MultiSignature.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3046,
									"mutability": "mutable",
									"name": "proposalApproved",
									"nameLocation": "974:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 3097,
									"src": "923:67:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 3045,
										"keyType": {
											"id": 3041,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "931:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "923:41:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 3044,
											"keyType": {
												"id": 3042,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "947:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "939:24:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 3043,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "958:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3049,
										"nodeType": "Block",
										"src": "1011:2:10",
										"statements": []
									},
									"id": 3050,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:10"
									},
									"returnParameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:10"
									},
									"scope": 3097,
									"src": "997:16:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "1063:119:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3055,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3052,
																"src": "1082:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 3056,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "1096:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																	}
																},
																"id": 3057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1106:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1096:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1082:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c20646f6573206e6f74206578697374",
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7134604142226820b0c8fedb24fd81f2d2a42b34b5fe14d1293b8ecab78336e8",
																"typeString": "literal_string \"MultiSignatureWallet: proposal does not exist\""
															},
															"value": "MultiSignatureWallet: proposal does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7134604142226820b0c8fedb24fd81f2d2a42b34b5fe14d1293b8ecab78336e8",
																"typeString": "literal_string \"MultiSignatureWallet: proposal does not exist\""
															}
														],
														"id": 3054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1074:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:88:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3061,
												"nodeType": "ExpressionStatement",
												"src": "1074:88:10"
											},
											{
												"id": 3062,
												"nodeType": "PlaceholderStatement",
												"src": "1173:1:10"
											}
										]
									},
									"id": 3064,
									"name": "proposalExists",
									"nameLocation": "1030:14:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1050:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "1045:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:18:10"
									},
									"src": "1021:161:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "1237:146:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1256:42:10",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3069,
																		"name": "proposalApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3046,
																		"src": "1257:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 3071,
																	"indexExpression": {
																		"id": 3070,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3066,
																		"src": "1274:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1257:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3074,
																"indexExpression": {
																	"expression": {
																		"id": 3072,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1287:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1291:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1287:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1257:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c20616c72656164792077617320617070726f766564206279206f776e6572",
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1300:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa7cad984062c30132dfca98f4b20d3f464e95f2262414c65f15a47ba92265db",
																"typeString": "literal_string \"MultiSignatureWallet: proposal already was approved by owner\""
															},
															"value": "MultiSignatureWallet: proposal already was approved by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa7cad984062c30132dfca98f4b20d3f464e95f2262414c65f15a47ba92265db",
																"typeString": "literal_string \"MultiSignatureWallet: proposal already was approved by owner\""
															}
														],
														"id": 3068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:115:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3078,
												"nodeType": "ExpressionStatement",
												"src": "1248:115:10"
											},
											{
												"id": 3079,
												"nodeType": "PlaceholderStatement",
												"src": "1374:1:10"
											}
										]
									},
									"id": 3081,
									"name": "proposalNotApproved",
									"nameLocation": "1199:19:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1224:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "1219:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3065,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1219:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:18:10"
									},
									"src": "1190:193:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "1438:127:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1457:32:10",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3086,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "1458:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$3036_storage_$dyn_storage",
																			"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 3088,
																	"indexExpression": {
																		"id": 3087,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3083,
																		"src": "1468:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1458:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$3036_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref"
																	}
																},
																"id": 3089,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1481:8:10",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3011,
																"src": "1458:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077617320616c7265616479206578656375746564",
															"id": 3091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1491:53:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a43ebb18702115f1ad81dad5a175aeb8cc974aa6cca1c9f507bbd0bec3a0b11",
																"typeString": "literal_string \"MultiSignatureWallet: proposal was already executed\""
															},
															"value": "MultiSignatureWallet: proposal was already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a43ebb18702115f1ad81dad5a175aeb8cc974aa6cca1c9f507bbd0bec3a0b11",
																"typeString": "literal_string \"MultiSignatureWallet: proposal was already executed\""
															}
														],
														"id": 3085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1449:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:96:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3093,
												"nodeType": "ExpressionStatement",
												"src": "1449:96:10"
											},
											{
												"id": 3094,
												"nodeType": "PlaceholderStatement",
												"src": "1556:1:10"
											}
										]
									},
									"id": 3096,
									"name": "proposalNotExecuted",
									"nameLocation": "1400:19:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1425:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "1420:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1420:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:18:10"
									},
									"src": "1391:174:10",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3098,
							"src": "112:1456:10",
							"usedErrors": []
						}
					],
					"src": "85:1485:10"
				},
				"id": 10
			}
		}
	}
}