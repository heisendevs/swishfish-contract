{
	"id": "1529d0799343f865823c4fc13122b33c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"metadata": {
				"useLiteralContent": true
			},
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"id",
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"SwishFishToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// SwishFish Contract (SwishFishToken.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"./contracts/ERC20.sol\";\r\nimport \"./access/Ownable.sol\";\r\nimport \"./interfaces/IUniswapV2Factory.sol\";\r\nimport \"./interfaces/IUniswapV2Router02.sol\";\r\n\r\n/**\r\n * @title SwishFish Contract for SwishFish Token\r\n * @author HeisenDev\r\n */\r\ncontract SwishFish is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n\r\n    /**\r\n     * Definition of the token parameters\r\n     */\r\n    uint private _tokenTotalSupply = 1000000000 * 10 ** 18;\r\n\r\n    bool public salesEnabled = false;\r\n    bool private firstLiquidityEnabled = true;\r\n\r\n\r\n    mapping(address => uint256) private _authorizedWithdraws;\r\n    mapping(address => uint256) private _accountWithdrawalLast;\r\n    mapping(address => uint256) private _accountWithdrawalCount;\r\n\r\n\r\n    uint public withdrawPrice = 0.005 ether;\r\n    uint256 private _maxWithdrawalCount = 1;\r\n    uint256 private _maxTransactionWithdrawAmount = 1000000 ether;\r\n\r\n    /**\r\n     * Definition of the Project Wallets\r\n     * `addressHeisenDev` Corresponds to the wallet address where the development\r\n     * team will receive their payments\r\n     * `addressMarketing` Corresponds to the wallet address where the funds\r\n     * for marketing will be received\r\n     * `addressTeam` Represents the wallet where teams and other\r\n     * collaborators will receive their payments\r\n     */\r\n\r\n    address payable public addressHeisenDev = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338);\r\n    address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61);\r\n    address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B);\r\n\r\n    /**\r\n     * Definition of the taxes fees for swaps\r\n     * `taxFeeHeisenverse` 2%  Initial tax fee during presale\r\n     * `taxFeeMarketing` 3%  Initial tax fee during presale\r\n     * `taxFeeTeam` 3%  Initial tax fee during presale\r\n     * `taxFeeLiquidity` 2%  Initial tax fee during presale\r\n     * This value can be modified by the method {updateTaxesFees}\r\n     */\r\n    uint256 public taxFeeHeisenverse = 2;\r\n    uint256 public taxFeeMarketing = 3;\r\n    uint256 public taxFeeTeam = 3;\r\n    uint256 public taxFeeLiquidity = 2;\r\n\r\n    /**\r\n     * Definition of pools\r\n     * `_poolHeisenDev`\r\n     * `_poolMarketing`\r\n     * `_poolTeam`\r\n     * `_poolLiquidity`\r\n     */\r\n    uint256 public _poolHeisenDev = 0;\r\n    uint256 public _poolMarketing = 0;\r\n    uint256 public _poolTeam = 0;\r\n    uint256 public _poolLiquidity = 0;\r\n\r\n    mapping(address => bool) private _isExcludedFromFees;\r\n    mapping(address => bool) private _isExcludedFromLimits;\r\n    mapping(address => bool) private automatedMarketMakerPairs;\r\n\r\n    event Deposit(address indexed sender, uint amount);\r\n    event BuyEgg();\r\n    event SalesState(bool status);\r\n    event Withdraw(uint amount);\r\n    event TeamPayment(uint amount);\r\n    event FirstLiquidityAdded(\r\n        uint256 bnb\r\n    );\r\n    event LiquidityAdded(\r\n        uint256 bnb\r\n    );\r\n    event UpdateTaxesFees(\r\n        uint256 taxFeeHeisenverse,\r\n        uint256 taxFeeMarketing,\r\n        uint256 taxFeeTeam,\r\n        uint256 taxFeeLiquidity\r\n    );\r\n    event UpdateWithdrawOptions(\r\n        uint256 withdrawPrice\r\n    );\r\n    constructor(address _owner1, address _owner2, address _owner3, address _backend) {\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\r\n        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n        .createPair(address(this), _uniswapV2Router.WETH());\r\n\r\n        uniswapV2Router = _uniswapV2Router;\r\n\r\n        automatedMarketMakerPairs[_uniswapV2Pair] = true;\r\n        _isExcludedFromFees[address(this)] = true;\r\n        _isExcludedFromFees[addressHeisenDev] = true;\r\n        _isExcludedFromFees[addressMarketing] = true;\r\n        _isExcludedFromFees[addressTeam] = true;\r\n\r\n        _isExcludedFromLimits[address(this)] = true;\r\n        _isExcludedFromLimits[_uniswapV2Pair] = true;\r\n        _isExcludedFromLimits[_backend] = true;\r\n        /*\r\n            _setOwners is an internal function in Ownable.sol that is only called here,\r\n            and CANNOT be called ever again\r\n        */\r\n        _addOwner(_owner1);\r\n        _addOwner(_owner2);\r\n        _addOwner(_owner3);\r\n        /*\r\n            _transferBackend is an internal function in Ownable.sol\r\n        */\r\n        _transferBackend(_backend);\r\n        /*\r\n            _mint is an internal function in ERC20.sol that is only called here,\r\n            and CANNOT be called ever again\r\n        */\r\n        _mint(address(this), _tokenTotalSupply);\r\n    }\r\n\r\n    /// @dev Fallback function allows to deposit ether.\r\n    receive() external payable {\r\n        if (msg.value > 0) {\r\n            emit Deposit(_msgSender(), msg.value);\r\n        }\r\n    }\r\n\r\n    function buy() external payable {\r\n        require(salesEnabled, \"Presale isn't enabled\");\r\n        uint256 liquidityTokens = balanceOf(address(this)).mul(10).div(100);\r\n        addLiquidity(liquidityTokens, msg.value);\r\n        emit BuyEgg();\r\n    }\r\n    function firstLiquidity(uint256 tokens) external payable onlyOwner {\r\n        require(firstLiquidityEnabled, \"Presale isn't enabled\");\r\n        firstLiquidityEnabled = false;\r\n        addLiquidity(tokens, msg.value);\r\n        emit FirstLiquidityAdded(msg.value);\r\n    }\r\n    function teamPayment() external onlyOwner {\r\n        super._transfer(address(this), addressHeisenDev, _poolHeisenDev);\r\n        super._transfer(address(this), addressMarketing, _poolMarketing);\r\n        super._transfer(address(this), addressTeam, _poolTeam);\r\n        uint256 amount = _poolHeisenDev + _poolMarketing + _poolTeam;\r\n        _poolHeisenDev = 0;\r\n        _poolMarketing = 0;\r\n        _poolTeam = 0;\r\n        (bool sent, ) = addressHeisenDev.call{value: address(this).balance}(\"\");\r\n        require(sent, \"Failed to send BNB\");\r\n        emit TeamPayment(amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        bool takeFee = !(_isExcludedFromFees[from] || _isExcludedFromFees[to]);\r\n\r\n        if (takeFee && automatedMarketMakerPairs[from]) {\r\n            uint256 liquidityAmount = amount.mul(taxFeeLiquidity).div(100);\r\n            _poolLiquidity = _poolLiquidity.add(liquidityAmount);\r\n            swapAndAddLiquidityTokens(amount);\r\n        }\r\n        super._transfer(from, to, amount);\r\n    }\r\n\r\n    function swapAndAddLiquidity() private {\r\n        uint256 contractBalance = address(this).balance;\r\n        swapTokensForEth(_poolLiquidity);\r\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\r\n        addLiquidity(liquidityTokens, contractBalance);\r\n        _poolLiquidity = 0;\r\n    }\r\n    function swapAndAddLiquidityTokens(uint256 _tokenAmount) private {\r\n        uint256 contractBalance = address(this).balance;\r\n        swapTokensForEth(_tokenAmount);\r\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\r\n        addLiquidity(liquidityTokens, contractBalance);\r\n        _poolLiquidity = 0;\r\n    }\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function updateTaxesFees(uint256 _heisenVerseTaxFee, uint256 _marketingTaxFee, uint256 _teamTaxFee, uint256 _liquidityTaxFee) private {\r\n        taxFeeHeisenverse = _heisenVerseTaxFee;\r\n        taxFeeMarketing = _marketingTaxFee;\r\n        taxFeeTeam = _teamTaxFee;\r\n        taxFeeLiquidity = _liquidityTaxFee;\r\n        emit UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee);\r\n    }\r\n\r\n    function updateWithdrawOptions(uint256 _withdrawPrice) private {\r\n        withdrawPrice = _withdrawPrice;\r\n        emit UpdateWithdrawOptions(_withdrawPrice);\r\n    }\r\n\r\n    function updateSalesStatus(bool _salesEnabled) private {\r\n        salesEnabled = _salesEnabled;\r\n        emit SalesState(_salesEnabled);\r\n    }\r\n\r\n    function addLiquidity(uint256 tokens, uint256 bnb) private {\r\n        _approve(address(this), address(uniswapV2Router), balanceOf(address(this)));\r\n        uniswapV2Router.addLiquidityETH{value : bnb}(\r\n            address(this),\r\n            tokens,\r\n            0,\r\n            0,\r\n            address(this),\r\n            block.timestamp.add(300)\r\n        );\r\n        emit LiquidityAdded(bnb);\r\n    }\r\n\r\n    function withdrawAuthorization(address to, uint256 amount, uint256 fee) external onlyBackend {\r\n        require(!isAnOwner(to), \"Owners can't make withdrawals\");\r\n        require(to != backend(), \"Backend can't make withdrawals\");\r\n        require(to != addressHeisenDev, \"Heisen can't make withdrawals\");\r\n        require(to != addressMarketing, \"Skyler can't make withdrawals\");\r\n        require(to != addressTeam, \"Team can't make withdrawals\");\r\n        require(fee <= 75, \"The fee cannot exceed 75%\");\r\n        require(_authorizedWithdraws[to] == 0, \"User has pending Withdrawals\");\r\n        require(amount <= _maxTransactionWithdrawAmount, \"Amount can't exceeds the max transaction withdraw amount\");\r\n\r\n        uint256 amountFee = amount.mul(fee).div(100);\r\n        uint256 totalTaxes = taxFeeHeisenverse + taxFeeMarketing + taxFeeTeam;\r\n        if (totalTaxes == 0) {\r\n            _poolHeisenDev = _poolHeisenDev.add(amountFee);\r\n        }\r\n        else {\r\n            uint256 currentTaxFeeHeisenDev = taxFeeHeisenverse.mul(100).div(totalTaxes);\r\n            uint256 currentTaxFeeMarketing = taxFeeMarketing.mul(100).div(totalTaxes);\r\n            uint256 currentTaxFeeTeam = taxFeeTeam.mul(100).div(totalTaxes);\r\n            uint256 heisenVerseAmount = amountFee.mul(currentTaxFeeHeisenDev).div(100);\r\n            uint256 marketingAmount = amountFee.mul(currentTaxFeeMarketing).div(100);\r\n            uint256 teamAmount = amountFee.mul(currentTaxFeeTeam).div(100);\r\n\r\n            amount = amount.sub(heisenVerseAmount);\r\n            amount = amount.sub(marketingAmount);\r\n            amount = amount.sub(teamAmount);\r\n\r\n            _poolHeisenDev = _poolHeisenDev.add(heisenVerseAmount);\r\n            _poolMarketing = _poolMarketing.add(marketingAmount);\r\n            _poolTeam = _poolTeam.add(teamAmount);\r\n        }\r\n        _authorizedWithdraws[to] = amount;\r\n    }\r\n\r\n    function withdrawAllowance(address account) external view returns (uint256) {\r\n        return _authorizedWithdraws[account];\r\n    }\r\n\r\n    function isUnderDailyWithdrawalLimit(address account) internal returns (bool) {\r\n        if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {\r\n            _accountWithdrawalLast[account] = block.timestamp;\r\n            _accountWithdrawalCount[account] = 0;\r\n        }\r\n        _accountWithdrawalCount[account] = _accountWithdrawalCount[account].add(1);\r\n        return (_accountWithdrawalCount[account] <= _maxWithdrawalCount);\r\n    }\r\n\r\n    function withdraw() external payable {\r\n        require(isUnderDailyWithdrawalLimit(_msgSender()), \"You cannot make more than one withdrawal per day\");\r\n        require(msg.value >= (withdrawPrice), \"The amount sent is not equal to the BNB amount required for withdraw\");\r\n        uint256 amount = _authorizedWithdraws[_msgSender()];\r\n        super._transfer(address(this), _msgSender(), amount);\r\n        _authorizedWithdraws[_msgSender()] = 0;\r\n        emit Withdraw(amount);\r\n    }\r\n    function submitProposal(\r\n        bool _updateEggSales,\r\n        bool _salesEnabled,\r\n        bool _swapAndAddLiquidity,\r\n        bool _updateWithdrawOptions,\r\n        uint256 _withdrawPrice,\r\n        bool _updateTaxesFees,\r\n        uint256 _heisenVerseTaxFee,\r\n        uint256 _marketingTaxFee,\r\n        uint256 _teamTaxFee,\r\n        uint256 _liquidityTaxFee,\r\n        bool _transferBackend,\r\n        address _backendAddress\r\n    ) external onlyOwner {\r\n        if (_updateWithdrawOptions) {\r\n            require(withdrawPrice <= 5000000000000000, \"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\");\r\n        }\r\n        if (_updateTaxesFees) {\r\n            uint256 sellTotalFees = _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee;\r\n            require(sellTotalFees <= 10, \"MultiSignatureWallet: Must keep fees at 10% or less\");\r\n        }\r\n        if (_transferBackend) {\r\n            require(_backendAddress != address(0), \"MultiSignatureWallet: new owner is the zero address\");\r\n        }\r\n        proposals.push(Proposal({\r\n        author: _msgSender(),\r\n        executed: false,\r\n        updateSalesStatus: _updateEggSales,\r\n        salesEnabled: _salesEnabled,\r\n        swapAndAddLiquidity: _swapAndAddLiquidity,\r\n        updateWithdrawOptions: _updateWithdrawOptions,\r\n        withdrawPrice: _withdrawPrice,\r\n        updateTaxesFees: _updateTaxesFees,\r\n        heisenVerseTaxFee: _heisenVerseTaxFee,\r\n        marketingTaxFee: _marketingTaxFee,\r\n        teamTaxFee: _teamTaxFee,\r\n        liquidityTaxFee: _liquidityTaxFee,\r\n        transferBackend: _transferBackend,\r\n        backendAddress: _backendAddress\r\n        }));\r\n        emit SubmitProposal(proposals.length - 1);\r\n    }\r\n\r\n    function approveProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotApproved(_proposalId) proposalNotExecuted(_proposalId)\r\n    {\r\n        proposalApproved[_proposalId][_msgSender()] = true;\r\n        emit ApproveProposal(_msgSender(), _proposalId);\r\n    }\r\n\r\n    function _getApprovalCount(uint _proposalId) private view returns (uint256) {\r\n        uint256 count = 0;\r\n        for (uint i; i < requiredConfirmations(); i++) {\r\n            if (proposalApproved[_proposalId][getOwner(i)]) {\r\n                count += 1;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    function executeProposal(uint _proposalId) external proposalExists(_proposalId) proposalNotExecuted(_proposalId) {\r\n        require(_getApprovalCount(_proposalId) >= requiredConfirmations(), \"MultiSignatureWallet: approvals is less than required\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        proposal.executed = true;\r\n        if (proposal.updateSalesStatus) {\r\n            updateSalesStatus(proposal.salesEnabled);\r\n        }\r\n        if (proposal.swapAndAddLiquidity) {\r\n            swapAndAddLiquidity();\r\n        }\r\n        if (proposal.updateWithdrawOptions) {\r\n            updateWithdrawOptions(proposal.withdrawPrice);\r\n        }\r\n        if (proposal.updateTaxesFees) {\r\n            updateTaxesFees(proposal.heisenVerseTaxFee ,proposal.marketingTaxFee ,proposal.teamTaxFee ,proposal.liquidityTaxFee);\r\n        }\r\n        if (proposal.transferBackend) {\r\n            _transferBackend(proposal.backendAddress);\r\n            _isExcludedFromLimits[proposal.backendAddress] = true;\r\n        }\r\n    }\r\n\r\n    function revokeProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotExecuted(_proposalId)\r\n    {\r\n        require(proposalApproved[_proposalId][_msgSender()], \"MultiSignatureWallet: Proposal is not approved\");\r\n        proposalApproved[_proposalId][_msgSender()] = false;\r\n        emit RevokeProposal(_msgSender(), _proposalId);\r\n    }\r\n}\r\n"
			},
			"interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"./IUniswapV2Router01.sol\";\r\n\r\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountETH);\r\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountETH);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n"
			},
			"interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToSetter(address) external;\r\n}\r\n"
			},
			"access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Coin2Fish Contract (access/Ownable.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"../utils/Context.sol\";\r\nimport \"../utils/MultiSignature.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context, MultiSignature {\r\n    address private _backend;\r\n    address private _owner;\r\n    address[] private _owners;\r\n    mapping(address => bool) private isOwner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    function requiredConfirmations() internal view returns (uint256) {\r\n        return _owners.length;\r\n    }\r\n    /**\r\n     * @dev Returns the address of the current backend.\r\n     */\r\n    function backend() internal view returns (address) {\r\n        return _backend;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\");\r\n        _;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyBackend() {\r\n        require(backend() == _msgSender(), \"Ownable: caller is not the backend\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if account is an owner.\r\n     */\r\n    function isAnOwner(address account) internal view returns (bool) {\r\n        return isOwner[account];\r\n    }\r\n    /**\r\n     * @dev Returns owner by Index.\r\n     */\r\n    function getOwner(uint256 index) internal view returns (address) {\r\n        return _owners[index];\r\n    }\r\n    /**\r\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function _transferBackend(address newBackend) internal  {\r\n        require(newBackend != address(0), \"Ownable: new owner is the zero address\");\r\n        _backend = newBackend;\r\n        emit OwnershipTransferred(address(0), newBackend);\r\n    }\r\n    /**\r\n     * @dev Set owners of the contract\r\n     * Is Only called in the contract creation\r\n     */\r\n    function _addOwner(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: Owner is the zero address\");\r\n        require(!isOwner[newOwner], \"Ownable: Owner is not unique\");\r\n        isOwner[newOwner] = true;\r\n        _owners.push(newOwner);\r\n        emit OwnershipTransferred(address(0), newOwner);\r\n    }\r\n}\r\n"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"../utils/Context.sol\";\r\nimport \"../interfaces/IERC20.sol\";\r\nimport \"../interfaces/IERC20Metadata.sol\";\r\nimport \"../libraries/SafeMath.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor() {\r\n        _name = \"SwishFish\";\r\n        _symbol = \"SFH\";\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n    unchecked {\r\n        _approve(owner, spender, currentAllowance.sub(subtractedValue));\r\n    }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n    unchecked {\r\n        _balances[from] = fromBalance.sub(amount);\r\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n        // decrementing then incrementing.\r\n        _balances[to] = _balances[to].add(amount);\r\n    }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n    unchecked {\r\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n        _balances[account] = _balances[account].add(amount);\r\n    }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = _balances[account].sub(amount);\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply = _totalSupply.sub(amount);\r\n        }\r\n        emit Transfer(account, address(0), amount);\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance.sub(amount));\r\n        }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\ninterface IUniswapV2Router01 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETH(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function removeLiquidityWithPermit(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETHWithPermit(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapTokensForExactTokens(\r\n        uint amountOut,\r\n        uint amountInMax,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n    external\r\n    payable\r\n    returns (uint[] memory amounts);\r\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n    external\r\n    returns (uint[] memory amounts);\r\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n    external\r\n    returns (uint[] memory amounts);\r\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n    external\r\n    payable\r\n    returns (uint[] memory amounts);\r\n\r\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n}\r\n"
			},
			"libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"interfaces/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			},
			"utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"utils/MultiSignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\r\n\r\npragma solidity 0.8.17;\r\n\r\ncontract MultiSignature {\r\n    event DepositProposal(address indexed sender, uint amount);\r\n    event SubmitProposal(uint indexed proposalId);\r\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\r\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\r\n\r\n    struct Proposal {\r\n        address author;\r\n        bool executed;\r\n        bool updateSalesStatus;\r\n        bool salesEnabled;\r\n        bool swapAndAddLiquidity;\r\n        bool updateWithdrawOptions;\r\n        uint256 withdrawPrice;\r\n        bool updateTaxesFees;\r\n        uint256 heisenVerseTaxFee;\r\n        uint256 marketingTaxFee;\r\n        uint256 teamTaxFee;\r\n        uint256 liquidityTaxFee;\r\n        bool transferBackend;\r\n        address backendAddress;\r\n    }\r\n\r\n    Proposal[] public proposals;\r\n\r\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\r\n    constructor() {}\r\n\r\n    modifier proposalExists(uint _proposalId) {\r\n        require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier proposalNotApproved(uint _proposalId) {\r\n        require(!proposalApproved[_proposalId][msg.sender], \"MultiSignatureWallet: proposal already was approved by owner\");\r\n        _;\r\n    }\r\n\r\n    modifier proposalNotExecuted(uint _proposalId) {\r\n        require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\");\r\n        _;\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"SwishFishToken.sol": {
				"SwishFish": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner3",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_backend",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "BuyEgg",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bnb",
									"type": "uint256"
								}
							],
							"name": "FirstLiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bnb",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "SalesState",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TeamPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeHeisenverse",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeMarketing",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeTeam",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxFeeLiquidity",
									"type": "uint256"
								}
							],
							"name": "UpdateTaxesFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								}
							],
							"name": "UpdateWithdrawOptions",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_poolHeisenDev",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_poolLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_poolMarketing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_poolTeam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addressHeisenDev",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addressMarketing",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addressTeam",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_proposalId",
									"type": "uint256"
								}
							],
							"name": "approveProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "firstLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_proposalId",
									"type": "uint256"
								}
							],
							"name": "revokeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "salesEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_updateEggSales",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_backendAddress",
									"type": "address"
								}
							],
							"name": "submitProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeHeisenverse",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeMarketing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFeeTeam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamPayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "withdrawAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "withdrawAuthorization",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "HeisenDev",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "SwishFish Contract for SwishFish Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_9, callvalue)\n  0x80\n  dup2\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_8\n  dup3\n  dup6\n  tag_1\n  jump\t// in\ntag_8:\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_9\n  jumpi\n  tag_11\n  dup2\n  tag_2\n  jump\t// in\ntag_11:\n  0x20\n  tag_12\n  dup2\n  dup5\n  add\n  tag_2\n  jump\t// in\ntag_12:\n  swap2\n  tag_13\n  0x60\n  tag_14\n  dup8\n  dup8\n  add\n  tag_2\n  jump\t// in\ntag_14:\n  swap6\n  add\n  tag_2\n  jump\t// in\ntag_13:\n  swap3\n  tag_15\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  tag_3\n  jump\t// in\ntag_15:\n  swap1\n  0x1f\n  swap2\n  dup3\n  dup2\n  gt\n  tag_16\n  jumpi\ntag_17:\n  pop\n  add(0x5377697368466973680000000000000000000000000000000000000000000000, 0x12)\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  swap6\n  tag_18\n  dup8\n  sload\n  tag_3\n  jump\t// in\ntag_18:\n  dup4\n  dup2\n  gt\n  tag_19\n  jumpi\ntag_20:\n  pop\n  add(0x5346480000000000000000000000000000000000000000000000000000000000, 0x06)\n  dup8\n  sstore\n  not(sub(exp(0x02, 0xa0), 0x01))\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  swap2\n  caller\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup4\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x08\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x08\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup9\n  mload\n  swap5\n  0x00\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  swap8\n  0x00\n  dup1\n  mload\n  0x20\n  data_9c064737b570a74c2bac5d21056d93ac53115214216cd14d4a0fc9b60be81231\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  swap7\n  caller\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  dup11\n  dup10\n  dup2\n  dup1\n  log3\n    /* \"SwishFishToken.sol\":569:590  1000000000 * 10 ** 18 */\n  0x033b2e3c9fd0803ce8000000\n  0x0c\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x0100\n  not(0xffff)\n    /* \"SwishFishToken.sol\":626:631  false */\n  0x0d\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":626:631  false */\n  0x0d\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":916:927  0.005 ether */\n  0x11c37937e08000\n  0x11\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x01\n  swap2\n  dup3\n  0x12\n  sstore\n    /* \"SwishFishToken.sol\":1028:1041  1000000 ether */\n  0xd3c21bcecceda1000000\n  0x13\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1518:1560  0xEDa73409d4bBD147f4E1295A73a2Ca243a529338 */\n  0xeda73409d4bbd147f4e1295a73a2ca243a529338\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup8\n    /* \"SwishFishToken.sol\":1510:1561  payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n  0x14\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":1510:1561  payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n  0x14\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1618:1660  0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61 */\n  0x3c1cd83d8850803c9c42ff5083f56b66b00fbd61\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup8\n    /* \"SwishFishToken.sol\":1610:1661  payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n  0x15\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":1610:1661  payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n  0x15\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"SwishFishToken.sol\":1713:1755  0x63024aC73FE77427F20e8247FA26F470C0D9700B */\n  0x63024ac73fe77427f20e8247fa26f470c0d9700b\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup8\n    /* \"SwishFishToken.sol\":1705:1756  payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n  0x16\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"SwishFishToken.sol\":1705:1756  payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n  0x16\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x02\n    /* \"SwishFishToken.sol\":2173:2174  2 */\n  0x17\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":2214:2215  3 */\n  0x18\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":2250:2251  3 */\n  0x19\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0x02\n    /* \"SwishFishToken.sol\":2291:2292  2 */\n  0x1a\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup11\n    /* \"SwishFishToken.sol\":2474:2475  0 */\n  0x1b\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup11\n    /* \"SwishFishToken.sol\":2514:2515  0 */\n  0x1c\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup11\n    /* \"SwishFishToken.sol\":2549:2550  0 */\n  0x1d\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup11\n    /* \"SwishFishToken.sol\":2589:2590  0 */\n  0x1e\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  0xc45a015500000000000000000000000000000000000000000000000000000000\n    /* \"SwishFishToken.sol\":3575:3601  _uniswapV2Router.factory() */\n  dup3\n  mstore\n    /* \"SwishFishToken.sol\":3478:3520  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  dup12\n  dup11\n  dup4\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"SwishFishToken.sol\":3575:3601  _uniswapV2Router.factory() */\n  swap3\n  dup2\n  dup5\n  gas\n  staticcall\n  swap3\n  dup4\n  iszero\n  tag_21\n  jumpi\n  dup12\n  dup16\n  dup16\n  swap3\n  dup16\n  swap7\n  tag_23\n  jumpi\ntag_24:\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  pop\n  mload\n    /* \"SwishFishToken.sol\":3639:3662  _uniswapV2Router.WETH() */\n  dup1\n  swap3\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  0xad5c464800000000000000000000000000000000000000000000000000000000\n    /* \"SwishFishToken.sol\":3639:3662  _uniswapV2Router.WETH() */\n  dup3\n  mstore\n  dup2\n  dup6\n  gas\n  staticcall\n  swap1\n  dup2\n  iszero\n  tag_29\n  jumpi\n  dup16\n  swap2\n  dup16\n  dup16\n  swap5\n  swap4\n  dup16\n  swap4\n  dup7\n  swap4\n  tag_27\n  jumpi\ntag_28:\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  pop\n  swap1\n  0x44\n  swap2\n  mload\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  swap6\n  dup7\n  swap4\n  dup5\n  swap3\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  0xc9c6539600000000000000000000000000000000000000000000000000000000\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  dup5\n  mstore\n    /* \"SwishFishToken.sol\":3632:3636  this */\n  address\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  swap1\n  dup5\n  add\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  mstore\n  sub(exp(0x02, 0xa0), 0x01)\n  swap10\n  dup11\n  dup1\n  swap3\n  and\n  0x24\n  dup6\n  add\n  mstore\n  and\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  gas\n  call\n  swap2\n  dup3\n  iszero\n  tag_29\n  jumpi\n  swap3\n  dup16\n  swap3\n  dup14\n  swap1\n  dup16\n  swap12\n  swap11\n  swap10\n  swap9\n  swap8\n  swap6\n  swap4\n  dup14\n  swap8\n  swap5\n  dup14\n  swap3\n  tag_31\n  jumpi\ntag_32:\n  pop\n    /* \"SwishFishToken.sol\":3676:3710  uniswapV2Router = _uniswapV2Router */\n  0x0b\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup1\n  sload\n  dup14\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  dup4\n  and\n  dup1\n  dup13\n  mstore\n    /* \"SwishFishToken.sol\":3723:3748  automatedMarketMakerPairs */\n  0x21\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup3\n  mstore\n  dup5\n  dup13\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n  dup9\n  or\n  swap1\n  swap2\n  sstore\n    /* \"SwishFishToken.sol\":3632:3636  this */\n  address\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup1\n  dup15\n  mstore\n  swap8\n  dup4\n  mstore\n  dup6\n  dup14\n  keccak256\n  dup1\n  sload\n  dup3\n  and\n  dup9\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":1510:1561  payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n  0x14\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  dup6\n  and\n  dup14\n  mstore\n  dup6\n  dup14\n  keccak256\n  dup1\n  sload\n  dup3\n  and\n  dup9\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":1610:1661  payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n  0x15\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  dup6\n  and\n  dup14\n  mstore\n  dup6\n  dup14\n  keccak256\n  dup1\n  sload\n  dup3\n  and\n  dup9\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":1705:1756  payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n  0x16\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  dup6\n  and\n  dup14\n  mstore\n  dup6\n  dup14\n  keccak256\n  dup1\n  sload\n  dup3\n  and\n  dup9\n  or\n  swap1\n  sstore\n  swap7\n  dup13\n  mstore\n  swap1\n  dup1\n  mstore\n  dup4\n  dup12\n  keccak256\n  dup1\n  sload\n  dup8\n  and\n  dup7\n  or\n  swap1\n  sstore\n  dup11\n  mstore\n  dup3\n  dup11\n  keccak256\n  dup1\n  sload\n  dup7\n  and\n  dup6\n  or\n  swap1\n  sstore\n  and\n  dup1\n  dup10\n  mstore\n  swap8\n  keccak256\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"SwishFishToken.sol\":4380:4387  _owner3 */\n  tag_34\n  swap3\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  swap2\n    /* \"SwishFishToken.sol\":4351:4358  _owner2 */\n  tag_35\n  swap2\n  dup3\n  swap1\n    /* \"SwishFishToken.sol\":4322:4329  _owner1 */\n  tag_4\n  jump\t// in\ntag_35:\n    /* \"SwishFishToken.sol\":4351:4358  _owner2 */\n  tag_4\n  jump\t// in\n    /* \"SwishFishToken.sol\":4380:4387  _owner3 */\ntag_34:\n    /* \"access/Ownable.sol\":2663:2687  newBackend != address(0) */\n  dup2\n  iszero\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  tag_36\n  jumpi\n  dup2\n  swap1\n    /* \"access/Ownable.sol\":2741:2762  _backend = newBackend */\n  0x07\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  and\n  or\n    /* \"access/Ownable.sol\":2741:2762  _backend = newBackend */\n  0x07\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup5\n  dup8\n  mload\n    /* \"access/Ownable.sol\":2778:2822  OwnershipTransferred(address(0), newBackend) */\n  swap4\n  dup2\n  dup1\n  log3\n    /* \"SwishFishToken.sol\":569:590  1000000000 * 10 ** 18 */\n  0x0c\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n    /* \"SwishFishToken.sol\":3632:3636  this */\n  swap5\n  address\n    /* \"contracts/ERC20.sol\":8944:8965  account != address(0) */\n  iszero\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  tag_38\n  jumpi\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":9326:9363  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  swap1\n    /* \"contracts/ERC20.sol\":9091:9115  _totalSupply.add(amount) */\n  tag_40\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  sload(0x02)\n    /* \"contracts/ERC20.sol\":9091:9115  _totalSupply.add(amount) */\n  tag_5\n  jump\t// in\ntag_40:\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  0x02\n  sstore\n    /* \"SwishFishToken.sol\":3632:3636  this */\n  address\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup4\n  mstore\n  dup3\n  dup2\n  mstore\n    /* \"contracts/ERC20.sol\":9273:9303  _balances[account].add(amount) */\n  tag_41\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  dup7\n  dup6\n  keccak256\n  sload\n    /* \"contracts/ERC20.sol\":9273:9303  _balances[account].add(amount) */\n  tag_5\n  jump\t// in\ntag_41:\n    /* \"SwishFishToken.sol\":3632:3636  this */\n  address\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup5\n  mstore\n  dup4\n  dup3\n  mstore\n  dup6\n  dup5\n  keccak256\n  sstore\n  dup5\n  mload\n  swap4\n  dup5\n  mstore\n    /* \"SwishFishToken.sol\":3632:3636  this */\n  address\n    /* \"contracts/ERC20.sol\":9326:9363  Transfer(address(0), account, amount) */\n  swap4\n  log3\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_38:\n  swap3\n  0x64\n  swap4\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup5\n  mstore\n  dup4\n  add\n  mstore\n  0x24\n  dup3\n  add\n  mstore\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  0x44\n  dup3\n  add\n  mstore\n  revert\ntag_36:\n  0x84\n  dup8\n  dup7\n  dup11\n  mload\n  swap2\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup4\n  mstore\n  dup3\n  add\n  mstore\n  0x26\n  0x24\n  dup3\n  add\n  mstore\n  0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n  0x44\n  dup3\n  add\n  mstore\n  0x6464726573730000000000000000000000000000000000000000000000000000\n  0x64\n  dup3\n  add\n  mstore\n  revert\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\ntag_31:\n  swap5\n  swap8\n  pop\n  swap5\n  pop\n  pop\n  swap1\n  swap4\n  swap6\n  swap7\n  swap8\n  swap9\n  swap10\n  pop\n  dup2\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_42\n  jumpi\ntag_43:\n  tag_44\n  dup2\n  dup4\n  tag_1\n  jump\t// in\ntag_44:\n  dup2\n  add\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sub\n  slt\n  tag_45\n  jumpi\n    /* \"SwishFishToken.sol\":4351:4358  _owner2 */\n  tag_35\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  swap5\n  dup16\n  dup6\n  dup16\n  swap12\n  swap11\n  swap9\n  swap5\n  swap6\n  dup16\n  dup4\n  dup16\n  swap7\n  dup16\n  swap1\n  swap11\n  dup16\n    /* \"SwishFishToken.sol\":4380:4387  _owner3 */\n  tag_34\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  swap16\n  swap13\n  swap12\n  tag_47\n    /* \"SwishFishToken.sol\":4322:4329  _owner1 */\n  tag_35\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  swap14\n  tag_2\n  jump\t// in\ntag_47:\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\n  swap8\n  pop\n  swap6\n  swap9\n  swap12\n  pop\n  pop\n  swap8\n  swap11\n  swap13\n  swap14\n  pop\n  pop\n  pop\n  swap3\n  swap6\n  swap9\n  jump(tag_32)\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\ntag_45:\n  dup13\n  dup1\n  revert\n    /* \"SwishFishToken.sol\":3557:3663  IUniswapV2Factory(_uniswapV2Router.factory())... */\ntag_42:\n  pop\n  returndatasize\n  jump(tag_43)\ntag_29:\n  pop\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup15\n  mload\n  returndatasize\n  dup15\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"SwishFishToken.sol\":3639:3662  _uniswapV2Router.WETH() */\ntag_27:\n  swap5\n  swap6\n  pop\n  pop\n  pop\n  pop\n  dup2\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_48\n  jumpi\ntag_49:\n  tag_50\n  dup2\n  dup4\n  tag_1\n  jump\t// in\ntag_50:\n  dup2\n  add\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sub\n  slt\n  tag_45\n  jumpi\n  swap1\n  dup12\n  dup16\n  dup16\n  dup16\n  swap5\n  swap1\n  tag_53\n  0x44\n  swap3\n  tag_2\n  jump\t// in\ntag_53:\n    /* \"SwishFishToken.sol\":3639:3662  _uniswapV2Router.WETH() */\n  swap3\n  swap1\n  swap2\n  jump(tag_28)\ntag_48:\n  pop\n  returndatasize\n  jump(tag_49)\n    /* \"SwishFishToken.sol\":3575:3601  _uniswapV2Router.factory() */\ntag_23:\n  swap4\n  swap5\n  swap6\n  pop\n  pop\n  swap1\n  pop\n  dup2\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_54\n  jumpi\ntag_55:\n  tag_56\n  dup2\n  dup4\n  tag_1\n  jump\t// in\ntag_56:\n  dup2\n  add\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sub\n  slt\n  tag_57\n  jumpi\n  swap1\n  dup13\n  dup12\n  dup16\n  swap5\n  swap4\n  tag_59\n  swap1\n  tag_2\n  jump\t// in\ntag_59:\n    /* \"SwishFishToken.sol\":3575:3601  _uniswapV2Router.factory() */\n  swap5\n  codesize\n  jump(tag_24)\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\ntag_57:\n  dup12\n  dup1\n  revert\n    /* \"SwishFishToken.sol\":3575:3601  _uniswapV2Router.factory() */\ntag_54:\n  pop\n  returndatasize\n  jump(tag_55)\ntag_21:\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup15\n  mload\n  returndatasize\n  dup15\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\ntag_19:\n  0x00\n  dup9\n  dup2\n  mstore\n  dup7\n  dup6\n  dup2\n  dup4\n  keccak256\n  swap4\n  add\n  div\n  dup3\n  add\n  swap2\ntag_60:\n  dup3\n  dup2\n  lt\n  tag_61\n  jumpi\n  pop\n  pop\n  jump(tag_20)\ntag_61:\n  dup2\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_60)\ntag_16:\n  0x00\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup2\n  mstore\n  dup6\n  dup5\n  dup2\n  dup4\n  keccak256\n  swap4\n  add\n  div\n  dup3\n  add\n  swap2\ntag_63:\n  dup3\n  dup2\n  lt\n  tag_64\n  jumpi\n  pop\n  pop\n  jump(tag_17)\ntag_64:\n  dup2\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_63)\ntag_9:\n  0x00\n  dup1\n  revert\ntag_1:\n  swap1\n  0x1f\n  dup1\n  not\n  swap2\n  add\n  and\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  0xffffffffffffffff\n  dup3\n  gt\n  or\n  tag_66\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_66:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  mload\n  swap1\n  sub(exp(0x02, 0xa0), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_9\n  jumpi\n  jump\t// out\ntag_3:\n  swap1\n  0x01\n  0x02\n  dup4\n  div\n  swap3\n  and\n  dup1\n  iszero\n  tag_70\n  jumpi\ntag_71:\n  0x20\n  dup4\n  lt\n  eq\n  tag_72\n  jumpi\n  jump\t// out\ntag_72:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_70:\n  swap2\n  0x7f\n  and\n  swap2\n  jump(tag_71)\n    /* \"access/Ownable.sol\":2942:3272  function _addOwner(address newOwner) internal {... */\ntag_4:\n  sub(exp(0x02, 0xa0), 0x01)\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  and\n    /* \"access/Ownable.sol\":3007:3029  newOwner != address(0) */\n  dup1\n  iszero\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  tag_74\n  jumpi\n    /* \"access/Ownable.sol\":3027:3028  0 */\n  0x00\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup2\n  dup2\n  mstore\n    /* \"access/Ownable.sol\":3088:3095  isOwner */\n  0x0a\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  0x20\n  mstore\n  0xff\n  0x40\n  dup3\n  keccak256\n  sload\n  and\n  tag_76\n  jumpi\n  dup2\n  dup2\n  mstore\n    /* \"access/Ownable.sol\":3088:3095  isOwner */\n  0x0a\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"access/Ownable.sol\":3184:3191  _owners */\n  0x09\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_78\n  jumpi\n  0x01\n  dup2\n  add\n  dup1\n    /* \"access/Ownable.sol\":3184:3191  _owners */\n  0x09\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_80\n  jumpi\n    /* \"access/Ownable.sol\":3184:3191  _owners */\n  0x09\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup3\n  mstore\n  0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n  add\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n  dup4\n  or\n  swap1\n  sstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9c064737b570a74c2bac5d21056d93ac53115214216cd14d4a0fc9b60be81231\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  dup2\n  dup1\n    /* \"access/Ownable.sol\":3222:3264  OwnershipTransferred(address(0), newOwner) */\n  log3\n    /* \"access/Ownable.sol\":2942:3272  function _addOwner(address newOwner) internal {... */\n  jump\t// out\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\ntag_80:\n  0x24\n  dup3\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  mstore(0x04, 0x32)\n  revert\ntag_78:\n  0x24\n  dup3\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  mstore(0x04, 0x41)\n  revert\ntag_76:\n  0x64\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1c\n  0x24\n  dup3\n  add\n  mstore\n  0x4f776e61626c653a204f776e6572206973206e6f7420756e6971756500000000\n  0x44\n  dup3\n  add\n  mstore\n  revert\ntag_74:\n  0x84\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x22\n  0x24\n  dup3\n  add\n  mstore\n  0x4f776e61626c653a204f776e657220697320746865207a65726f206164647265\n  0x44\n  dup3\n  add\n  mstore\n  0x7373000000000000000000000000000000000000000000000000000000000000\n  0x64\n  dup3\n  add\n  mstore\n  revert\n    /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_5:\n  swap1\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  dup2\n  add\n  swap1\n  dup2\n  dup2\n  gt\n  tag_82\n  jumpi\n    /* \"libraries/SafeMath.sol\":601:607  c >= a */\n  dup2\n  lt\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n  tag_84\n  jumpi\n    /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\ntag_84:\n  0x64\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  revert\ntag_82:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x11)\n  revert(0x00, 0x24)\nstop\ndata_9c064737b570a74c2bac5d21056d93ac53115214216cd14d4a0fc9b60be81231 8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n\nsub_0: assembly {\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x80\n      0x40\n      swap1\n      dup1\n      dup3\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_30\n      jumpi\n    tag_31:\n      pop\n      pop\n      jumpi(tag_32, iszero(calldatasize))\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"SwishFishToken.sol\":4834:4843  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":4830:4913  if (msg.value > 0) {... */\n      tag_34\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      stop\n        /* \"SwishFishToken.sol\":4830:4913  if (msg.value > 0) {... */\n    tag_34:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mload\n        /* \"SwishFishToken.sol\":4834:4843  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":4869:4901  Deposit(_msgSender(), msg.value) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":4869:4901  Deposit(_msgSender(), msg.value) */\n      swap3\n      log2\n        /* \"SwishFishToken.sol\":4830:4913  if (msg.value > 0) {... */\n      stop\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_30:\n      0x00\n      swap2\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup4\n      calldataload\n      div\n      swap2\n      dup3\n      0x013cf08b\n      eq\n      tag_36\n      jumpi\n      pop\n      dup2\n      0x06fdde03\n      eq\n      tag_38\n      jumpi\n      dup2\n      0x095ea7b3\n      eq\n      tag_40\n      jumpi\n      dup2\n      0x0abdc640\n      eq\n      tag_42\n      jumpi\n      dup2\n      0x0d61b519\n      eq\n      tag_44\n      jumpi\n      dup2\n      0x1694505e\n      eq\n      tag_46\n      jumpi\n      dup2\n      0x18160ddd\n      eq\n      tag_48\n      jumpi\n      dup2\n      0x1b45a47a\n      eq\n      tag_50\n      jumpi\n      dup2\n      0x23b872dd\n      eq\n      tag_52\n      jumpi\n      dup2\n      0x2a9af7ba\n      eq\n      tag_54\n      jumpi\n      dup2\n      0x313ce567\n      eq\n      tag_56\n      jumpi\n      dup2\n      0x39262773\n      eq\n      tag_58\n      jumpi\n      dup2\n      0x39509351\n      eq\n      tag_60\n      jumpi\n      dup2\n      0x3ccfd60b\n      eq\n      tag_62\n      jumpi\n      dup2\n      0x553000c1\n      eq\n      tag_64\n      jumpi\n      dup2\n      0x562e9df9\n      eq\n      tag_66\n      jumpi\n      dup2\n      0x70a08231\n      eq\n      tag_68\n      jumpi\n      dup2\n      0x7918447e\n      eq\n      tag_70\n      jumpi\n      dup2\n      0x7a594a2b\n      eq\n      tag_72\n      jumpi\n      dup2\n      0x7d81936c\n      eq\n      tag_74\n      jumpi\n      dup2\n      0x8198c341\n      eq\n      tag_76\n      jumpi\n      dup2\n      0x85a6a091\n      eq\n      tag_78\n      jumpi\n      dup2\n      0x8da5cb5b\n      eq\n      tag_80\n      jumpi\n      dup2\n      0x933f5e07\n      eq\n      tag_82\n      jumpi\n      dup2\n      0x95d89b41\n      eq\n      tag_84\n      jumpi\n      dup2\n      0x98951b56\n      eq\n      tag_86\n      jumpi\n      dup2\n      0x9e5cd74a\n      eq\n      tag_88\n      jumpi\n      dup2\n      0xa457c2d7\n      eq\n      tag_90\n      jumpi\n      dup2\n      0xa6f2ae3a\n      eq\n      tag_92\n      jumpi\n      dup2\n      0xa9059cbb\n      eq\n      tag_94\n      jumpi\n      dup2\n      0xb6bba0ae\n      eq\n      tag_96\n      jumpi\n      dup2\n      0xc84ad9a5\n      eq\n      tag_98\n      jumpi\n      dup2\n      0xd7196dd9\n      eq\n      tag_100\n      jumpi\n      dup2\n      0xd8a0f828\n      eq\n      tag_102\n      jumpi\n      dup2\n      0xdce165a6\n      eq\n      tag_104\n      jumpi\n      pop\n      dup1\n      0xdd62ed3e\n      eq\n      tag_106\n      jumpi\n      0xfe7441e7\n      eq\n      tag_108\n      jumpi\n      dup1\n      jump(tag_31)\n    tag_108:\n      swap1\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      0x20\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n      tag_114\n      tag_3\n      jump\t// in\n    tag_114:\n      and\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":10999:11019  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_112:\n      pop\n      dup1\n      revert\n    tag_106:\n      pop\n      swap1\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      dup1\n      0x20\n      swap3\n      tag_119\n      tag_3\n      jump\t// in\n    tag_119:\n      tag_120\n      tag_4\n      jump\t// in\n    tag_120:\n      sub(exp(0x02, 0xa0), 0x01)\n      swap2\n      dup3\n      and\n      dup4\n      mstore\n        /* \"contracts/ERC20.sol\":4255:4266  _allowances */\n      0x01\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap2\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_104:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      0x0180\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup4\n      dup4\n      calldataload\n      swap2\n      dup3\n      iszero\n      iszero\n      dup1\n      swap4\n      sub\n      tag_112\n      jumpi\n      0x24\n      swap4\n      dup5\n      calldataload\n      swap2\n      dup3\n      iszero\n      iszero\n      dup1\n      swap4\n      sub\n      tag_127\n      jumpi\n      calldataload(0x44)\n      swap5\n      dup6\n      iszero\n      iszero\n      dup1\n      swap7\n      sub\n      tag_129\n      jumpi\n      calldataload(0x64)\n      swap4\n      dup5\n      iszero\n      iszero\n      swap7\n      dup8\n      dup7\n      sub\n      tag_131\n      jumpi\n      calldataload(0xa4)\n      swap8\n      dup9\n      iszero\n      iszero\n      swap1\n      dup2\n      dup11\n      sub\n      tag_133\n      jumpi\n      calldataload(0x0144)\n      dup1\n      iszero\n      iszero\n      swap11\n      dup12\n      dup3\n      sub\n      tag_135\n      jumpi\n      calldataload(0x0164)\n      swap10\n      sub(exp(0x02, 0xa0), 0x01)\n      swap12\n      dup13\n      dup13\n      and\n      dup1\n      swap13\n      sub\n      tag_137\n      jumpi\n      0xff\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      dup12\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_139\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_139:\n        /* \"SwishFishToken.sol\":12454:12615  if (_updateWithdrawOptions) {... */\n      tag_140\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_141:\n        /* \"SwishFishToken.sol\":12625:12866  if (_updateTaxesFees) {... */\n      tag_142\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_143:\n        /* \"SwishFishToken.sol\":12876:13018  if (_transferBackend) {... */\n      tag_144\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_145:\n      dup7\n      mload\n      swap7\n      0x01c0\n      dup9\n      add\n      dup9\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_146\n      jumpi\n      swap1\n      dup15\n      swap2\n      dup2\n      mstore\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup10\n      mstore\n      0x20\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup10\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup3\n      mstore\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap6\n      dup7\n      mstore\n      0x60\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap5\n      dup6\n      mstore\n      0x80\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      dup5\n      mstore\n      0xa0\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup3\n      mstore\n      0xc0\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      calldataload(0x84)\n      dup4\n      mstore\n      0xe0\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup10\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      dup5\n      mstore\n      0x0100\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup10\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap5\n      calldataload(0xc4)\n      dup7\n      mstore\n      0x0120\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup11\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap7\n      calldataload(0xe4)\n      dup9\n      mstore\n      0x0140\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup12\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap9\n      calldataload(0x0104)\n      dup11\n      mstore\n      0x0160\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup13\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap11\n      calldataload(0x0124)\n      dup13\n      mstore\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      dup13\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap15\n      dup16\n      mstore\n        /* \"SwishFishToken.sol\":13043:13652  Proposal({... */\n      0x01a0\n      dup13\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap13\n      dup14\n      mstore\n        /* \"SwishFishToken.sol\":13028:13037  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x01\n      tag_150\n      swap3\n      add\n        /* \"SwishFishToken.sol\":13028:13037  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      tag_1\n      jump\t// in\n    tag_150:\n      swap13\n      swap1\n      swap13\n      tag_151\n      jumpi\n      mload\n      dup13\n      sload\n      swap6\n      mload\n      swap2\n      mload\n      swap3\n      mload\n      swap4\n      mload\n      swap5\n      mload\n      iszero\n      iszero\n      0x01000000000000000000000000000000000000000000000000\n      mul\n      0xff000000000000000000000000000000000000000000000000\n      and\n      swap5\n      iszero\n      iszero\n      0x010000000000000000000000000000000000000000000000\n      mul\n      0xff0000000000000000000000000000000000000000000000\n      and\n      swap4\n      iszero\n      iszero\n      0x0100000000000000000000000000000000000000000000\n      mul\n      0xff00000000000000000000000000000000000000000000\n      and\n      swap3\n      iszero\n      iszero\n      0x01000000000000000000000000000000000000000000\n      mul\n      0xff000000000000000000000000000000000000000000\n      and\n      swap2\n      iszero\n      iszero\n      exp(0x02, 0xa0)\n      mul\n      0xff0000000000000000000000000000000000000000\n      and\n      swap1\n      dup16\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      swap7\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap5\n      swap1\n      swap5\n      or\n      swap4\n      swap1\n      swap4\n      or\n      swap3\n      swap1\n      swap3\n      or\n      swap2\n      swap1\n      swap2\n      or\n      or\n      dup8\n      sstore\n      mload\n      0x01\n      dup8\n      add\n      sstore\n      mload\n      0x02\n      dup7\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      0xff\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      mload\n      dup9\n      dup5\n      add\n      sstore\n      mload\n        /* \"SwishFishToken.sol\":13028:13037  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      add\n      sstore\n      mload\n      0x06\n      dup3\n      add\n      sstore\n      0x07\n      add\n      swap3\n      mload\n      iszero\n      iszero\n      tag_154\n      swap1\n      dup5\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_154:\n      mload\n      and\n      dup2\n      sload\n      swap1\n      0x0100\n      mul\n      0xffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffff00)\n      and\n      or\n      swap1\n      sstore\n        /* \"SwishFishToken.sol\":13028:13037  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap2\n      not(0x00)\n      dup4\n      add\n      swap3\n      dup4\n      gt\n      tag_155\n      jumpi\n        /* \"SwishFishToken.sol\":13669:13705  SubmitProposal(proposals.length - 1) */\n      pop\n      pop\n      0x096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce\n      dup3\n      dup1\n      log2\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_155:\n      0x11\n      dup5\n      swap2\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup12\n      dup15\n      dup1\n      dup16\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup3\n      mstore\n      mstore\n      revert\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup12\n      dup15\n      0x41\n      dup16\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_146:\n      pop\n      dup12\n      dup15\n      0x41\n      dup16\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":12876:13018  if (_transferBackend) {... */\n    tag_144:\n        /* \"SwishFishToken.sol\":12921:12950  _backendAddress != address(0) */\n      dup8\n        /* \"SwishFishToken.sol\":12876:13018  if (_transferBackend) {... */\n      tag_145\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      jumpi\n      0x84\n      dup13\n      0x33\n      dup14\n      0x20\n      dup12\n      mload\n      swap4\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220\n      0x44\n      dup3\n      add\n      mstore\n      0x697320746865207a65726f206164647265737300000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":12625:12866  if (_updateTaxesFees) {... */\n    tag_142:\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":12686:12756  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee */\n      tag_159\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      calldataload(0x0124)\n        /* \"SwishFishToken.sol\":12686:12737  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee */\n      tag_161\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      calldataload(0x0104)\n        /* \"SwishFishToken.sol\":12686:12723  _heisenVerseTaxFee + _marketingTaxFee */\n      tag_161\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      calldataload(0xe4)\n      calldataload(0xc4)\n        /* \"SwishFishToken.sol\":12686:12723  _heisenVerseTaxFee + _marketingTaxFee */\n      tag_7\n      jump\t// in\n    tag_161:\n        /* \"SwishFishToken.sol\":12686:12737  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee */\n      tag_7\n      jump\t// in\n        /* \"SwishFishToken.sol\":12686:12756  _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee */\n    tag_159:\n        /* \"SwishFishToken.sol\":12779:12798  sellTotalFees <= 10 */\n      gt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      iszero\n        /* \"SwishFishToken.sol\":12625:12866  if (_updateTaxesFees) {... */\n      tag_143\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      jumpi\n      0x84\n      dup14\n      0x33\n      dup15\n      0x20\n      dup13\n      mload\n      swap4\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a204d757374206b65657020\n      0x44\n      dup3\n      add\n      mstore\n      0x6665657320617420313025206f72206c65737300000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":12454:12615  if (_updateWithdrawOptions) {... */\n    tag_140:\n        /* \"SwishFishToken.sol\":12522:12538  5000000000000000 */\n      0x11c37937e08000\n        /* \"SwishFishToken.sol\":12505:12518  withdrawPrice */\n      0x11\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":12505:12538  withdrawPrice <= 5000000000000000 */\n      gt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      iszero\n        /* \"SwishFishToken.sol\":12454:12615  if (_updateWithdrawOptions) {... */\n      tag_141\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      jumpi\n      0x84\n      dup15\n      0x3c\n      dup16\n      0x20\n      dup14\n      mload\n      swap4\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a204d757374206b65657020\n      0x44\n      dup3\n      add\n      mstore\n      0x3530303030303030303030303030303020576569206f72206c65737300000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_137:\n      dup1\n      revert\n    tag_135:\n      dup11\n      dup1\n      revert\n    tag_133:\n      dup9\n      dup1\n      revert\n    tag_131:\n      dup7\n      dup1\n      revert\n    tag_129:\n      dup5\n      dup1\n      revert\n    tag_127:\n      dup4\n      dup1\n      revert\n    tag_121:\n      dup3\n      dup1\n      revert\n    tag_102:\n      dup4\n      swap2\n      pop\n      jumpi(tag_121, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"SwishFishToken.sol\":5415:5445  FirstLiquidityAdded(msg.value) */\n      0xc5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae74539\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n        /* \"SwishFishToken.sol\":5389:5398  msg.value */\n      tag_168\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_169\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup5\n      dup9\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_169:\n        /* \"SwishFishToken.sol\":5270:5291  firstLiquidityEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5262:5317  require(firstLiquidityEnabled, \"Presale isn't enabled\") */\n      tag_170\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      0x0100\n      dup4\n      div\n      and\n        /* \"SwishFishToken.sol\":5262:5317  require(firstLiquidityEnabled, \"Presale isn't enabled\") */\n      tag_5\n      jump\t// in\n    tag_170:\n      not(0xff00)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      and\n        /* \"SwishFishToken.sol\":5270:5291  firstLiquidityEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":5389:5398  msg.value */\n      callvalue\n      swap1\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      calldataload\n        /* \"SwishFishToken.sol\":5389:5398  msg.value */\n      tag_10\n      jump\t// in\n    tag_168:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mload\n        /* \"SwishFishToken.sol\":5389:5398  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":5415:5445  FirstLiquidityAdded(msg.value) */\n      log1\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_100:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_121\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_175\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup3\n      dup6\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_175:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n        /* \"SwishFishToken.sol\":5512:5576  super._transfer(address(this), addressHeisenDev, _poolHeisenDev) */\n      tag_176\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n        /* \"SwishFishToken.sol\":5543:5559  addressHeisenDev */\n      0x14\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5561:5575  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5536:5540  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":5512:5576  super._transfer(address(this), addressHeisenDev, _poolHeisenDev) */\n      tag_19\n      jump\t// in\n    tag_176:\n        /* \"SwishFishToken.sol\":5587:5651  super._transfer(address(this), addressMarketing, _poolMarketing) */\n      tag_177\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n        /* \"SwishFishToken.sol\":5618:5634  addressMarketing */\n      0x15\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5636:5650  _poolMarketing */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5536:5540  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":5587:5651  super._transfer(address(this), addressMarketing, _poolMarketing) */\n      tag_19\n      jump\t// in\n    tag_177:\n        /* \"SwishFishToken.sol\":5662:5716  super._transfer(address(this), addressTeam, _poolTeam) */\n      tag_178\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n        /* \"SwishFishToken.sol\":5693:5704  addressTeam */\n      0x16\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5706:5715  _poolTeam */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5536:5540  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":5662:5716  super._transfer(address(this), addressTeam, _poolTeam) */\n      tag_19\n      jump\t// in\n    tag_178:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup1\n      dup1\n      dup1\n        /* \"SwishFishToken.sol\":5744:5787  _poolHeisenDev + _poolMarketing + _poolTeam */\n      tag_179\n        /* \"SwishFishToken.sol\":5744:5775  _poolHeisenDev + _poolMarketing */\n      tag_180\n        /* \"SwishFishToken.sol\":5561:5575  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5636:5650  _poolMarketing */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5744:5775  _poolHeisenDev + _poolMarketing */\n      swap1\n      tag_7\n      jump\t// in\n    tag_180:\n        /* \"SwishFishToken.sol\":5706:5715  _poolTeam */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":5744:5787  _poolHeisenDev + _poolMarketing + _poolTeam */\n      swap1\n      tag_7\n      jump\t// in\n    tag_179:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap7\n      dup2\n        /* \"SwishFishToken.sol\":5561:5575  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n        /* \"SwishFishToken.sol\":5636:5650  _poolMarketing */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n        /* \"SwishFishToken.sol\":5706:5715  _poolTeam */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":5543:5559  addressHeisenDev */\n      0x14\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":5536:5540  this */\n      address\n        /* \"SwishFishToken.sol\":5925:5946  address(this).balance */\n      balance\n        /* \"SwishFishToken.sol\":5896:5951  addressHeisenDev.call{value: address(this).balance}(\"\") */\n      swap1\n      gas\n      call\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      jumpi(tag_181, iszero(returndatasize))\n      returndatasize\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_183\n      jumpi\n      dup4\n      mload\n      swap1\n      tag_185\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup4\n      tag_9\n      jump\t// in\n    tag_185:\n      dup2\n      mstore\n      dup6\n      0x20\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_186:\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"SwishFishToken.sol\":6013:6032  TeamPayment(amount) */\n      0x21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      0x20\n      swap2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":6013:6032  TeamPayment(amount) */\n      log1\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_187:\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x4661696c656420746f2073656e6420424e420000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_183:\n      0x24\n      dup7\n      0x41\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_181:\n      jump(tag_186)\n    tag_98:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      0xff\n        /* \"SwishFishToken.sol\":599:631  bool public salesEnabled = false */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_96:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2222:2251  uint256 public taxFeeTeam = 3 */\n      0x19\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_94:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_201\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_202\n      tag_3\n      jump\t// in\n    tag_202:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_18\n      jump\t// in\n    tag_201:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mload\n      0x01\n      dup2\n      mstore\n      return\n    tag_92:\n      dup3\n      dup5\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"SwishFishToken.sol\":5054:5086  balanceOf(address(this)).mul(10) */\n      tag_205\n        /* \"SwishFishToken.sol\":5136:5145  msg.value */\n      tag_206\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n        /* \"SwishFishToken.sol\":4971:5017  require(salesEnabled, \"Presale isn't enabled\") */\n      tag_207\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n        /* \"SwishFishToken.sol\":4979:4991  salesEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":4971:5017  require(salesEnabled, \"Presale isn't enabled\") */\n      tag_5\n      jump\t// in\n    tag_207:\n        /* \"SwishFishToken.sol\":5072:5076  this */\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n      dup4\n      0x20\n      mstore\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":5054:5086  balanceOf(address(this)).mul(10) */\n      tag_27\n      jump\t// in\n    tag_205:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_208\n      tag_29\n      jump\t// in\n    tag_208:\n      pop\n        /* \"SwishFishToken.sol\":5091:5094  100 */\n      0x64\n        /* \"SwishFishToken.sol\":5136:5145  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      div\n        /* \"SwishFishToken.sol\":5136:5145  msg.value */\n      tag_10\n      jump\t// in\n    tag_206:\n        /* \"SwishFishToken.sol\":5162:5170  BuyEgg() */\n      0x6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b\n      dup2\n      dup1\n      log1\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_90:\n      swap2\n      swap1\n      pop\n      jumpi(tag_137, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_137\n      jumpi\n      tag_213\n      tag_3\n      jump\t// in\n    tag_213:\n      swap2\n      dup4\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup7\n      and\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":7059:7094  currentAllowance >= subtractedValue */\n      swap1\n      dup3\n      dup3\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_214\n      jumpi\n      0x20\n      dup6\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_201\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_217\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup8\n      dup8\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_218\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_219\n      tag_22\n      jump\t// in\n    tag_219:\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup3\n      dup5\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_218:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_12\n      jump\t// in\n    tag_217:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_20\n      jump\t// in\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_214:\n      0x84\n      swap1\n      0x20\n      dup7\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n      0x44\n      dup3\n      add\n      mstore\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_88:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2138:2174  uint256 public taxFeeHeisenverse = 2 */\n      0x17\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_86:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup3\n      calldataload\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_228\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup5\n      dup8\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_228:\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_229\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1082:1112  _proposalId < proposals.length */\n      dup6\n      lt\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_13\n      jump\t// in\n    tag_229:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup6\n      mstore\n        /* \"utils/MultiSignature.sol\":1257:1273  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup3\n      mstore\n      0xff\n      dup4\n      dup7\n      keccak256\n      sload\n      and\n      tag_230\n      jumpi\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      pop\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_232\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      exp(0x02, 0xa0)\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      tag_233\n      dup7\n      tag_1\n      jump\t// in\n    tag_233:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      pop\n      sload\n      div\n      and\n        /* \"utils/MultiSignature.sol\":1457:1489  !proposals[_proposalId].executed */\n      iszero\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_14\n      jump\t// in\n    tag_232:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      dup5\n      mstore\n        /* \"utils/MultiSignature.sol\":1257:1273  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      mstore\n      dup3\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":13959:14001  ApproveProposal(_msgSender(), _proposalId) */\n      0x12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7\n      dup4\n      dup1\n      log3\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_230:\n      swap1\n      0x84\n      swap3\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x3c\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2061\n      0x44\n      dup3\n      add\n      mstore\n      0x6c72656164792077617320617070726f766564206279206f776e657200000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_84:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_121\n      jumpi\n      dup1\n      mload\n      swap2\n      dup4\n      dup2\n      sload\n      swap2\n      0x02\n      dup4\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup6\n      and\n      swap5\n      dup6\n      iszero\n      tag_238\n      jumpi\n    tag_239:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup2\n      eq\n      tag_240\n      jumpi\n      dup6\n      dup10\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_242\n      jumpi\n      pop\n      0x01\n      eq\n      tag_244\n      jumpi\n    tag_245:\n      tag_246\n      dup8\n      dup8\n      tag_247\n      dup3\n      dup13\n      sub\n      dup4\n      tag_9\n      jump\t// in\n    tag_247:\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_2\n      jump\t// in\n    tag_246:\n      sub\n      swap1\n      return\n    tag_244:\n      dup2\n      mstore\n      swap3\n      swap6\n      pop\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n    tag_248:\n      dup3\n      dup5\n      lt\n      tag_249\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_246\n      swap5\n      tag_247\n      swap3\n      dup3\n      add\n      add\n      swap5\n      dup7\n      dup1\n      jump(tag_245)\n    tag_249:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_248)\n    tag_242:\n      not(0xff)\n      and\n      dup9\n      dup8\n      add\n      mstore\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_247\n      dup3\n      tag_246\n      dup7\n      dup1\n      jump(tag_245)\n    tag_240:\n      0x24\n      dup5\n      0x22\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_238:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_239)\n    tag_82:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2258:2292  uint256 public taxFeeLiquidity = 2 */\n      0x1a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_80:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"access/Ownable.sol\":1367:1373  _owner */\n      0x08\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_78:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup3\n      calldataload\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n        /* \"access/Ownable.sol\":1789:1796  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_263\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      dup5\n      dup8\n      keccak256\n      sload\n      and\n        /* \"access/Ownable.sol\":1781:1847  require(isOwner[_msgSender()],  \"Ownable: caller is not an owner\") */\n      tag_6\n      jump\t// in\n    tag_263:\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_264\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1082:1112  _proposalId < proposals.length */\n      dup6\n      lt\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_13\n      jump\t// in\n    tag_264:\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_265\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xff\n      exp(0x02, 0xa0)\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      tag_233\n      dup8\n      tag_1\n      jump\t// in\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n    tag_265:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup6\n      mstore\n        /* \"SwishFishToken.sol\":15519:15535  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup3\n      mstore\n      0xff\n      dup4\n      dup7\n      keccak256\n      sload\n      and\n      iszero\n      tag_267\n      jumpi\n      pop\n      dup3\n      dup5\n      mstore\n        /* \"SwishFishToken.sol\":15519:15535  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      mstore\n      dup3\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":15691:15732  RevokeProposal(_msgSender(), _proposalId) */\n      0xb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb\n      dup4\n      dup1\n      log3\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_267:\n      swap1\n      0x84\n      swap3\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x2e\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2050726f706f73616c2069\n      0x44\n      dup3\n      add\n      mstore\n      0x73206e6f7420617070726f766564000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_76:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      jumpi(tag_121, slt(add(not(0x03), calldatasize), 0x60))\n      tag_273\n      tag_3\n      jump\t// in\n    tag_273:\n      swap1\n      0x24\n      dup1\n      calldataload\n      swap4\n      0x44\n      swap1\n      dup2\n      calldataload\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      swap3\n      dup4\n        /* \"access/Ownable.sol\":1642:1650  _backend */\n      0x07\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap5\n      caller\n        /* \"access/Ownable.sol\":2000:2025  backend() == _msgSender() */\n      dup7\n      sub\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_274\n      jumpi\n        /* \"access/Ownable.sol\":2075:2076  _ */\n      dup5\n      dup10\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap9\n      and\n      swap5\n      dup6\n      dup12\n      mstore\n      0x20\n      swap7\n        /* \"access/Ownable.sol\":2237:2244  isOwner */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup9\n      mstore\n      0xff\n      dup10\n      dup14\n      keccak256\n      sload\n      and\n      tag_276\n      jumpi\n        /* \"SwishFishToken.sol\":9200:9215  to != backend() */\n      dup7\n      eq\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_278\n      jumpi\n      dup1\n        /* \"SwishFishToken.sol\":9275:9291  addressHeisenDev */\n      0x14\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9269:9291  to != addressHeisenDev */\n      dup7\n      eq\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_280\n      jumpi\n      dup1\n        /* \"SwishFishToken.sol\":9350:9366  addressMarketing */\n      0x15\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9344:9366  to != addressMarketing */\n      dup7\n      eq\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_282\n      jumpi\n        /* \"SwishFishToken.sol\":9425:9436  addressTeam */\n      0x16\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":9419:9436  to != addressTeam */\n      dup6\n      eq\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_284\n      jumpi\n        /* \"SwishFishToken.sol\":9494:9496  75 */\n      0x4b\n        /* \"SwishFishToken.sol\":9487:9496  fee <= 75 */\n      dup5\n      gt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_286\n      jumpi\n      dup5\n      dup11\n      mstore\n        /* \"SwishFishToken.sol\":9545:9565  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      mstore\n      dup7\n      dup11\n      keccak256\n      sload\n      tag_288\n      jumpi\n        /* \"SwishFishToken.sol\":9636:9665  _maxTransactionWithdrawAmount */\n      0x13\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9626:9665  amount <= _maxTransactionWithdrawAmount */\n      dup10\n      gt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_290\n      jumpi\n        /* \"SwishFishToken.sol\":9759:9774  amount.mul(fee) */\n      pop\n      pop\n      pop\n      tag_292\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"SwishFishToken.sol\":9759:9774  amount.mul(fee) */\n      swap2\n      dup8\n      tag_28\n      jump\t// in\n    tag_292:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_293\n      tag_29\n      jump\t// in\n    tag_293:\n      pop\n      div\n      swap5\n        /* \"SwishFishToken.sol\":9815:9832  taxFeeHeisenverse */\n      0x17\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n        /* \"SwishFishToken.sol\":9835:9850  taxFeeMarketing */\n      0x18\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9815:9850  taxFeeHeisenverse + taxFeeMarketing */\n      tag_294\n      dup2\n      dup5\n      tag_7\n      jump\t// in\n    tag_294:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap3\n        /* \"SwishFishToken.sol\":9815:9863  taxFeeHeisenverse + taxFeeMarketing + taxFeeTeam */\n      tag_295\n        /* \"SwishFishToken.sol\":9853:9863  taxFeeTeam */\n      0x19\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9815:9863  taxFeeHeisenverse + taxFeeMarketing + taxFeeTeam */\n      dup1\n      swap6\n      tag_7\n      jump\t// in\n    tag_295:\n        /* \"SwishFishToken.sol\":9878:9893  totalTaxes == 0 */\n      swap1\n      dup2\n      tag_296\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SwishFishToken.sol\":9927:9956  _poolHeisenDev.add(amountFee) */\n      tag_298\n        /* \"SwishFishToken.sol\":9545:9565  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      swap5\n      swap6\n        /* \"SwishFishToken.sol\":9927:9941  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":9927:9956  _poolHeisenDev.add(amountFee) */\n      tag_21\n      jump\t// in\n    tag_298:\n        /* \"SwishFishToken.sol\":9927:9941  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":9874:10846  if (totalTaxes == 0) {... */\n    tag_299:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      mstore\n      dup3\n      keccak256\n      sstore\n      dup1\n      return\n        /* \"SwishFishToken.sol\":9874:10846  if (totalTaxes == 0) {... */\n    tag_296:\n        /* \"SwishFishToken.sol\":10031:10057  taxFeeHeisenverse.mul(100) */\n      tag_300\n      swap2\n      swap3\n      swap5\n      swap10\n      swap4\n      swap6\n      swap8\n      swap9\n      pop\n      tag_26\n      jump\t// in\n    tag_300:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      tag_301\n      tag_29\n      jump\t// in\n    tag_301:\n      pop\n        /* \"libraries/SafeMath.sol\":3573:3578  a / b */\n      tag_302\n      swap2\n      tag_24\n      jump\t// in\n    tag_302:\n        /* \"SwishFishToken.sol\":10121:10145  taxFeeMarketing.mul(100) */\n      swap3\n      tag_303\n      swap1\n      tag_26\n      jump\t// in\n    tag_303:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      tag_304\n      tag_29\n      jump\t// in\n    tag_304:\n      pop\n        /* \"libraries/SafeMath.sol\":3573:3578  a / b */\n      tag_305\n      swap2\n      tag_24\n      jump\t// in\n    tag_305:\n        /* \"SwishFishToken.sol\":10204:10223  taxFeeTeam.mul(100) */\n      swap8\n      tag_306\n      swap1\n      tag_26\n      jump\t// in\n    tag_306:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      tag_307\n      tag_29\n      jump\t// in\n    tag_307:\n      pop\n        /* \"libraries/SafeMath.sol\":3573:3578  a / b */\n      tag_308\n      swap2\n      tag_24\n      jump\t// in\n    tag_308:\n        /* \"SwishFishToken.sol\":10282:10319  amountFee.mul(currentTaxFeeHeisenDev) */\n      swap2\n      tag_309\n      swap1\n      dup3\n      tag_28\n      jump\t// in\n    tag_309:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_310\n      tag_29\n      jump\t// in\n    tag_310:\n      pop\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      div\n        /* \"SwishFishToken.sol\":10369:10406  amountFee.mul(currentTaxFeeMarketing) */\n      swap7\n      tag_311\n      swap1\n      dup3\n      tag_28\n      jump\t// in\n    tag_311:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_312\n      tag_29\n      jump\t// in\n    tag_312:\n      pop\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      div\n        /* \"SwishFishToken.sol\":10451:10483  amountFee.mul(currentTaxFeeTeam) */\n      swap2\n      tag_313\n      swap2\n      tag_28\n      jump\t// in\n    tag_313:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_314\n      tag_29\n      jump\t// in\n    tag_314:\n      pop\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      div\n      swap2\n      dup7\n      tag_315\n      tag_22\n      jump\t// in\n    tag_315:\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_316\n      swap1\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_316:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_317\n      swap2\n      tag_12\n      jump\t// in\n    tag_317:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      tag_318\n      tag_22\n      jump\t// in\n    tag_318:\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_319\n      swap1\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_319:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_320\n      swap2\n      tag_12\n      jump\t// in\n    tag_320:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      tag_321\n      tag_22\n      jump\t// in\n    tag_321:\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_322\n      swap1\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_23\n      jump\t// in\n    tag_322:\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_323\n      swap2\n      tag_12\n      jump\t// in\n    tag_323:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap6\n        /* \"SwishFishToken.sol\":10678:10692  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":10678:10715  _poolHeisenDev.add(heisenVerseAmount) */\n      swap1\n      tag_324\n      swap2\n      tag_21\n      jump\t// in\n    tag_324:\n        /* \"SwishFishToken.sol\":10678:10692  _poolHeisenDev */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":10747:10761  _poolMarketing */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":10747:10782  _poolMarketing.add(marketingAmount) */\n      swap1\n      tag_325\n      swap2\n      tag_21\n      jump\t// in\n    tag_325:\n        /* \"SwishFishToken.sol\":10747:10761  _poolMarketing */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":10809:10818  _poolTeam */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":10809:10834  _poolTeam.add(teamAmount) */\n      swap1\n      tag_326\n      swap2\n      tag_21\n      jump\t// in\n    tag_326:\n        /* \"SwishFishToken.sol\":10809:10818  _poolTeam */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":9545:9565  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":9874:10846  if (totalTaxes == 0) {... */\n      swap2\n      jump(tag_299)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_290:\n      0x84\n      swap3\n      swap2\n      0x38\n      0x416d6f756e742063616e2774206578636565647320746865206d617820747261\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x6e73616374696f6e20776974686472617720616d6f756e740000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_288:\n      0x64\n      swap3\n      swap2\n      0x1c\n      0x55736572206861732070656e64696e67205769746864726177616c7300000000\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_286:\n      0x64\n      swap3\n      swap2\n      0x19\n      0x546865206665652063616e6e6f74206578636565642037352500000000000000\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_284:\n      0x64\n      swap3\n      swap2\n      0x1b\n      0x5465616d2063616e2774206d616b65207769746864726177616c730000000000\n      swap3\n      dup9\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_282:\n      0x64\n      dup5\n      0x536b796c65722063616e2774206d616b65207769746864726177616c73000000\n      dup6\n      0x1d\n      dup7\n      dup13\n      dup15\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_280:\n      0x64\n      dup5\n      0x48656973656e2063616e2774206d616b65207769746864726177616c73000000\n      dup6\n      0x1d\n      dup7\n      dup13\n      dup15\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_278:\n      0x64\n      dup5\n      0x4261636b656e642063616e2774206d616b65207769746864726177616c730000\n      dup6\n      0x1e\n      dup7\n      dup13\n      dup15\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_276:\n      0x64\n      dup6\n      0x4f776e6572732063616e2774206d616b65207769746864726177616c73000000\n      dup7\n      0x1d\n      dup8\n      dup14\n      dup16\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      revert\n    tag_274:\n      0x84\n      swap3\n      swap2\n      0x22\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b65\n      swap3\n      0x20\n      dup11\n      mload\n      swap6\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup8\n      mstore\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x6e64000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_74:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2181:2215  uint256 public taxFeeMarketing = 3 */\n      0x18\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_72:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":1468:1561  address payable public addressHeisenDev = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338) */\n      0x14\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_70:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":888:927  uint public withdrawPrice = 0.005 ether */\n      0x11\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_68:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      0x20\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n      tag_343\n      tag_3\n      jump\t// in\n    tag_343:\n      and\n      dup2\n      mstore\n      dup1\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_66:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":1668:1756  address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B) */\n      0x16\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_64:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2522:2550  uint256 public _poolTeam = 0 */\n      0x1d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_62:\n      swap1\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":11155:11177  _accountWithdrawalLast */\n      0x0f\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":11191:11196  86400 */\n      0x015180\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      add\n      swap1\n      dup2\n      dup2\n      gt\n      tag_360\n      jumpi\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_362\n      jumpi\n        /* \"SwishFishToken.sol\":11137:11152  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":11137:11197  block.timestamp > _accountWithdrawalLast[account].add(86400) */\n      gt\n        /* \"SwishFishToken.sol\":11133:11326  if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {... */\n      tag_358\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_359:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":11371:11394  _accountWithdrawalCount */\n      0x10\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":11408:11409  1 */\n      0x01\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      add\n      swap1\n      dup2\n      dup2\n      gt\n      tag_360\n      jumpi\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_362\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n        /* \"SwishFishToken.sol\":11371:11394  _accountWithdrawalCount */\n      0x10\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      dup5\n      dup5\n      keccak256\n      sstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":11465:11484  _maxWithdrawalCount */\n      0x12\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      lt\n      tag_364\n      jumpi\n        /* \"SwishFishToken.sol\":11684:11697  withdrawPrice */\n      0x11\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":11670:11679  msg.value */\n      callvalue\n        /* \"SwishFishToken.sol\":11670:11698  msg.value >= (withdrawPrice) */\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_366\n      jumpi\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      pop\n        /* \"SwishFishToken.sol\":11961:11977  Withdraw(amount) */\n      0x5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      swap3\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n        /* \"SwishFishToken.sol\":11799:11819  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n      sload\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n        /* \"SwishFishToken.sol\":11889:11895  amount */\n      tag_368\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      dup3\n      caller\n        /* \"SwishFishToken.sol\":11868:11872  this */\n      address\n        /* \"SwishFishToken.sol\":11889:11895  amount */\n      tag_19\n      jump\t// in\n    tag_368:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n        /* \"SwishFishToken.sol\":11799:11819  _authorizedWithdraws */\n      0x0e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      dup5\n      dup2\n      dup2\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":11961:11977  Withdraw(amount) */\n      log1\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      return\n    tag_366:\n      0xa4\n      swap2\n      dup5\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x44\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520616d6f756e742073656e74206973206e6f7420657175616c20746f20\n      0x44\n      dup3\n      add\n      mstore\n      0x74686520424e4220616d6f756e7420726571756972656420666f722077697468\n      0x64\n      dup3\n      add\n      mstore\n      0x6472617700000000000000000000000000000000000000000000000000000000\n      0x84\n      dup3\n      add\n      mstore\n      revert\n    tag_364:\n      0x84\n      swap2\n      dup5\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x30\n      0x24\n      dup3\n      add\n      mstore\n      0x596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e65207769\n      0x44\n      dup3\n      add\n      mstore\n      0x746864726177616c207065722064617900000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_362:\n      pop\n      0x64\n      swap2\n      dup5\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_360:\n      0x24\n      dup6\n      0x11\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":11133:11326  if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {... */\n    tag_358:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":11155:11177  _accountWithdrawalLast */\n      0x0f\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n        /* \"SwishFishToken.sol\":11137:11152  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      dup5\n      keccak256\n      sstore\n        /* \"SwishFishToken.sol\":11278:11301  _accountWithdrawalCount */\n      0x10\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      dup3\n      dup5\n      dup2\n      keccak256\n      sstore\n        /* \"SwishFishToken.sol\":11133:11326  if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {... */\n      jump(tag_359)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_60:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_201\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      swap3\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_217\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_375\n      tag_3\n      jump\t// in\n    tag_375:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      0x01\n      dup7\n      mstore\n      dup5\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup3\n      mstore\n      dup7\n      mstore\n      dup5\n      calldataload(0x24)\n      swap2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_21\n      jump\t// in\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_58:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2442:2475  uint256 public _poolHeisenDev = 0 */\n      0x1b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_56:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/ERC20.sol\":3304:3306  18 */\n      0x12\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mstore\n      return\n    tag_54:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2557:2590  uint256 public _poolLiquidity = 0 */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_52:\n      swap1\n      pop\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x60))\n      tag_392\n      tag_3\n      jump\t// in\n    tag_392:\n      tag_393\n      tag_4\n      jump\t// in\n    tag_393:\n      swap2\n      dup5\n      calldataload(0x44)\n      swap5\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n      swap1\n      not(0x00)\n        /* \"contracts/ERC20.sol\":11767:11804  currentAllowance != type(uint256).max */\n      dup3\n      sub\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      tag_394\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_395:\n      0x20\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      dup7\n      tag_201\n      dup8\n      dup8\n      dup8\n      tag_18\n      jump\t// in\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n    tag_394:\n        /* \"contracts/ERC20.sol\":11829:11855  currentAllowance >= amount */\n      dup5\n      dup3\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_397\n      jumpi\n      pop\n      swap2\n      dup4\n      swap2\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      tag_399\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_400\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      swap8\n      swap7\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      tag_201\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap7\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_218\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_219\n      tag_22\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n    tag_400:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      dup4\n      tag_20\n      jump\t// in\n    tag_399:\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      swap2\n      swap4\n      swap5\n      dup2\n      swap4\n      pop\n      jump(tag_395)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_397:\n      0x64\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_50:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"SwishFishToken.sol\":2482:2515  uint256 public _poolMarketing = 0 */\n      0x1c\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":3467:3479  _totalSupply */\n      0x02\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_46:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":425:466  IUniswapV2Router02 public uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_44:\n      dup4\n      swap2\n      pop\n      jumpi(tag_121, callvalue)\n      0x20\n      swap1\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_127\n      jumpi\n      dup1\n      calldataload\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_419\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1082:1112  _proposalId < proposals.length */\n      dup3\n      lt\n        /* \"utils/MultiSignature.sol\":1074:1162  require(_proposalId < proposals.length, \"MultiSignatureWallet: proposal does not exist\") */\n      tag_13\n      jump\t// in\n    tag_419:\n        /* \"utils/MultiSignature.sol\":1458:1480  proposals[_proposalId] */\n      tag_420\n      dup2\n      tag_1\n      jump\t// in\n    tag_420:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      pop\n      0xff\n      swap2\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_421\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      exp(0x02, 0xa0)\n      dup1\n      swap5\n      sload\n      div\n      and\n        /* \"utils/MultiSignature.sol\":1457:1489  !proposals[_proposalId].executed */\n      iszero\n        /* \"utils/MultiSignature.sol\":1449:1545  require(!proposals[_proposalId].executed, \"MultiSignatureWallet: proposal was already executed\") */\n      tag_14\n      jump\t// in\n    tag_421:\n        /* \"access/Ownable.sol\":1470:1477  _owners */\n      0x09\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":14104:14121  uint256 count = 0 */\n      dup8\n      dup1\n        /* \"SwishFishToken.sol\":14145:14172  i < requiredConfirmations() */\n    tag_422:\n      dup3\n      dup2\n      lt\n      tag_423\n      jumpi\n        /* \"SwishFishToken.sol\":14468:14525  _getApprovalCount(_proposalId) >= requiredConfirmations() */\n      pop\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_425\n      jumpi\n        /* \"SwishFishToken.sol\":14622:14644  proposals[_proposalId] */\n      swap1\n      tag_427\n        /* \"SwishFishToken.sol\":15196:15220  proposal.transferBackend */\n      0x07\n        /* \"SwishFishToken.sol\":14622:14644  proposals[_proposalId] */\n      swap3\n      tag_1\n      jump\t// in\n    tag_427:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      pop\n      swap1\n      not(0xff0000000000000000000000000000000000000000)\n      dup3\n      sload\n      and\n      or\n      dup1\n      dup3\n      sstore\n      dup6\n      dup5\n      dup1\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n        /* \"SwishFishToken.sol\":14690:14789  if (proposal.updateSalesStatus) {... */\n      tag_428\n      jumpi\n        /* \"SwishFishToken.sol\":14132:14298  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_429:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      pop\n      pop\n      0x010000000000000000000000000000000000000000000000\n      dup3\n      sload\n      div\n      and\n        /* \"SwishFishToken.sol\":14799:14881  if (proposal.swapAndAddLiquidity) {... */\n      tag_430\n      jumpi\n        /* \"SwishFishToken.sol\":14132:14298  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_431:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      0x01000000000000000000000000000000000000000000000000\n      dup3\n      sload\n      div\n      and\n        /* \"SwishFishToken.sol\":14891:14999  if (proposal.updateWithdrawOptions) {... */\n      tag_432\n      jumpi\n        /* \"SwishFishToken.sol\":14132:14298  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_433:\n        /* \"SwishFishToken.sol\":15013:15037  proposal.updateTaxesFees */\n      dup3\n      0x02\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":15009:15182  if (proposal.updateTaxesFees) {... */\n      tag_434\n      jumpi\n        /* \"SwishFishToken.sol\":14132:14298  for (uint i; i < requiredConfirmations(); i++) {... */\n    tag_435:\n        /* \"SwishFishToken.sol\":15196:15220  proposal.transferBackend */\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      sload\n      swap2\n      dup3\n      and\n        /* \"SwishFishToken.sol\":15192:15358  if (proposal.transferBackend) {... */\n      tag_436\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      dup1\n      return\n        /* \"SwishFishToken.sol\":15192:15358  if (proposal.transferBackend) {... */\n    tag_436:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap3\n      dup4\n      0x0100\n      dup1\n      swap5\n      div\n      and\n        /* \"access/Ownable.sol\":2663:2687  newBackend != address(0) */\n      swap1\n      dup2\n      iszero\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_438\n      jumpi\n      pop\n      dup1\n      not(sub(exp(0x02, 0xa0), 0x01))\n        /* \"SwishFishToken.sol\":15196:15220  proposal.transferBackend */\n      0x07\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      or\n        /* \"SwishFishToken.sol\":15196:15220  proposal.transferBackend */\n      0x07\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"access/Ownable.sol\":2778:2822  OwnershipTransferred(address(0), newBackend) */\n      dup7\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      dup2\n      dup1\n      log3\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      div\n      and\n      dup4\n      mstore\n      dup1\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"SwishFishToken.sol\":15192:15358  if (proposal.transferBackend) {... */\n      dup2\n      dup1\n      dup1\n      dup1\n      dup1\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      dup1\n      return\n    tag_438:\n      0x84\n      swap1\n      dup7\n      dup9\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      0x44\n      dup3\n      add\n      mstore\n      0x6464726573730000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":15009:15182  if (proposal.updateTaxesFees) {... */\n    tag_434:\n        /* \"SwishFishToken.sol\":8187:8271  UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee) */\n      0xac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee9\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x80\n      0x03\n        /* \"SwishFishToken.sol\":15070:15096  proposal.heisenVerseTaxFee */\n      dup4\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":15098:15122  proposal.marketingTaxFee */\n      dup7\n      dup5\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":15124:15143  proposal.teamTaxFee */\n      dup6\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":14198:14214  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":15145:15169  proposal.liquidityTaxFee */\n      dup7\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap2\n      dup4\n        /* \"SwishFishToken.sol\":8008:8046  taxFeeHeisenverse = _heisenVerseTaxFee */\n      0x17\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup1\n        /* \"SwishFishToken.sol\":8057:8091  taxFeeMarketing = _marketingTaxFee */\n      0x18\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup2\n        /* \"SwishFishToken.sol\":8102:8126  taxFeeTeam = _teamTaxFee */\n      0x19\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup3\n        /* \"SwishFishToken.sol\":8137:8171  taxFeeLiquidity = _liquidityTaxFee */\n      0x1a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup12\n      mload\n      swap4\n      dup5\n      mstore\n      dup11\n      dup5\n      add\n      mstore\n      dup11\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"SwishFishToken.sol\":8187:8271  UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee) */\n      log1\n        /* \"SwishFishToken.sol\":15009:15182  if (proposal.updateTaxesFees) {... */\n      jump(tag_435)\n        /* \"SwishFishToken.sol\":14891:14999  if (proposal.updateWithdrawOptions) {... */\n    tag_432:\n        /* \"SwishFishToken.sol\":8407:8444  UpdateWithdrawOptions(_withdrawPrice) */\n      0x7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c\n        /* \"SwishFishToken.sol\":14964:14986  proposal.withdrawPrice */\n      dup6\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x01\n        /* \"SwishFishToken.sol\":14964:14986  proposal.withdrawPrice */\n      dup4\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      dup1\n        /* \"SwishFishToken.sol\":8361:8391  withdrawPrice = _withdrawPrice */\n      0x11\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup9\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":8407:8444  UpdateWithdrawOptions(_withdrawPrice) */\n      log1\n        /* \"SwishFishToken.sol\":14891:14999  if (proposal.updateWithdrawOptions) {... */\n      jump(tag_433)\n        /* \"SwishFishToken.sol\":14799:14881  if (proposal.swapAndAddLiquidity) {... */\n    tag_430:\n        /* \"SwishFishToken.sol\":6979:6994  contractBalance */\n      tag_440\n        /* \"SwishFishToken.sol\":6804:6808  this */\n      address\n        /* \"SwishFishToken.sol\":6796:6817  address(this).balance */\n      balance\n        /* \"SwishFishToken.sol\":6845:6859  _poolLiquidity */\n      tag_441\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":6845:6859  _poolLiquidity */\n      tag_15\n      jump\t// in\n    tag_441:\n        /* \"SwishFishToken.sol\":6804:6808  this */\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup10\n      mstore\n      dup9\n      dup8\n      mstore\n        /* \"SwishFishToken.sol\":6934:6937  100 */\n      0x64\n        /* \"SwishFishToken.sol\":6897:6929  balanceOf(address(this)).mul(30) */\n      tag_442\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup10\n      dup12\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":6897:6929  balanceOf(address(this)).mul(30) */\n      tag_25\n      jump\t// in\n    tag_442:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_443\n      tag_29\n      jump\t// in\n    tag_443:\n      pop\n      div\n        /* \"SwishFishToken.sol\":6979:6994  contractBalance */\n      tag_10\n      jump\t// in\n    tag_440:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n        /* \"SwishFishToken.sol\":6845:6859  _poolLiquidity */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":14799:14881  if (proposal.swapAndAddLiquidity) {... */\n      jump(tag_431)\n        /* \"SwishFishToken.sol\":14690:14789  if (proposal.updateSalesStatus) {... */\n    tag_428:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x0100000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":8570:8595  SalesState(_salesEnabled) */\n      0x01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap4\n      div\n      and\n      iszero\n      iszero\n      not(0xff)\n        /* \"SwishFishToken.sol\":8526:8554  salesEnabled = _salesEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      dup7\n      dup3\n      and\n      or\n        /* \"SwishFishToken.sol\":8526:8554  salesEnabled = _salesEnabled */\n      0x0d\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n      dup9\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":8570:8595  SalesState(_salesEnabled) */\n      log1\n        /* \"SwishFishToken.sol\":14690:14789  if (proposal.updateSalesStatus) {... */\n      dup8\n      dup6\n      dup5\n      jump(tag_429)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_425:\n      0x84\n      dup5\n      dup7\n      dup9\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x35\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a20617070726f76616c7320\n      0x44\n      dup3\n      add\n      mstore\n      0x6973206c657373207468616e2072657175697265640000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":14174:14177  i++ */\n    tag_423:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      dup11\n      mstore\n        /* \"SwishFishToken.sol\":14198:14214  proposalApproved */\n      0x06\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup9\n      mstore\n      dup9\n      dup11\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      add\n      sload\n      and\n      dup12\n      mstore\n      dup9\n      mstore\n      dup6\n      dup10\n      dup12\n      keccak256\n      sload\n      and\n        /* \"SwishFishToken.sol\":14194:14287  if (proposalApproved[_proposalId][getOwner(i)]) {... */\n      tag_444\n      jumpi\n        /* \"SwishFishToken.sol\":14174:14177  i++ */\n    tag_445:\n      not(0x00)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      eq\n      tag_446\n      jumpi\n      0x01\n      add\n        /* \"SwishFishToken.sol\":14137:14143  uint i */\n      jump(tag_422)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_446:\n      0x24\n      dup11\n      0x11\n      dup10\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":14194:14287  if (proposalApproved[_proposalId][getOwner(i)]) {... */\n    tag_444:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_446\n      jumpi\n        /* \"SwishFishToken.sol\":14194:14287  if (proposalApproved[_proposalId][getOwner(i)]) {... */\n      swap1\n      jump(tag_445)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_42:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":1568:1661  address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61) */\n      0x15\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      dup3\n      dup5\n      jumpi(tag_112, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_201\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_459\n      tag_3\n      jump\t// in\n    tag_459:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_20\n      jump\t// in\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_38:\n      swap1\n      pop\n      dup3\n      jumpi(tag_121, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_121\n      jumpi\n      dup1\n      mload\n      swap2\n      dup4\n      sload(0x03)\n      0x02\n      dup2\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup2\n      and\n      dup1\n      iszero\n      tag_464\n      jumpi\n    tag_465:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup3\n      eq\n      tag_466\n      jumpi\n      pop\n      dup5\n      dup9\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_468\n      jumpi\n      pop\n      0x01\n      eq\n      tag_470\n      jumpi\n    tag_471:\n      tag_246\n      dup7\n      dup7\n      tag_247\n      dup3\n      dup12\n      sub\n      dup4\n      tag_9\n      jump\t// in\n    tag_470:\n      swap3\n      swap6\n      pop\n      0x03\n      dup4\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n    tag_474:\n      dup3\n      dup5\n      lt\n      tag_475\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_246\n      swap5\n      tag_247\n      swap3\n      dup3\n      add\n      add\n      swap5\n      dup7\n      jump(tag_471)\n    tag_475:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_474)\n    tag_468:\n      not(0xff)\n      and\n      dup8\n      dup7\n      add\n      mstore\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_247\n      dup3\n      tag_246\n      dup7\n      jump(tag_471)\n    tag_466:\n      dup4\n      0x22\n      0x24\n      swap3\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_464:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_465)\n    tag_36:\n      dup5\n      dup5\n      swap3\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x08\n      swap1\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x01c0\n      swap6\n      mstore\n      mul\n      dup1\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap2\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      dup2\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3\n      dup3\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4\n      dup4\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5\n      dup5\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      dup6\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db7\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap8\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      swap9\n      dup13\n      sub(exp(0x02, 0xa0), 0x01)\n      swap13\n      dup14\n      dup4\n      and\n      dup3\n      mstore\n      dup5\n      exp(0x02, 0xa0)\n      dup5\n      div\n      and\n      iszero\n      iszero\n      0x20\n      dup4\n      add\n      mstore\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n    tag_1:\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_483\n      jumpi\n      0x08\n      swap1\n        /* \"utils/MultiSignature.sol\":1096:1105  proposals */\n      0x05\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      mul\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_483:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_2:\n      0x20\n      dup1\n      dup3\n      mstore\n      dup3\n      mload\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap4\n      swap3\n      0x00\n    tag_485:\n      dup3\n      dup2\n      lt\n      tag_486\n      jumpi\n      pop\n      pop\n      0x40\n      swap3\n      swap4\n      pop\n      0x00\n      dup4\n      dup3\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_486:\n      dup2\n      dup2\n      add\n      dup7\n      add\n      mload\n      dup5\n      dup3\n      add\n      0x40\n      add\n      mstore\n      dup6\n      add\n      jump(tag_485)\n    tag_3:\n      calldataload(0x04)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_488\n      jumpi\n      jump\t// out\n    tag_488:\n      0x00\n      dup1\n      revert\n    tag_4:\n      calldataload(0x24)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_488\n      jumpi\n      jump\t// out\n    tag_5:\n      iszero\n      tag_492\n      jumpi\n      jump\t// out\n    tag_492:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      0x50726573616c652069736e277420656e61626c65640000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_6:\n      iszero\n      tag_494\n      jumpi\n      jump\t// out\n    tag_494:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e657200\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_7:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_496\n      jumpi\n      jump\t// out\n    tag_496:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_8:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_498\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_498:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_9:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_498\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n        /* \"SwishFishToken.sol\":8611:9013  function addLiquidity(uint256 tokens, uint256 bnb) private {... */\n    tag_10:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap1\n      dup2\n        /* \"SwishFishToken.sol\":8713:8728  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap2\n        /* \"SwishFishToken.sol\":8731:8755  balanceOf(address(this)) */\n      tag_502\n      0x00\n        /* \"SwishFishToken.sol\":8698:8702  this */\n      swap4\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup6\n      mstore\n      dup5\n      0x20\n      mstore\n      0x40\n      dup6\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":8698:8702  this */\n      swap1\n      address\n        /* \"SwishFishToken.sol\":8731:8755  balanceOf(address(this)) */\n      tag_20\n      jump\t// in\n    tag_502:\n        /* \"SwishFishToken.sol\":8713:8728  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":8935:8950  block.timestamp */\n      swap1\n        /* \"SwishFishToken.sol\":8955:8958  300 */\n      0x012c\n        /* \"SwishFishToken.sol\":8935:8950  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      add\n        /* \"SwishFishToken.sol\":8935:8950  block.timestamp */\n      dup1\n      timestamp\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      gt\n      tag_503\n      jumpi\n        /* \"SwishFishToken.sol\":8935:8950  block.timestamp */\n      timestamp\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_505\n      jumpi\n      0xc4\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      0x60\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap3\n      dup7\n      mload(0x40)\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xf305d71900000000000000000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      dup6\n      mstore\n        /* \"SwishFishToken.sol\":8698:8702  this */\n      address\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      0x04\n      dup7\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      0x24\n      dup6\n      add\n      mstore\n      dup9\n      0x44\n      dup6\n      add\n      mstore\n      dup9\n      0x64\n      dup6\n      add\n      mstore\n        /* \"SwishFishToken.sol\":8698:8702  this */\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x84\n      dup6\n      add\n      mstore\n      0xa4\n      dup5\n      add\n      mstore\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      gas\n      call\n      dup1\n      iszero\n      tag_507\n      jumpi\n      tag_509\n      jumpi\n        /* \"SwishFishToken.sol\":8611:9013  function addLiquidity(uint256 tokens, uint256 bnb) private {... */\n    tag_510:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      pop\n      pop\n      0x20\n        /* \"SwishFishToken.sol\":8986:9005  LiquidityAdded(bnb) */\n      0xfdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"SwishFishToken.sol\":8986:9005  LiquidityAdded(bnb) */\n      log1\n        /* \"SwishFishToken.sol\":8611:9013  function addLiquidity(uint256 tokens, uint256 bnb) private {... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n    tag_509:\n      0x60\n      swap1\n      dup2\n      returndatasize\n      dup2\n      gt\n      tag_511\n      jumpi\n    tag_512:\n      tag_513\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_513:\n      dup2\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sub\n      slt\n      tag_137\n      jumpi\n        /* \"SwishFishToken.sol\":8767:8970  uniswapV2Router.addLiquidityETH{value : bnb}(... */\n      dup1\n      jump(tag_510)\n    tag_511:\n      pop\n      returndatasize\n      jump(tag_512)\n    tag_507:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_505:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_503:\n      0x24\n      dup5\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n    tag_12:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_496\n      jumpi\n      jump\t// out\n    tag_13:\n      iszero\n      tag_518\n      jumpi\n      jump\t// out\n    tag_518:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2d\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2064\n      0x44\n      dup3\n      add\n      mstore\n      0x6f6573206e6f7420657869737400000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_14:\n      iszero\n      tag_520\n      jumpi\n      jump\t// out\n    tag_520:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x33\n      0x24\n      dup3\n      add\n      mstore\n      0x4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077\n      0x44\n      dup3\n      add\n      mstore\n      0x617320616c726561647920657865637574656400000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":7380:7855  function swapTokensForEth(uint256 tokenAmount) private {... */\n    tag_15:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x40\n      dup1\n      mload\n      swap2\n      0xffffffffffffffff\n      swap1\n      0x60\n      dup5\n      add\n      dup3\n      dup2\n      gt\n      dup6\n      dup3\n      lt\n      or\n      tag_498\n      jumpi\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":7484:7485  2 */\n      0x02\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap1\n      dup5\n      calldatasize\n      dup4\n      calldatacopy\n      dup6\n      mload\n      iszero\n      tag_483\n      jumpi\n        /* \"SwishFishToken.sol\":7515:7519  this */\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      sub(exp(0x02, 0xa0), 0x01)\n      swap3\n      dup4\n        /* \"SwishFishToken.sol\":7541:7556  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n      swap2\n      dup7\n      mload\n        /* \"SwishFishToken.sol\":7541:7563  uniswapV2Router.WETH() */\n      swap3\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xad5c464800000000000000000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":7541:7563  uniswapV2Router.WETH() */\n      dup5\n      mstore\n      dup2\n      dup5\n      0x04\n      dup2\n      dup5\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_526\n      jumpi\n      0x00\n      swap5\n      tag_528\n      jumpi\n        /* \"SwishFishToken.sol\":7380:7855  function swapTokensForEth(uint256 tokenAmount) private {... */\n    tag_529:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      pop\n      dup9\n      mload\n        /* \"SwishFishToken.sol\":7536:7537  1 */\n      swap4\n      0x01\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap5\n      dup6\n      lt\n      iszero\n      tag_483\n      jumpi\n        /* \"SwishFishToken.sol\":7626:7637  tokenAmount */\n      tag_532\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup8\n      dup6\n      swap3\n      and\n      dup11\n      dup13\n      add\n      mstore\n        /* \"SwishFishToken.sol\":7515:7519  this */\n      address\n        /* \"SwishFishToken.sol\":7626:7637  tokenAmount */\n      tag_20\n      jump\t// in\n    tag_532:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n        /* \"SwishFishToken.sol\":7541:7556  uniswapV2Router */\n      0x0b\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n      and\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      swap5\n      dup6\n      extcodesize\n      iszero\n      tag_488\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup8\n      swap9\n      swap5\n      swap4\n      swap2\n      swap9\n      mload\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      swap9\n      dup10\n      swap6\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x791ac94700000000000000000000000000000000000000000000000000000000\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      dup8\n      mstore\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0xa4\n      dup8\n      add\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      swap3\n        /* \"SwishFishToken.sol\":7541:7563  uniswapV2Router.WETH() */\n      0x04\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      dup9\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      0x00\n      0x24\n      dup9\n      add\n      mstore\n      0xa0\n      0x44\n      dup9\n      add\n      mstore\n      mload\n      dup1\n      swap3\n      mstore\n      0xc4\n      dup7\n      add\n      swap5\n      swap4\n      0x00\n      swap1\n    tag_535:\n      dup4\n      dup3\n      lt\n      tag_536\n      jumpi\n        /* \"SwishFishToken.sol\":7515:7519  this */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      dup2\n      0x00\n      dup2\n      dup2\n      swap6\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x64\n      dup4\n      add\n      mstore\n        /* \"SwishFishToken.sol\":7821:7836  block.timestamp */\n      timestamp\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x84\n      dup4\n      add\n      mstore\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_538\n      jumpi\n      tag_540\n      jumpi\n        /* \"SwishFishToken.sol\":7380:7855  function swapTokensForEth(uint256 tokenAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n    tag_540:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      gt\n      tag_498\n      jumpi\n      mstore\n        /* \"SwishFishToken.sol\":7380:7855  function swapTokensForEth(uint256 tokenAmount) private {... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":7651:7847  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n    tag_538:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_536:\n      dup6\n      mload\n      dup2\n      and\n      dup8\n      mstore\n      dup12\n      swap8\n      pop\n      swap6\n      dup3\n      add\n      swap6\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      dup5\n      add\n      swap1\n      jump(tag_535)\n        /* \"SwishFishToken.sol\":7541:7563  uniswapV2Router.WETH() */\n    tag_528:\n      dup3\n      dup2\n      dup2\n      swap7\n      swap4\n      swap7\n      returndatasize\n      dup4\n      gt\n      tag_544\n      jumpi\n    tag_545:\n      tag_546\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_546:\n      dup2\n      add\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sub\n      slt\n      tag_112\n      jumpi\n      mload\n      swap1\n      dup7\n      dup3\n      and\n      dup3\n      sub\n      tag_137\n      jumpi\n        /* \"SwishFishToken.sol\":7541:7563  uniswapV2Router.WETH() */\n      pop\n      swap3\n      codesize\n      jump(tag_529)\n    tag_544:\n      pop\n      returndatasize\n      jump(tag_545)\n    tag_526:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup9\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_16:\n      iszero\n      tag_551\n      jumpi\n      jump\t// out\n    tag_551:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      0x44\n      dup3\n      add\n      mstore\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_17:\n      iszero\n      tag_553\n      jumpi\n      jump\t// out\n    tag_553:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SwishFishToken.sol\":6048:6712  function _transfer(... */\n    tag_18:\n      swap1\n        /* \"SwishFishToken.sol\":6697:6703  amount */\n      tag_555\n        /* \"SwishFishToken.sol\":6048:6712  function _transfer(... */\n      swap3\n      swap2\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      dup3\n      and\n        /* \"SwishFishToken.sol\":6180:6198  from != address(0) */\n      swap1\n        /* \"SwishFishToken.sol\":6172:6240  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_556\n        /* \"SwishFishToken.sol\":6180:6198  from != address(0) */\n      dup3\n      iszero\n      iszero\n        /* \"SwishFishToken.sol\":6172:6240  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_16\n      jump\t// in\n    tag_556:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      and\n        /* \"SwishFishToken.sol\":6259:6275  to != address(0) */\n      swap1\n        /* \"SwishFishToken.sol\":6251:6315  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_557\n        /* \"SwishFishToken.sol\":6259:6275  to != address(0) */\n      dup3\n      iszero\n      iszero\n        /* \"SwishFishToken.sol\":6251:6315  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_17\n      jump\t// in\n    tag_557:\n        /* \"SwishFishToken.sol\":6196:6197  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup2\n      dup4\n      mstore\n        /* \"SwishFishToken.sol\":6343:6362  _isExcludedFromFees */\n      0x1f\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"SwishFishToken.sol\":6343:6395  _isExcludedFromFees[from] || _isExcludedFromFees[to] */\n      swap1\n      dup2\n      iszero\n      tag_558\n      jumpi\n        /* \"SwishFishToken.sol\":6048:6712  function _transfer(... */\n    tag_559:\n        /* \"SwishFishToken.sol\":6341:6396  !(_isExcludedFromFees[from] || _isExcludedFromFees[to]) */\n      pop\n      iszero\n        /* \"SwishFishToken.sol\":6413:6455  takeFee && automatedMarketMakerPairs[from] */\n      swap1\n      dup2\n      tag_560\n      jumpi\n        /* \"SwishFishToken.sol\":6048:6712  function _transfer(... */\n    tag_561:\n        /* \"SwishFishToken.sol\":6409:6661  if (takeFee && automatedMarketMakerPairs[from]) {... */\n      pop\n      tag_562\n      jumpi\n        /* \"SwishFishToken.sol\":6048:6712  function _transfer(... */\n    tag_563:\n        /* \"SwishFishToken.sol\":6697:6703  amount */\n      pop\n      tag_19\n      jump\t// in\n    tag_555:\n        /* \"SwishFishToken.sol\":6048:6712  function _transfer(... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":6409:6661  if (takeFee && automatedMarketMakerPairs[from]) {... */\n    tag_562:\n        /* \"SwishFishToken.sol\":6566:6601  _poolLiquidity.add(liquidityAmount) */\n      tag_564\n        /* \"SwishFishToken.sol\":6530:6533  100 */\n      0x64\n        /* \"SwishFishToken.sol\":6498:6525  amount.mul(taxFeeLiquidity) */\n      tag_565\n        /* \"SwishFishToken.sol\":6509:6524  taxFeeLiquidity */\n      0x1a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":6498:6525  amount.mul(taxFeeLiquidity) */\n      dup8\n      tag_28\n      jump\t// in\n    tag_565:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_566\n      tag_29\n      jump\t// in\n    tag_566:\n      pop\n      div\n        /* \"SwishFishToken.sol\":6566:6580  _poolLiquidity */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sload\n        /* \"SwishFishToken.sol\":6566:6601  _poolLiquidity.add(liquidityAmount) */\n      tag_21\n      jump\t// in\n    tag_564:\n        /* \"SwishFishToken.sol\":6566:6580  _poolLiquidity */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":7321:7336  contractBalance */\n      tag_567\n        /* \"SwishFishToken.sol\":7148:7152  this */\n      address\n        /* \"SwishFishToken.sol\":7140:7161  address(this).balance */\n      balance\n        /* \"SwishFishToken.sol\":7189:7201  _tokenAmount */\n      tag_568\n      dup7\n      tag_15\n      jump\t// in\n    tag_568:\n        /* \"SwishFishToken.sol\":7148:7152  this */\n      address\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n        /* \"SwishFishToken.sol\":6530:6533  100 */\n      0x64\n        /* \"SwishFishToken.sol\":7239:7271  balanceOf(address(this)).mul(30) */\n      tag_442\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x40\n      dup6\n      keccak256\n      sload\n        /* \"SwishFishToken.sol\":7239:7271  balanceOf(address(this)).mul(30) */\n      tag_25\n      jump\t// in\n        /* \"SwishFishToken.sol\":7321:7336  contractBalance */\n    tag_567:\n        /* \"SwishFishToken.sol\":6566:6580  _poolLiquidity */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sstore\n        /* \"SwishFishToken.sol\":6409:6661  if (takeFee && automatedMarketMakerPairs[from]) {... */\n      codesize\n      jump(tag_563)\n        /* \"SwishFishToken.sol\":6413:6455  takeFee && automatedMarketMakerPairs[from] */\n    tag_560:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      pop\n        /* \"SwishFishToken.sol\":6424:6449  automatedMarketMakerPairs */\n      0x21\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SwishFishToken.sol\":6413:6455  takeFee && automatedMarketMakerPairs[from] */\n      codesize\n      jump(tag_561)\n        /* \"SwishFishToken.sol\":6343:6395  _isExcludedFromFees[from] || _isExcludedFromFees[to] */\n    tag_558:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup4\n      mstore\n      pop\n      0x40\n      dup3\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SwishFishToken.sol\":6343:6395  _isExcludedFromFees[from] || _isExcludedFromFees[to] */\n      codesize\n      jump(tag_559)\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n    tag_19:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":7867:7885  from != address(0) */\n      swap2\n        /* \"contracts/ERC20.sol\":7859:7927  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_571\n        /* \"contracts/ERC20.sol\":7867:7885  from != address(0) */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/ERC20.sol\":7859:7927  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_16\n      jump\t// in\n    tag_571:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      and\n        /* \"contracts/ERC20.sol\":7946:7962  to != address(0) */\n      swap2\n        /* \"contracts/ERC20.sol\":7938:8002  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_572\n        /* \"contracts/ERC20.sol\":7946:7962  to != address(0) */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/ERC20.sol\":7938:8002  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_17\n      jump\t// in\n    tag_572:\n        /* \"contracts/ERC20.sol\":7883:7884  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      dup2\n      mstore\n      dup1\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8122:8143  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_573\n      jumpi\n      swap2\n      dup4\n      swap2\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n      tag_575\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap6\n      0x20\n      swap6\n        /* \"libraries/SafeMath.sol\":1496:1525  require(b <= a, errorMessage) */\n      tag_218\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_219\n      tag_22\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1548:1553  a - b */\n    tag_575:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup7\n      dup3\n      mstore\n      dup2\n      dup6\n      mstore\n      dup3\n      dup3\n      keccak256\n      sstore\n      dup7\n      dup2\n      mstore\n      dup2\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_578\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup5\n      dup3\n      dup5\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_21\n      jump\t// in\n    tag_578:\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup9\n      dup2\n      mstore\n      dup1\n      dup7\n      mstore\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_573:\n      0x84\n      dup4\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n      0x44\n      dup3\n      add\n      mstore\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n    tag_20:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":11030:11049  owner != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_579\n      jumpi\n      and\n        /* \"contracts/ERC20.sol\":11109:11130  spender != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_581\n      jumpi\n      0x20\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      swap2\n      dup4\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mstore\n        /* \"contracts/ERC20.sol\":11182:11193  _allowances */\n      0x01\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup3\n      mstore\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      keccak256\n      dup6\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      mstore\n      dup3\n      mstore\n      dup1\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      keccak256\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_581:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      0x44\n      dup3\n      add\n      mstore\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_579:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_21:\n      swap1\n        /* \"libraries/SafeMath.sol\":577:582  a + b */\n      tag_583\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n        /* \"libraries/SafeMath.sol\":577:582  a + b */\n      dup3\n      tag_7\n      jump\t// in\n    tag_583:\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      swap1\n      dup2\n      lt\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_505\n      jumpi\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_22:\n      mload(0x40)\n      swap1\n      tag_586\n      dup3\n      tag_8\n      jump\t// in\n    tag_586:\n      0x1e\n      dup3\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x20\n      dup4\n      add\n      mstore\n      jump\t// out\n    tag_23:\n      iszero\n      tag_587\n      jumpi\n      pop\n      jump\t// out\n    tag_587:\n      tag_589\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n      tag_2\n      jump\t// in\n    tag_589:\n      sub\n      swap1\n      revert\n    tag_24:\n      dup2\n      iszero\n      tag_590\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_590:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_25:\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup1\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_592\n      jumpi\n        /* \"SwishFishToken.sol\":6845:6859  _poolLiquidity */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"SwishFishToken.sol\":6845:6859  _poolLiquidity */\n      0x1e\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n        /* \"SwishFishToken.sol\":6845:6859  _poolLiquidity */\n      0x1e\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      swap2\n      dup4\n      tag_24\n      jump\t// in\n    tag_596:\n        /* \"libraries/SafeMath.sol\":2235:2245  c / a == b */\n      sub\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      tag_597\n      jumpi\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_597:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n      0x44\n      dup3\n      add\n      mstore\n      0x7700000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n    tag_592:\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      pop\n        /* \"libraries/SafeMath.sol\":2149:2150  0 */\n      0x00\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      swap1\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_26:\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup1\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_592\n      jumpi\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n        /* \"SwishFishToken.sol\":9779:9782  100 */\n      0x64\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      swap2\n      dup4\n      tag_24\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_27:\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup1\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_592\n      jumpi\n        /* \"SwishFishToken.sol\":5083:5085  10 */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"SwishFishToken.sol\":5083:5085  10 */\n      0x0a\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n        /* \"SwishFishToken.sol\":5083:5085  10 */\n      0x0a\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      swap2\n      dup4\n      tag_24\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1841:2312  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n      swap1\n        /* \"libraries/SafeMath.sol\":2144:2150  a == 0 */\n      dup2\n      iszero\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n      tag_613\n      jumpi\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n      dup1\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n      dup3\n      sub\n      tag_496\n      jumpi\n        /* \"libraries/SafeMath.sol\":2235:2240  c / a */\n      tag_596\n      swap1\n      dup4\n      tag_24\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":2140:2187  if (a == 0) {... */\n    tag_613:\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      pop\n      pop\n        /* \"libraries/SafeMath.sol\":2149:2150  0 */\n      0x00\n        /* \"libraries/SafeMath.sol\":2167:2175  return 0 */\n      swap1\n      jump\t// out\n        /* \"SwishFishToken.sol\":348:15743  contract SwishFish is ERC20, Ownable {... */\n    tag_29:\n      mload(0x40)\n      swap1\n      tag_620\n      dup3\n      tag_8\n      jump\t// in\n    tag_620:\n      0x1a\n      dup3\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x20\n      dup4\n      add\n      mstore\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208eb8834cf6c8abccf2f956d52f570061bde875ecd8b76473e9413892bfa8345264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 2334,
									"id": 2796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_addOwner": {
									"entryPoint": 1844,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060409080825234620006715760808162003668803803809162000025828562000676565b83398101031262000671576200003b81620006c8565b60206200004a818401620006c8565b916200006660606200005e878701620006c8565b9501620006c8565b9262000074600354620006dd565b90601f9182811162000643575b5060127f537769736846697368000000000000000000000000000000000000000000000001600355600495620000b88754620006dd565b83811162000616575b5060067f5346480000000000000000000000000000000000000000000000000000000000018755600160a060020a031991338360085416176008558851946000976000805160206200364883398151915296338a898180a36b033b2e3c9fd0803ce8000000600c5561010061ffff19600d541617600d556611c37937e080006011556001918260125569d3c21bcecceda100000060135573eda73409d4bbd147f4e1295a73a2ca243a529338876014541617601455733c1cd83d8850803c9c42ff5083f56b66b00fbd618760155416176015557363024ac73fe77427f20e8247fa26f470c0d9700b8760165416176016556002601755600360185560036019556002601a558a601b558a601c558a601d558a601e557fc45a01550000000000000000000000000000000000000000000000000000000082528b8a837310ed43c718714eb63d5aa57b78b54704e256024e9281845afa9283156200060c578b8f8f928f96620005c0575b505180927fad5c464800000000000000000000000000000000000000000000000000000000825281855afa9081156200056a578f918f8f94938f93869362000575575b50906044915195869384927fc9c653960000000000000000000000000000000000000000000000000000000084523090840152600160a060020a03998a8092166024850152165af19182156200056a57928f928d908f9b9a99989795938d97948d92620004ee575b50600b80548d1690911790558316808c5260218252848c20805460ff19908116881790915530808e52978352858d20805482168817905560145485168d52858d20805482168817905560155485168d52858d20805482168817905560165485168d52858d208054821688179055968c52908052838b2080548716861790558a52828a20805486168517905516808952972080549092161790556200038792916200038191829062000734565b62000734565b81156200046c5781906007541617600755848751938180a3600c5494301562000415575050507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620003dd846002546200091e565b600255308352828152620003f584868520546200091e565b3084528382528584205584519384523093a351612c869081620009c28239f35b926064937f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b608487868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b949750945050909395969798995081813d831162000562575b62000513818362000676565b810103126200055e5762000381948f858f9b9a9894958f838f968f909a8f620003879f9c9b62000547620003819d620006c8565b975095989b5050979a9c9d505050929598620002d5565b8c80fd5b503d62000507565b508e513d8e823e3d90fd5b94955050505081813d8311620005b8575b62000592818362000676565b810103126200055e57908b8f8f8f9490620005af604492620006c8565b9290916200026d565b503d62000586565b9394955050905081813d831162000604575b620005de818362000676565b810103126200060057908c8b8f9493620005f890620006c8565b94386200022a565b8b80fd5b503d620005d2565b8e513d8e823e3d90fd5b600088815286858183209301048201915b82811062000637575050620000c1565b81815560010162000627565b60006003815285848183209301048201915b8281106200066557505062000081565b81815560010162000655565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176200069957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b5190600160a060020a03821682036200067157565b906001600283049216801562000729575b6020831014620006fa57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691620006ee565b600160a060020a031680156200089a576000818152600a60205260ff6040822054166200083c57818152600a60205260408120805460ff19166001179055600954680100000000000000008110156200080f576001810180600955811015620007e257600982527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018054600160a060020a03191683179055600080516020620036488339815191528180a3565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f776e61626c653a204f776e6572206973206e6f7420756e69717565000000006044820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f776e61626c653a204f776e657220697320746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b9081019081811162000992578110620009345790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe608060409080825260049081361015610053575b5050361561002057600080fd5b3461002757005b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2005b6000917c0100000000000000000000000000000000000000000000000000000000833504918263013cf08b14611e525750816306fdde0314611d5b578163095ea7b314611d315781630abdc64014611d095781630d61b519146119125781631694505e146118ea57816318160ddd146118cb5781631b45a47a146118ac57816323b872dd146117d25781632a9af7ba146117b3578163313ce56714611797578163392627731461177857816339509351146117305781633ccfd60b146114ff578163553000c1146114e0578163562e9df9146114b857816370a08231146114825781637918447e146114635781637a594a2b1461143b5781637d81936c1461141c5781638198c34114610f3957816385a6a09114610e245781638da5cb5b14610dfc578163933f5e0714610ddd57816395d89b4114610cd757816398951b5614610bb65781639e5cd74a14610b97578163a457c2d714610aba578163a6f2ae3a14610a4f578163a9059cbb14610a1e578163b6bba0ae146109ff578163c84ad9a5146109db578163d7196dd914610873578163d8a0f828146107fb578163dce165a61461029957508063dd62ed3e146102505763fe7441e7146102165780610013565b903461024c57602036600319011261024c5780602092600160a060020a0361023c61212a565b168152600e845220549051908152f35b5080fd5b50903461024c578060031936011261024c578060209261026e61212a565b610276612145565b600160a060020a0391821683526001865283832091168252845220549051908152f35b905082346107f757610180806003193601126107f3578383359182151580930361024c576024938435918215158093036107f357604435948515158096036107ef5760643593841515968786036107eb5760a4359788151590818a036107e757610144358015159a8b82036107e3576101643599600160a060020a039b8c8c16809c036107e05760ff8b61033792338152600a6020522054166121a9565b610764575b6106d0575b610660575b8651966101c0880188811067ffffffffffffffff82111761064a57908e918152338952602089019182528801958652606088019485526080880193845260a0880191825260c0880191608435835260e0890193845261010089019460c43586526101208a019660e43588526101408b0198610104358a526101608c019a610124358c528c019e8f526101a08c019c8d5260055468010000000000000000811015610630578060016103fa920160055561208d565b9c909c61061757518c5495519151925193519451151578010000000000000000000000000000000000000000000000000278ff00000000000000000000000000000000000000000000000016941515770100000000000000000000000000000000000000000000000277ff0000000000000000000000000000000000000000000000169315157601000000000000000000000000000000000000000000000276ff000000000000000000000000000000000000000000001692151575010000000000000000000000000000000000000000000275ff0000000000000000000000000000000000000000001691151560a060020a0274ff000000000000000000000000000000000000000016908f1678ffffffffffffffffffffffffffffffffffffffffffffffffff1990961695909517949094179390931792909217919091171787555160018701555160028601805460ff191691151560ff1691909117905551600385015551888401555160058301555160068201556007019251151561058e90849060ff801983541691151516179055565b51168154906101000274ffffffffffffffffffffffffffffffffffffffff00169074ffffffffffffffffffffffffffffffffffffffff0019161790556005549160001983019283116106035750507f096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce8280a280f35b6011849160e060020a634e487b7102835252fd5b50505050508b8e808f60e060020a634e487b7102825252fd5b50505050508b8e60418f60e060020a634e487b7102835252fd5b508b8e60418f60e060020a634e487b7102835252fd5b876103465760848c60338d60208b519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a206e6577206f776e65722060448201527f697320746865207a65726f2061646472657373000000000000000000000000006064820152fd5b600a6106f3610124356106ee610104356106ee60e43560c4356121f7565b6121f7565b11156103415760848d60338e60208c519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f6665657320617420313025206f72206c657373000000000000000000000000006064820152fd5b6611c37937e08000601154111561033c5760848e603c8f60208d519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f3530303030303030303030303030303020576569206f72206c657373000000006064820152fd5b80fd5b8a80fd5b8880fd5b8680fd5b8480fd5b8380fd5b8280fd5b83915060203660031901126107f7577fc5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae745399161086b602092338652600a845261084860ff84882054166121a9565b600d5461085b60ff61010083041661215b565b61ff001916600d55349035612274565b51348152a180f35b905082346107f757826003193601126107f757338352600a60205261089d60ff82852054166121a9565b600160a060020a03916108b88360145416601b549030612836565b6108ca8360155416601c549030612836565b6108dc8360165416601d549030612836565b838080806108fb6108f2601b54601c54906121f7565b601d54906121f7565b9681601b5581601c5581601d55601454163031905af13d156109d6573d67ffffffffffffffff81116109c05783519061093e601f8201601f191660200183612252565b81528560203d92013e5b1561097b57507f21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff9160209151908152a180f35b6020606492519160e560020a62461bcd028352820152601260248201527f4661696c656420746f2073656e6420424e4200000000000000000000000000006044820152fd5b60248660418560e060020a634e487b7102835252fd5b610948565b82843461024c578160031936011261024c5760209060ff600d541690519015158152f35b82843461024c578160031936011261024c576020906019549051908152f35b82843461024c578060031936011261024c57602090610a48610a3e61212a565b602435903361275f565b5160018152f35b82848160031936011261024c57610a80610a9391610a7160ff600d541661215b565b30845283602052832054612bd1565b610a88612c17565b506064349104612274565b7f6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b8180a180f35b919050346107e057826003193601126107e057610ad561212a565b9183602435923381526001602052818120600160a060020a0386168252602052205490828210610b2b57602085610a4886610b248787610b1f610b16612a8d565b82841115612ac6565b6123d7565b903361293e565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b82843461024c578160031936011261024c576020906017549051908152f35b905082346107f7576020806003193601126107f357823592338552600a8252610be460ff84872054166121a9565b610bf160055485106123e4565b83855260068252828520338652825260ff8386205416610c6d5750610c2960ff60a060020a610c1f8661208d565b5054041615612458565b8284526006815281842090338552528220600160ff19825416179055337f12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb78380a380f35b90608492519160e560020a62461bcd028352820152603c60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206160448201527f6c72656164792077617320617070726f766564206279206f776e6572000000006064820152fd5b905082346107f757826003193601126107f757805191838154916002830491600191828516948515610dd3575b6020958686108114610dbd57858952908115610d9a5750600114610d42575b610d3e8787610d34828c0383612252565b51918291826120e1565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610d875750505082610d3e94610d3492820101948680610d23565b8054868501880152928601928101610d69565b60ff19168887015250505050151581028301019250610d3482610d3e8680610d23565b60248460228560e060020a634e487b7102835252fd5b93607f1693610d04565b82843461024c578160031936011261024c57602090601a549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600854169051908152f35b905082346107f7576020806003193601126107f357823592338552600a8252610e5260ff84872054166121a9565b610e5f60055485106123e4565b610e7260ff60a060020a610c1f8761208d565b83855260068252828520338652825260ff838620541615610ecf5750828452600681528184209033855252822060ff198154169055337fb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb8380a380f35b90608492519160e560020a62461bcd028352820152602e60248201527f4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206960448201527f73206e6f7420617070726f7665640000000000000000000000000000000000006064820152fd5b905082346107f75760603660031901126107f757610f5561212a565b906024803593604490813590600160a060020a03928360075416943386036113b2578489981694858b52602096600a885260ff898d20541661136f57861461132c57806014541686146112e957806015541686146112a65760165416851461126357604b841161122057848a52600e8652868a20546111dd57601354891161117457505050610fe660649187612bf2565b610fee612c17565b5004946017549060185461100281846121f7565b9261101060195480956121f7565b908161103857505050505061102b600e939495601b54612a78565b601b555b85525282205580f35b611049919294999395979850612bb0565b81611052612c17565b5061105c91612af1565b9261106690612bb0565b8161106f612c17565b5061107991612af1565b9761108390612bb0565b9061108c612c17565b5061109691612af1565b916110a19082612bf2565b6110a9612c17565b5060649004966110b99082612bf2565b6110c1612c17565b5060649004916110d091612bf2565b6110d8612c17565b506064900491866110e7612a8d565b6110f49083831115612ac6565b6110fd916123d7565b81611106612a8d565b6111139083831115612ac6565b61111c916123d7565b82611125612a8d565b6111329083831115612ac6565b61113b916123d7565b95601b549061114991612a78565b601b55601c549061115991612a78565b601c55601d549061116991612a78565b601d55600e9161102f565b6084929160387f416d6f756e742063616e2774206578636565647320746865206d61782074726192888a519560e560020a62461bcd0287528601528401528201527f6e73616374696f6e20776974686472617720616d6f756e7400000000000000006064820152fd5b60649291601c7f55736572206861732070656e64696e67205769746864726177616c730000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064929160197f546865206665652063616e6e6f7420657863656564203735250000000000000092888a519560e560020a62461bcd028752860152840152820152fd5b60649291601b7f5465616d2063616e2774206d616b65207769746864726177616c73000000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064847f536b796c65722063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f48656973656e2063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f4261636b656e642063616e2774206d616b65207769746864726177616c73000085601e868c8e519560e560020a62461bcd028752860152840152820152fd5b6064857f4f776e6572732063616e2774206d616b65207769746864726177616c7300000086601d878d8f519560e560020a62461bcd028752860152840152820152fd5b6084929160227f4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b659260208a519560e560020a62461bcd0287528601528401528201527f6e640000000000000000000000000000000000000000000000000000000000006064820152fd5b82843461024c578160031936011261024c576020906018549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601454169051908152f35b82843461024c578160031936011261024c576020906011549051908152f35b82843461024c57602036600319011261024c5780602092600160a060020a036114a961212a565b16815280845220549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601654169051908152f35b82843461024c578160031936011261024c57602090601d549051908152f35b90508160031936011261024c57338252602090600f825283832054620151808101908181116117005781106116bb574211611716575b338352601082528383205460018101908181116117005781106116bb57338452601083528484205583832054601254106116515760115434106115c157507f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9192338452600e825280842054906115ad823330612836565b338552600e8352848181205551908152a180f35b60a49184519160e560020a62461bcd028352820152604460248201527f54686520616d6f756e742073656e74206973206e6f7420657175616c20746f2060448201527f74686520424e4220616d6f756e7420726571756972656420666f72207769746860648201527f64726177000000000000000000000000000000000000000000000000000000006084820152fd5b60849184519160e560020a62461bcd028352820152603060248201527f596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e6520776960448201527f746864726177616c2070657220646179000000000000000000000000000000006064820152fd5b5060649184519160e560020a62461bcd028352820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248560118560e060020a634e487b7102835252fd5b338352600f82524284842055601082528284812055611535565b82843461024c578060031936011261024c57610a48602092610b2461175361212a565b9133815260018652848120600160a060020a0384168252865284602435912054612a78565b82843461024c578160031936011261024c57602090601b549051908152f35b82843461024c578160031936011261024c576020905160128152f35b82843461024c578160031936011261024c57602090601e549051908152f35b90503461024c57606036600319011261024c576117ed61212a565b6117f5612145565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203611830575b602086610a4887878761275f565b848210611866575091839161185b61185460209796610a4896610b1f610b16612a8d565b338361293e565b919394819350611822565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b82843461024c578160031936011261024c57602090601c549051908152f35b82843461024c578160031936011261024c576020906002549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600b54169051908152f35b839150346107f757602090816003193601126107f357803561193760055482106123e4565b6119408161208d565b5060ff916119588360a060020a809454041615612458565b60095487805b828110611c8a575010611c1f579061197760079261208d565b509074ff000000000000000000000000000000000000000019825416178082558584807501000000000000000000000000000000000000000000840416611bc5575b9150507701000000000000000000000000000000000000000000000082540416611b89575b82780100000000000000000000000000000000000000000000000082540416611b53575b82600282015416611af4575b018054918216611a1c578580f35b600160a060020a03928361010080940416908115611a89575080600160a060020a03196007541617600755867f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3540416835280528120805460ff1916600117905581808080808580f35b6084908688519160e560020a62461bcd028352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b7fac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee96080600383015486840154600585015460068601549183601755806018558160195582601a558b519384528a8401528a8301526060820152a1611a0e565b7f7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c856001830154806011558851908152a1611a02565b611bbc3031611b99601e546124cc565b3089528887526064611bad898b2054612b14565b611bb5612c17565b5004612274565b86601e556119de565b7601000000000000000000000000000000000000000000007f01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604930416151560ff19600d541686821617600d558851908152a18785846119b9565b6084848688519160e560020a62461bcd028352820152603560248201527f4d756c74695369676e617475726557616c6c65743a20617070726f76616c732060448201527f6973206c657373207468616e20726571756972656400000000000000000000006064820152fd5b838a5260068852888a20600160a060020a03827f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154168b52885285898b205416611cf7575b6000198114611ce15760010161195e565b60248a60118960e060020a634e487b7102835252fd5b9060018101809111611ce15790611cd0565b82843461024c578160031936011261024c57602090600160a060020a03601554169051908152f35b82843461024c578060031936011261024c57602090610a48611d5161212a565b602435903361293e565b905082346107f757826003193601126107f7578051918360035460028104916001918281168015611e48575b6020958686108214611e325750848852908115611e115750600114611db8575b610d3e8686610d34828b0383612252565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410611dfe5750505082610d3e94610d34928201019486611da7565b8054868501880152928601928101611de1565b60ff191687860152505050151581028301019250610d3482610d3e86611da7565b83602260249260e060020a634e487b7102835252fd5b93607f1693611d87565b848492346107f35760203660031901126107f357356005548110156107f35760089060056101c0955202807f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001547f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18201549160ff90817f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015416937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3820154947f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4830154907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5840154928578010000000000000000000000000000000000000000000000007f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db77f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6880154970154988c600160a060020a039c8d831682528460a060020a8404161515602083015284750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b6005548110156120c8576008906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b60e060020a634e487b7102600052603260045260246000fd5b6020808252825181830181905290939260005b82811061211657505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016120f4565b60043590600160a060020a038216820361214057565b600080fd5b60243590600160a060020a038216820361214057565b1561216257565b606460405160e560020a62461bcd02815260206004820152601560248201527f50726573616c652069736e277420656e61626c656400000000000000000000006044820152fd5b156121b057565b606460405160e560020a62461bcd02815260206004820152601f60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572006044820152fd5b9190820180921161220457565b60e060020a634e487b7102600052601160045260246000fd5b6040810190811067ffffffffffffffff82111761223957604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761223957604052565b600160a060020a039081600b54169161229c600093308552846020526040852054903061293e565b600b54169061012c42018042116123c0574281106123795760c46060928660405195869485937ff305d719000000000000000000000000000000000000000000000000000000008552306004860152602485015288604485015288606485015230608485015260a48401525af1801561236e57612343575b505060207ffdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa91604051908152a1565b606090813d8111612367575b6123598183612252565b810103126107e05780612314565b503d61234f565b6040513d84823e3d90fd5b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248460e060020a634e487b710281526011600452fd5b9190820391821161220457565b156123eb57565b608460405160e560020a62461bcd02815260206004820152602d60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206460448201527f6f6573206e6f74206578697374000000000000000000000000000000000000006064820152fd5b1561245f57565b608460405160e560020a62461bcd02815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c207760448201527f617320616c7265616479206578656375746564000000000000000000000000006064820152fd5b604080519167ffffffffffffffff90606084018281118582101761223957835260028452602080850190843683378551156120c857308252600160a060020a039283600b5416918651927fad5c46480000000000000000000000000000000000000000000000000000000084528184600481845afa93841561266c57600094612632575b508851936001948510156120c85761257091878592168a8c01523061293e565b84600b541694853b156121405791879894939198519889957f791ac94700000000000000000000000000000000000000000000000000000000875260a487019260048801526000602488015260a060448801525180925260c4860194936000905b838210612618575050505050509181600081819530606483015242608483015203925af1801561260d5761260457505050565b82116122395752565b82513d6000823e3d90fd5b8551811687528b97509582019594820194908401906125d1565b8281819693963d8311612665575b61264a8183612252565b8101031261024c57519086821682036107e057509238612550565b503d612640565b88513d6000823e3d90fd5b1561267e57565b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b156126f257565b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b906127ba9291600160a060020a038082169061277c821515612677565b83169061278a8215156126eb565b600091818352601f60205260ff604084205416908115612825575b5015908161280f575b506127bc575b50612836565b565b6127df60646127cd601a5487612bf2565b6127d5612c17565b5004601e54612a78565b601e5561280630316127f0866124cc565b308352826020526064611bad6040852054612b14565b601e55386127b4565b8252506021602052604081205460ff16386127ae565b835250604082205460ff16386127a5565b600160a060020a038091169161284d831515612677565b169161285a8315156126eb565b600082815280602052604090818120548381106128d2579183916128a77fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95602095610b1f610b16612a8d565b86825281855282822055868152816128c28482842054612a78565b91888152808652205551908152a3565b6084835160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a03809116918215612a0c571691821561299f5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90612a8390826121f7565b9081106123795790565b60405190612a9a8261221d565b601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152565b15612ace5750565b612aed9060405191829160e560020a62461bcd028352600483016120e1565b0390fd5b8115612afb570490565b60e060020a634e487b7102600052601260045260246000fd5b8015612baa57601e810290808204601e0361220457612b35601e9183612af1565b03612b3d5790565b608460405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b50600090565b8015612baa57606481029080820460640361220457612b3560649183612af1565b8015612baa57600a810290808204600a0361220457612b35600a9183612af1565b908115612c105780820291808304820361220457612b359083612af1565b5050600090565b60405190612c248261221d565b601a82527f536166654d6174683a206469766973696f6e206279207a65726f000000000000602083015256fea26469706673582212208eb8834cf6c8abccf2f956d52f570061bde875ecd8b76473e9413892bfa8345264736f6c634300081100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x671 JUMPI PUSH1 0x80 DUP2 PUSH3 0x3668 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x25 DUP3 DUP6 PUSH3 0x676 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x671 JUMPI PUSH3 0x3B DUP2 PUSH3 0x6C8 JUMP JUMPDEST PUSH1 0x20 PUSH3 0x4A DUP2 DUP5 ADD PUSH3 0x6C8 JUMP JUMPDEST SWAP2 PUSH3 0x66 PUSH1 0x60 PUSH3 0x5E DUP8 DUP8 ADD PUSH3 0x6C8 JUMP JUMPDEST SWAP6 ADD PUSH3 0x6C8 JUMP JUMPDEST SWAP3 PUSH3 0x74 PUSH1 0x3 SLOAD PUSH3 0x6DD JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH3 0x643 JUMPI JUMPDEST POP PUSH1 0x12 PUSH32 0x5377697368466973680000000000000000000000000000000000000000000000 ADD PUSH1 0x3 SSTORE PUSH1 0x4 SWAP6 PUSH3 0xB8 DUP8 SLOAD PUSH3 0x6DD JUMP JUMPDEST DUP4 DUP2 GT PUSH3 0x616 JUMPI JUMPDEST POP PUSH1 0x6 PUSH32 0x5346480000000000000000000000000000000000000000000000000000000000 ADD DUP8 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 CALLER DUP4 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP9 MLOAD SWAP5 PUSH1 0x0 SWAP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3648 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 CALLER DUP11 DUP10 DUP2 DUP1 LOG3 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0xC SSTORE PUSH2 0x100 PUSH2 0xFFFF NOT PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE PUSH7 0x11C37937E08000 PUSH1 0x11 SSTORE PUSH1 0x1 SWAP2 DUP3 PUSH1 0x12 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x13 SSTORE PUSH20 0xEDA73409D4BBD147F4E1295A73A2CA243A529338 DUP8 PUSH1 0x14 SLOAD AND OR PUSH1 0x14 SSTORE PUSH20 0x3C1CD83D8850803C9C42FF5083F56B66B00FBD61 DUP8 PUSH1 0x15 SLOAD AND OR PUSH1 0x15 SSTORE PUSH20 0x63024AC73FE77427F20E8247FA26F470C0D9700B DUP8 PUSH1 0x16 SLOAD AND OR PUSH1 0x16 SSTORE PUSH1 0x2 PUSH1 0x17 SSTORE PUSH1 0x3 PUSH1 0x18 SSTORE PUSH1 0x3 PUSH1 0x19 SSTORE PUSH1 0x2 PUSH1 0x1A SSTORE DUP11 PUSH1 0x1B SSTORE DUP11 PUSH1 0x1C SSTORE DUP11 PUSH1 0x1D SSTORE DUP11 PUSH1 0x1E SSTORE PUSH32 0xC45A015500000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP12 DUP11 DUP4 PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E SWAP3 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH3 0x60C JUMPI DUP12 DUP16 DUP16 SWAP3 DUP16 SWAP7 PUSH3 0x5C0 JUMPI JUMPDEST POP MLOAD DUP1 SWAP3 PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x56A JUMPI DUP16 SWAP2 DUP16 DUP16 SWAP5 SWAP4 DUP16 SWAP4 DUP7 SWAP4 PUSH3 0x575 JUMPI JUMPDEST POP SWAP1 PUSH1 0x44 SWAP2 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xC9C6539600000000000000000000000000000000000000000000000000000000 DUP5 MSTORE ADDRESS SWAP1 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP10 DUP11 DUP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE AND GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x56A JUMPI SWAP3 DUP16 SWAP3 DUP14 SWAP1 DUP16 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP6 SWAP4 DUP14 SWAP8 SWAP5 DUP14 SWAP3 PUSH3 0x4EE JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD DUP14 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 AND DUP1 DUP13 MSTORE PUSH1 0x21 DUP3 MSTORE DUP5 DUP13 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND DUP9 OR SWAP1 SWAP2 SSTORE ADDRESS DUP1 DUP15 MSTORE SWAP8 DUP4 MSTORE DUP6 DUP14 KECCAK256 DUP1 SLOAD DUP3 AND DUP9 OR SWAP1 SSTORE PUSH1 0x14 SLOAD DUP6 AND DUP14 MSTORE DUP6 DUP14 KECCAK256 DUP1 SLOAD DUP3 AND DUP9 OR SWAP1 SSTORE PUSH1 0x15 SLOAD DUP6 AND DUP14 MSTORE DUP6 DUP14 KECCAK256 DUP1 SLOAD DUP3 AND DUP9 OR SWAP1 SSTORE PUSH1 0x16 SLOAD DUP6 AND DUP14 MSTORE DUP6 DUP14 KECCAK256 DUP1 SLOAD DUP3 AND DUP9 OR SWAP1 SSTORE SWAP7 DUP13 MSTORE SWAP1 DUP1 MSTORE DUP4 DUP12 KECCAK256 DUP1 SLOAD DUP8 AND DUP7 OR SWAP1 SSTORE DUP11 MSTORE DUP3 DUP11 KECCAK256 DUP1 SLOAD DUP7 AND DUP6 OR SWAP1 SSTORE AND DUP1 DUP10 MSTORE SWAP8 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x387 SWAP3 SWAP2 PUSH3 0x381 SWAP2 DUP3 SWAP1 PUSH3 0x734 JUMP JUMPDEST PUSH3 0x734 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x46C JUMPI DUP2 SWAP1 PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP5 DUP8 MLOAD SWAP4 DUP2 DUP1 LOG3 PUSH1 0xC SLOAD SWAP5 ADDRESS ISZERO PUSH3 0x415 JUMPI POP POP POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x3DD DUP5 PUSH1 0x2 SLOAD PUSH3 0x91E JUMP JUMPDEST PUSH1 0x2 SSTORE ADDRESS DUP4 MSTORE DUP3 DUP2 MSTORE PUSH3 0x3F5 DUP5 DUP7 DUP6 KECCAK256 SLOAD PUSH3 0x91E JUMP JUMPDEST ADDRESS DUP5 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 KECCAK256 SSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE ADDRESS SWAP4 LOG3 MLOAD PUSH2 0x2C86 SWAP1 DUP2 PUSH3 0x9C2 DUP3 CODECOPY RETURN JUMPDEST SWAP3 PUSH1 0x64 SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP8 DUP7 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP5 SWAP8 POP SWAP5 POP POP SWAP1 SWAP4 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x562 JUMPI JUMPDEST PUSH3 0x513 DUP2 DUP4 PUSH3 0x676 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x55E JUMPI PUSH3 0x381 SWAP5 DUP16 DUP6 DUP16 SWAP12 SWAP11 SWAP9 SWAP5 SWAP6 DUP16 DUP4 DUP16 SWAP7 DUP16 SWAP1 SWAP11 DUP16 PUSH3 0x387 SWAP16 SWAP13 SWAP12 PUSH3 0x547 PUSH3 0x381 SWAP14 PUSH3 0x6C8 JUMP JUMPDEST SWAP8 POP SWAP6 SWAP9 SWAP12 POP POP SWAP8 SWAP11 SWAP13 SWAP14 POP POP POP SWAP3 SWAP6 SWAP9 PUSH3 0x2D5 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x507 JUMP JUMPDEST POP DUP15 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 SWAP6 POP POP POP POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x5B8 JUMPI JUMPDEST PUSH3 0x592 DUP2 DUP4 PUSH3 0x676 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x55E JUMPI SWAP1 DUP12 DUP16 DUP16 DUP16 SWAP5 SWAP1 PUSH3 0x5AF PUSH1 0x44 SWAP3 PUSH3 0x6C8 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH3 0x26D JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x586 JUMP JUMPDEST SWAP4 SWAP5 SWAP6 POP POP SWAP1 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x604 JUMPI JUMPDEST PUSH3 0x5DE DUP2 DUP4 PUSH3 0x676 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x600 JUMPI SWAP1 DUP13 DUP12 DUP16 SWAP5 SWAP4 PUSH3 0x5F8 SWAP1 PUSH3 0x6C8 JUMP JUMPDEST SWAP5 CODESIZE PUSH3 0x22A JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x5D2 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE DUP7 DUP6 DUP2 DUP4 KECCAK256 SWAP4 ADD DIV DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x637 JUMPI POP POP PUSH3 0xC1 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x627 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE DUP6 DUP5 DUP2 DUP4 KECCAK256 SWAP4 ADD DIV DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x665 JUMPI POP POP PUSH3 0x81 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x655 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x699 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH3 0x671 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x729 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x6FA JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x6EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP1 ISZERO PUSH3 0x89A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND PUSH3 0x83C JUMPI DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x80F JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH3 0x7E2 JUMPI PUSH1 0x9 DUP3 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3648 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A204F776E6572206973206E6F7420756E6971756500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A204F776E657220697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH3 0x992 JUMPI DUP2 LT PUSH3 0x934 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x53 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27 JUMPI STOP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x0 SWAP2 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x13CF08B EQ PUSH2 0x1E52 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5B JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x1D31 JUMPI DUP2 PUSH4 0xABDC640 EQ PUSH2 0x1D09 JUMPI DUP2 PUSH4 0xD61B519 EQ PUSH2 0x1912 JUMPI DUP2 PUSH4 0x1694505E EQ PUSH2 0x18EA JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x18CB JUMPI DUP2 PUSH4 0x1B45A47A EQ PUSH2 0x18AC JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x17D2 JUMPI DUP2 PUSH4 0x2A9AF7BA EQ PUSH2 0x17B3 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1797 JUMPI DUP2 PUSH4 0x39262773 EQ PUSH2 0x1778 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x1730 JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x14FF JUMPI DUP2 PUSH4 0x553000C1 EQ PUSH2 0x14E0 JUMPI DUP2 PUSH4 0x562E9DF9 EQ PUSH2 0x14B8 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1482 JUMPI DUP2 PUSH4 0x7918447E EQ PUSH2 0x1463 JUMPI DUP2 PUSH4 0x7A594A2B EQ PUSH2 0x143B JUMPI DUP2 PUSH4 0x7D81936C EQ PUSH2 0x141C JUMPI DUP2 PUSH4 0x8198C341 EQ PUSH2 0xF39 JUMPI DUP2 PUSH4 0x85A6A091 EQ PUSH2 0xE24 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xDFC JUMPI DUP2 PUSH4 0x933F5E07 EQ PUSH2 0xDDD JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xCD7 JUMPI DUP2 PUSH4 0x98951B56 EQ PUSH2 0xBB6 JUMPI DUP2 PUSH4 0x9E5CD74A EQ PUSH2 0xB97 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0xABA JUMPI DUP2 PUSH4 0xA6F2AE3A EQ PUSH2 0xA4F JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA1E JUMPI DUP2 PUSH4 0xB6BBA0AE EQ PUSH2 0x9FF JUMPI DUP2 PUSH4 0xC84AD9A5 EQ PUSH2 0x9DB JUMPI DUP2 PUSH4 0xD7196DD9 EQ PUSH2 0x873 JUMPI DUP2 PUSH4 0xD8A0F828 EQ PUSH2 0x7FB JUMPI DUP2 PUSH4 0xDCE165A6 EQ PUSH2 0x299 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI PUSH4 0xFE7441E7 EQ PUSH2 0x216 JUMPI DUP1 PUSH2 0x13 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x23C PUSH2 0x212A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x26E PUSH2 0x212A JUMP JUMPDEST PUSH2 0x276 PUSH2 0x2145 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH2 0x180 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP4 DUP4 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x24C JUMPI PUSH1 0x24 SWAP4 DUP5 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x7F3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP5 DUP6 ISZERO ISZERO DUP1 SWAP7 SUB PUSH2 0x7EF JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 DUP5 ISZERO ISZERO SWAP7 DUP8 DUP7 SUB PUSH2 0x7EB JUMPI PUSH1 0xA4 CALLDATALOAD SWAP8 DUP9 ISZERO ISZERO SWAP1 DUP2 DUP11 SUB PUSH2 0x7E7 JUMPI PUSH2 0x144 CALLDATALOAD DUP1 ISZERO ISZERO SWAP11 DUP12 DUP3 SUB PUSH2 0x7E3 JUMPI PUSH2 0x164 CALLDATALOAD SWAP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP12 DUP13 DUP13 AND DUP1 SWAP13 SUB PUSH2 0x7E0 JUMPI PUSH1 0xFF DUP12 PUSH2 0x337 SWAP3 CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x764 JUMPI JUMPDEST PUSH2 0x6D0 JUMPI JUMPDEST PUSH2 0x660 JUMPI JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0x1C0 DUP9 ADD DUP9 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x64A JUMPI SWAP1 DUP15 SWAP2 DUP2 MSTORE CALLER DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP2 DUP3 MSTORE DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP2 DUP3 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0xE0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x100 DUP10 ADD SWAP5 PUSH1 0xC4 CALLDATALOAD DUP7 MSTORE PUSH2 0x120 DUP11 ADD SWAP7 PUSH1 0xE4 CALLDATALOAD DUP9 MSTORE PUSH2 0x140 DUP12 ADD SWAP9 PUSH2 0x104 CALLDATALOAD DUP11 MSTORE PUSH2 0x160 DUP13 ADD SWAP11 PUSH2 0x124 CALLDATALOAD DUP13 MSTORE DUP13 ADD SWAP15 DUP16 MSTORE PUSH2 0x1A0 DUP13 ADD SWAP13 DUP14 MSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x630 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3FA SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x208D JUMP JUMPDEST SWAP13 SWAP1 SWAP13 PUSH2 0x617 JUMPI MLOAD DUP13 SLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH25 0x1000000000000000000000000000000000000000000000000 MUL PUSH25 0xFF000000000000000000000000000000000000000000000000 AND SWAP5 ISZERO ISZERO PUSH24 0x10000000000000000000000000000000000000000000000 MUL PUSH24 0xFF0000000000000000000000000000000000000000000000 AND SWAP4 ISZERO ISZERO PUSH23 0x100000000000000000000000000000000000000000000 MUL PUSH23 0xFF00000000000000000000000000000000000000000000 AND SWAP3 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL PUSH22 0xFF000000000000000000000000000000000000000000 AND SWAP2 ISZERO ISZERO PUSH1 0xA0 PUSH1 0x2 EXP MUL PUSH21 0xFF0000000000000000000000000000000000000000 AND SWAP1 DUP16 AND PUSH25 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO PUSH1 0xFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD DUP9 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 ADD SWAP3 MLOAD ISZERO ISZERO PUSH2 0x58E SWAP1 DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD AND DUP2 SLOAD SWAP1 PUSH2 0x100 MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x603 JUMPI POP POP PUSH32 0x96AA03A7CD4ABA017B05CE697DF0E528A91D045A01285C50E931B0C0C4939CE DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x11 DUP5 SWAP2 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 DUP1 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP3 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP8 PUSH2 0x346 JUMPI PUSH1 0x84 DUP13 PUSH1 0x33 DUP14 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A206E6577206F776E657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697320746865207A65726F206164647265737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xA PUSH2 0x6F3 PUSH2 0x124 CALLDATALOAD PUSH2 0x6EE PUSH2 0x104 CALLDATALOAD PUSH2 0x6EE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x21F7 JUMP JUMPDEST GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x84 DUP14 PUSH1 0x33 DUP15 PUSH1 0x20 DUP13 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6665657320617420313025206F72206C65737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH7 0x11C37937E08000 PUSH1 0x11 SLOAD GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x84 DUP15 PUSH1 0x3C DUP16 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3530303030303030303030303030303020576569206F72206C65737300000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH32 0xC5D4FBADDD2087D369F5CF16AD7544F41EF0DC291B510E4CB1CB6E6EAAE74539 SWAP2 PUSH2 0x86B PUSH1 0x20 SWAP3 CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE PUSH2 0x848 PUSH1 0xFF DUP5 DUP9 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x85B PUSH1 0xFF PUSH2 0x100 DUP4 DIV AND PUSH2 0x215B JUMP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0xD SSTORE CALLVALUE SWAP1 CALLDATALOAD PUSH2 0x2274 JUMP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI CALLER DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x89D PUSH1 0xFF DUP3 DUP6 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 PUSH2 0x8B8 DUP4 PUSH1 0x14 SLOAD AND PUSH1 0x1B SLOAD SWAP1 ADDRESS PUSH2 0x2836 JUMP JUMPDEST PUSH2 0x8CA DUP4 PUSH1 0x15 SLOAD AND PUSH1 0x1C SLOAD SWAP1 ADDRESS PUSH2 0x2836 JUMP JUMPDEST PUSH2 0x8DC DUP4 PUSH1 0x16 SLOAD AND PUSH1 0x1D SLOAD SWAP1 ADDRESS PUSH2 0x2836 JUMP JUMPDEST DUP4 DUP1 DUP1 DUP1 PUSH2 0x8FB PUSH2 0x8F2 PUSH1 0x1B SLOAD PUSH1 0x1C SLOAD SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP7 DUP2 PUSH1 0x1B SSTORE DUP2 PUSH1 0x1C SSTORE DUP2 PUSH1 0x1D SSTORE PUSH1 0x14 SLOAD AND ADDRESS BALANCE SWAP1 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x9D6 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9C0 JUMPI DUP4 MLOAD SWAP1 PUSH2 0x93E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x2252 JUMP JUMPDEST DUP2 MSTORE DUP6 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x97B JUMPI POP PUSH32 0x21A3A3648D0B2AFC084ACD733D71600B506FA4ECA7EF1F5E24718C5E17F4E7FF SWAP2 PUSH1 0x20 SWAP2 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420424E420000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x41 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x948 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0xD SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x19 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA48 PUSH2 0xA3E PUSH2 0x212A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x275F JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA80 PUSH2 0xA93 SWAP2 PUSH2 0xA71 PUSH1 0xFF PUSH1 0xD SLOAD AND PUSH2 0x215B JUMP JUMPDEST ADDRESS DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP4 KECCAK256 SLOAD PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0xA88 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 CALLVALUE SWAP2 DIV PUSH2 0x2274 JUMP JUMPDEST PUSH32 0x6CD8C20496FA31DBA3F83C7ADCA278C356A6CAA5529741A5D2B9B774613C198B DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x7E0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E0 JUMPI PUSH2 0xAD5 PUSH2 0x212A JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xB2B JUMPI PUSH1 0x20 DUP6 PUSH2 0xA48 DUP7 PUSH2 0xB24 DUP8 DUP8 PUSH2 0xB1F PUSH2 0xB16 PUSH2 0x2A8D JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x23D7 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x293E JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x17 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xBE4 PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0xBF1 PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23E4 JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND PUSH2 0xC6D JUMPI POP PUSH2 0xC29 PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC1F DUP7 PUSH2 0x208D JUMP JUMPDEST POP SLOAD DIV AND ISZERO PUSH2 0x2458 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0x12C8D6025943157CBCB4E904B3E3D97D2AC7EAE9F61F343B2E7CB23BE24BDBB7 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C72656164792077617320617070726F766564206279206F776E657200000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xDD3 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xDBD JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xD9A JUMPI POP PUSH1 0x1 EQ PUSH2 0xD42 JUMPI JUMPDEST PUSH2 0xD3E DUP8 DUP8 PUSH2 0xD34 DUP3 DUP13 SUB DUP4 PUSH2 0x2252 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x20E1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xD87 JUMPI POP POP POP DUP3 PUSH2 0xD3E SWAP5 PUSH2 0xD34 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xD23 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD34 DUP3 PUSH2 0xD3E DUP7 DUP1 PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xD04 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1A SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xE52 PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0xE5F PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0xE72 PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC1F DUP8 PUSH2 0x208D JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0xECF JUMPI POP DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER PUSH32 0xB8B1CBDD07C030BED9E01F4EE5465E3A3FD2AA8F7135C84467C0F3CF203925EB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2050726F706F73616C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F7420617070726F766564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH2 0xF55 PUSH2 0x212A JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP4 PUSH1 0x44 SWAP1 DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0x7 SLOAD AND SWAP5 CALLER DUP7 SUB PUSH2 0x13B2 JUMPI DUP5 DUP10 SWAP9 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x20 SWAP7 PUSH1 0xA DUP9 MSTORE PUSH1 0xFF DUP10 DUP14 KECCAK256 SLOAD AND PUSH2 0x136F JUMPI DUP7 EQ PUSH2 0x132C JUMPI DUP1 PUSH1 0x14 SLOAD AND DUP7 EQ PUSH2 0x12E9 JUMPI DUP1 PUSH1 0x15 SLOAD AND DUP7 EQ PUSH2 0x12A6 JUMPI PUSH1 0x16 SLOAD AND DUP6 EQ PUSH2 0x1263 JUMPI PUSH1 0x4B DUP5 GT PUSH2 0x1220 JUMPI DUP5 DUP11 MSTORE PUSH1 0xE DUP7 MSTORE DUP7 DUP11 KECCAK256 SLOAD PUSH2 0x11DD JUMPI PUSH1 0x13 SLOAD DUP10 GT PUSH2 0x1174 JUMPI POP POP POP PUSH2 0xFE6 PUSH1 0x64 SWAP2 DUP8 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0xFEE PUSH2 0x2C17 JUMP JUMPDEST POP DIV SWAP5 PUSH1 0x17 SLOAD SWAP1 PUSH1 0x18 SLOAD PUSH2 0x1002 DUP2 DUP5 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 PUSH2 0x1010 PUSH1 0x19 SLOAD DUP1 SWAP6 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1038 JUMPI POP POP POP POP POP PUSH2 0x102B PUSH1 0xE SWAP4 SWAP5 SWAP6 PUSH1 0x1B SLOAD PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1B SSTORE JUMPDEST DUP6 MSTORE MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x1049 SWAP2 SWAP3 SWAP5 SWAP10 SWAP4 SWAP6 SWAP8 SWAP9 POP PUSH2 0x2BB0 JUMP JUMPDEST DUP2 PUSH2 0x1052 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH2 0x105C SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP3 PUSH2 0x1066 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST DUP2 PUSH2 0x106F PUSH2 0x2C17 JUMP JUMPDEST POP PUSH2 0x1079 SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP8 PUSH2 0x1083 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 PUSH2 0x108C PUSH2 0x2C17 JUMP JUMPDEST POP PUSH2 0x1096 SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP2 PUSH2 0x10A1 SWAP1 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x10A9 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP7 PUSH2 0x10B9 SWAP1 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x10C1 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 PUSH2 0x10D0 SWAP2 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x10D8 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 DUP7 PUSH2 0x10E7 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x10F4 SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x10FD SWAP2 PUSH2 0x23D7 JUMP JUMPDEST DUP2 PUSH2 0x1106 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x1113 SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x111C SWAP2 PUSH2 0x23D7 JUMP JUMPDEST DUP3 PUSH2 0x1125 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x1132 SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x113B SWAP2 PUSH2 0x23D7 JUMP JUMPDEST SWAP6 PUSH1 0x1B SLOAD SWAP1 PUSH2 0x1149 SWAP2 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1B SSTORE PUSH1 0x1C SLOAD SWAP1 PUSH2 0x1159 SWAP2 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1C SSTORE PUSH1 0x1D SLOAD SWAP1 PUSH2 0x1169 SWAP2 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1D SSTORE PUSH1 0xE SWAP2 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x38 PUSH32 0x416D6F756E742063616E2774206578636565647320746865206D617820747261 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E73616374696F6E20776974686472617720616D6F756E740000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1C PUSH32 0x55736572206861732070656E64696E67205769746864726177616C7300000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x19 PUSH32 0x546865206665652063616E6E6F74206578636565642037352500000000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1B PUSH32 0x5465616D2063616E2774206D616B65207769746864726177616C730000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x536B796C65722063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x48656973656E2063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x4261636B656E642063616E2774206D616B65207769746864726177616C730000 DUP6 PUSH1 0x1E DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH32 0x4F776E6572732063616E2774206D616B65207769746864726177616C73000000 DUP7 PUSH1 0x1D DUP8 DUP14 DUP16 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x22 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206261636B65 SWAP3 PUSH1 0x20 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E64000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x18 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x14 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x14A9 PUSH2 0x212A JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x16 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1D SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI CALLER DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xF DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1700 JUMPI DUP2 LT PUSH2 0x16BB JUMPI TIMESTAMP GT PUSH2 0x1716 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x10 DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1700 JUMPI DUP2 LT PUSH2 0x16BB JUMPI CALLER DUP5 MSTORE PUSH1 0x10 DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x12 SLOAD LT PUSH2 0x1651 JUMPI PUSH1 0x11 SLOAD CALLVALUE LT PUSH2 0x15C1 JUMPI POP PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP2 SWAP3 CALLER DUP5 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x15AD DUP3 CALLER ADDRESS PUSH2 0x2836 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP2 DUP2 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0xA4 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E742073656E74206973206E6F7420657175616C20746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686520424E4220616D6F756E7420726571756972656420666F722077697468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74206D616B65206D6F7265207468616E206F6E65207769 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746864726177616C207065722064617900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0xF DUP3 MSTORE TIMESTAMP DUP5 DUP5 KECCAK256 SSTORE PUSH1 0x10 DUP3 MSTORE DUP3 DUP5 DUP2 KECCAK256 SSTORE PUSH2 0x1535 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA48 PUSH1 0x20 SWAP3 PUSH2 0xB24 PUSH2 0x1753 PUSH2 0x212A JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x2A78 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1B SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x17ED PUSH2 0x212A JUMP JUMPDEST PUSH2 0x17F5 PUSH2 0x2145 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x1830 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0xA48 DUP8 DUP8 DUP8 PUSH2 0x275F JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1866 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x185B PUSH2 0x1854 PUSH1 0x20 SWAP8 SWAP7 PUSH2 0xA48 SWAP7 PUSH2 0xB1F PUSH2 0xB16 PUSH2 0x2A8D JUMP JUMPDEST CALLER DUP4 PUSH2 0x293E JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP1 CALLDATALOAD PUSH2 0x1937 PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x1940 DUP2 PUSH2 0x208D JUMP JUMPDEST POP PUSH1 0xFF SWAP2 PUSH2 0x1958 DUP4 PUSH1 0xA0 PUSH1 0x2 EXP DUP1 SWAP5 SLOAD DIV AND ISZERO PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP8 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C8A JUMPI POP LT PUSH2 0x1C1F JUMPI SWAP1 PUSH2 0x1977 PUSH1 0x7 SWAP3 PUSH2 0x208D JUMP JUMPDEST POP SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 NOT DUP3 SLOAD AND OR DUP1 DUP3 SSTORE DUP6 DUP5 DUP1 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND PUSH2 0x1BC5 JUMPI JUMPDEST SWAP2 POP POP PUSH24 0x10000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B89 JUMPI JUMPDEST DUP3 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B53 JUMPI JUMPDEST DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1AF4 JUMPI JUMPDEST ADD DUP1 SLOAD SWAP2 DUP3 AND PUSH2 0x1A1C JUMPI DUP6 DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH2 0x100 DUP1 SWAP5 DIV AND SWAP1 DUP2 ISZERO PUSH2 0x1A89 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP7 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 SLOAD DIV AND DUP4 MSTORE DUP1 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 DUP7 DUP9 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xAC9D517045A5EC57DA9F145E5C349535857BAA98B41FA00AEA81886B40B65EE9 PUSH1 0x80 PUSH1 0x3 DUP4 ADD SLOAD DUP7 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD SWAP2 DUP4 PUSH1 0x17 SSTORE DUP1 PUSH1 0x18 SSTORE DUP2 PUSH1 0x19 SSTORE DUP3 PUSH1 0x1A SSTORE DUP12 MLOAD SWAP4 DUP5 MSTORE DUP11 DUP5 ADD MSTORE DUP11 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 PUSH2 0x1A0E JUMP JUMPDEST PUSH32 0x7752C7A6D518AB1CF03B50E7D7FD3DA3258EB319DC343789E0A7BED06C43066C DUP6 PUSH1 0x1 DUP4 ADD SLOAD DUP1 PUSH1 0x11 SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1BBC ADDRESS BALANCE PUSH2 0x1B99 PUSH1 0x1E SLOAD PUSH2 0x24CC JUMP JUMPDEST ADDRESS DUP10 MSTORE DUP9 DUP8 MSTORE PUSH1 0x64 PUSH2 0x1BAD DUP10 DUP12 KECCAK256 SLOAD PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x1BB5 PUSH2 0x2C17 JUMP JUMPDEST POP DIV PUSH2 0x2274 JUMP JUMPDEST DUP7 PUSH1 0x1E SSTORE PUSH2 0x19DE JUMP JUMPDEST PUSH23 0x100000000000000000000000000000000000000000000 PUSH32 0x1B48326D6E9158A921C6006B9D6AD4B9D777C488E9B7924B3E0C8B0B1304604 SWAP4 DIV AND ISZERO ISZERO PUSH1 0xFF NOT PUSH1 0xD SLOAD AND DUP7 DUP3 AND OR PUSH1 0xD SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP8 DUP6 DUP5 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x84 DUP5 DUP7 DUP9 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A20617070726F76616C7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6973206C657373207468616E2072657175697265640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP11 MSTORE PUSH1 0x6 DUP9 MSTORE DUP9 DUP11 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SLOAD AND DUP12 MSTORE DUP9 MSTORE DUP6 DUP10 DUP12 KECCAK256 SLOAD AND PUSH2 0x1CF7 JUMPI JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CE1 JUMPI PUSH1 0x1 ADD PUSH2 0x195E JUMP JUMPDEST PUSH1 0x24 DUP11 PUSH1 0x11 DUP10 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1CE1 JUMPI SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x15 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA48 PUSH2 0x1D51 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x293E JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E48 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x1E32 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1E11 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DB8 JUMPI JUMPDEST PUSH2 0xD3E DUP7 DUP7 PUSH2 0xD34 DUP3 DUP12 SUB DUP4 PUSH2 0x2252 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x1DFE JUMPI POP POP POP DUP3 PUSH2 0xD3E SWAP5 PUSH2 0xD34 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x1DA7 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD34 DUP3 PUSH2 0xD3E DUP7 PUSH2 0x1DA7 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1D87 JUMP JUMPDEST DUP5 DUP5 SWAP3 CALLVALUE PUSH2 0x7F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F3 JUMPI CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH2 0x1C0 SWAP6 MSTORE MUL DUP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF SWAP1 DUP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SLOAD AND SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SLOAD SWAP5 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP4 ADD SLOAD SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 DUP5 ADD SLOAD SWAP3 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB7 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP9 DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP13 DUP14 DUP4 AND DUP3 MSTORE DUP5 PUSH1 0xA0 PUSH1 0x2 EXP DUP5 DIV AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x20C8 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2116 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x2140 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x2140 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2162 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C652069736E277420656E61626C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x21B0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420616E206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2204 JUMPI JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2239 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2239 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 PUSH1 0xB SLOAD AND SWAP2 PUSH2 0x229C PUSH1 0x0 SWAP4 ADDRESS DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 ADDRESS PUSH2 0x293E JUMP JUMPDEST PUSH1 0xB SLOAD AND SWAP1 PUSH2 0x12C TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x23C0 JUMPI TIMESTAMP DUP2 LT PUSH2 0x2379 JUMPI PUSH1 0xC4 PUSH1 0x60 SWAP3 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE ADDRESS PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE DUP9 PUSH1 0x44 DUP6 ADD MSTORE DUP9 PUSH1 0x64 DUP6 ADD MSTORE ADDRESS PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x236E JUMPI PUSH2 0x2343 JUMPI JUMPDEST POP POP PUSH1 0x20 PUSH32 0xFDB748C915E4E67B4BB23287BF4295A4595CE48B50343214369F72CCFB974CFA SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x2367 JUMPI JUMPDEST PUSH2 0x2359 DUP2 DUP4 PUSH2 0x2252 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7E0 JUMPI DUP1 PUSH2 0x2314 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x234F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2204 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x23EB JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6573206E6F7420657869737400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x245F JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617320616C726561647920657865637574656400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x60 DUP5 ADD DUP3 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x2239 JUMPI DUP4 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP1 DUP5 CALLDATASIZE DUP4 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x20C8 JUMPI ADDRESS DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0xB SLOAD AND SWAP2 DUP7 MLOAD SWAP3 PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP2 DUP5 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x266C JUMPI PUSH1 0x0 SWAP5 PUSH2 0x2632 JUMPI JUMPDEST POP DUP9 MLOAD SWAP4 PUSH1 0x1 SWAP5 DUP6 LT ISZERO PUSH2 0x20C8 JUMPI PUSH2 0x2570 SWAP2 DUP8 DUP6 SWAP3 AND DUP11 DUP13 ADD MSTORE ADDRESS PUSH2 0x293E JUMP JUMPDEST DUP5 PUSH1 0xB SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x2140 JUMPI SWAP2 DUP8 SWAP9 SWAP5 SWAP4 SWAP2 SWAP9 MLOAD SWAP9 DUP10 SWAP6 PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0xA4 DUP8 ADD SWAP3 PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xC4 DUP7 ADD SWAP5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2618 JUMPI POP POP POP POP POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 DUP2 SWAP6 ADDRESS PUSH1 0x64 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x260D JUMPI PUSH2 0x2604 JUMPI POP POP POP JUMP JUMPDEST DUP3 GT PUSH2 0x2239 JUMPI MSTORE JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP12 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x25D1 JUMP JUMPDEST DUP3 DUP2 DUP2 SWAP7 SWAP4 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x2665 JUMPI JUMPDEST PUSH2 0x264A DUP2 DUP4 PUSH2 0x2252 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24C JUMPI MLOAD SWAP1 DUP7 DUP3 AND DUP3 SUB PUSH2 0x7E0 JUMPI POP SWAP3 CODESIZE PUSH2 0x2550 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2640 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x267E JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26F2 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x27BA SWAP3 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND SWAP1 PUSH2 0x277C DUP3 ISZERO ISZERO PUSH2 0x2677 JUMP JUMPDEST DUP4 AND SWAP1 PUSH2 0x278A DUP3 ISZERO ISZERO PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x2825 JUMPI JUMPDEST POP ISZERO SWAP1 DUP2 PUSH2 0x280F JUMPI JUMPDEST POP PUSH2 0x27BC JUMPI JUMPDEST POP PUSH2 0x2836 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x64 PUSH2 0x27CD PUSH1 0x1A SLOAD DUP8 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x27D5 PUSH2 0x2C17 JUMP JUMPDEST POP DIV PUSH1 0x1E SLOAD PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH2 0x2806 ADDRESS BALANCE PUSH2 0x27F0 DUP7 PUSH2 0x24CC JUMP JUMPDEST ADDRESS DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x64 PUSH2 0x1BAD PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x1E SSTORE CODESIZE PUSH2 0x27B4 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x27AE JUMP JUMPDEST DUP4 MSTORE POP PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 PUSH2 0x284D DUP4 ISZERO ISZERO PUSH2 0x2677 JUMP JUMPDEST AND SWAP2 PUSH2 0x285A DUP4 ISZERO ISZERO PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x28D2 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0x28A7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 PUSH1 0x20 SWAP6 PUSH2 0xB1F PUSH2 0xB16 PUSH2 0x2A8D JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x28C2 DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0x2A78 JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP4 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2A0C JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x299F JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2A83 SWAP1 DUP3 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2379 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A9A DUP3 PUSH2 0x221D JUMP JUMPDEST PUSH1 0x1E DUP3 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2ACE JUMPI POP JUMP JUMPDEST PUSH2 0x2AED SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x20E1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2AFB JUMPI DIV SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0x1E DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x1E SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 PUSH1 0x1E SWAP2 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST SUB PUSH2 0x2B3D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 PUSH1 0x64 SWAP2 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 PUSH1 0xA SWAP2 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2C10 JUMPI DUP1 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP3 SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 SWAP1 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2C24 DUP3 PUSH2 0x221D JUMP JUMPDEST PUSH1 0x1A DUP3 MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xB8 DUP4 0x4C 0xF6 0xC8 0xAB 0xCC CALLCODE 0xF9 JUMP 0xD5 0x2F JUMPI STOP PUSH2 0xBDE8 PUSH22 0xECD8B76473E9413892BFA8345264736F6C6343000811 STOP CALLER DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT DIFFICULTY 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E000000000000000000000000000000000000000 ",
							"sourceMap": "348:15395:0:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;2136:19:2;348:15395:0;;:::i;:::-;;;;;;;;;-1:-1:-1;348:15395:0;;;;2136:19:2;348:15395:0;2166:15:2;348:15395:0;;;;;:::i;:::-;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;736:10:9;;348:15395:0;1136:18:1;348:15395:0;;;1136:18:1;348:15395:0;;;-1:-1:-1;;1170:43:1;-1:-1:-1;;;;;;;;;;;736:10:9;;1170:43:1;;;;;569:21:0;;348:15395;;;;626:5;348:15395;;;626:5;348:15395;916:11;;348:15395;;;;;;1028:13;;348:15395;1518:42;348:15395;1510:51;348:15395;;;1510:51;348:15395;1618:42;348:15395;1610:51;348:15395;;;1610:51;348:15395;1713:42;348:15395;1705:51;348:15395;;;1705:51;348:15395;;2173:1;348:15395;2136:19:2;2214:1:0;348:15395;2136:19:2;2250:1:0;348:15395;;2291:1;348:15395;;2474:1;348:15395;;2514:1;348:15395;;2549:1;348:15395;;2589:1;348:15395;;3575:26;;3478:42;;;;3575:26;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;3639:23;;348:15395;3639:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;3557:106;;;;;348:15395;3557:106;;3632:4;3557:106;;;348:15395;;;;;;;;;;;;;;;;3557:106;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3676:34:0;348:15395;;;;;;;;;;;;;;3723:25;348:15395;;;;;;;-1:-1:-1;;348:15395:0;;;;;;;;3632:4;348:15395;;;;;;;;;;;;;;;;;1510:51;348:15395;;;;;;;;;;;;;;;;1610:51;348:15395;;;;;;;;;;;;;;;;1705:51;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4380:7;;348:15395;4351:7;;;;4322;:::i;:::-;4351;:::i;4380:::-;2663:24:1;;348:15395:0;;;;2741:21:1;348:15395:0;;;2741:21:1;348:15395:0;;;;2778:44:1;;;;569:21:0;348:15395;3632:4;;8944:21:2;348:15395:0;;;;;9326:37:2;348:15395:0;9091:24:2;348:15395:0;;;9091:24:2;:::i;:::-;348:15395:0;;3632:4;348:15395;;;;;9273:30:2;348:15395:0;;;;;9273:30:2;:::i;:::-;3632:4:0;348:15395;;;;;;;;;;;;;;3632:4;9326:37:2;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3557:106;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15395;;;;4351:7;348:15395;;;;;;;;;;;;;;;;;4380:7;348:15395;;;;4322:7;348:15395;;:::i;:::-;3557:106;;;;;;;;;;;;;;;;;;;348:15395;;;;3557:106;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;3639:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15395;;;;;;;;;;;;;;;:::i;:::-;3639:23;;;;;;;;;;3575:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15395;;;;;;;;;;;;;:::i;:::-;3575:26;;;;348:15395;;;;3575:26;;;;;;348:15395;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2136:19:2;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2942:330:1;-1:-1:-1;;;;;348:15395:0;3007:22:1;;348:15395:0;;3027:1:1;348:15395:0;;;3088:7:1;348:15395:0;;;;;;;;;;;;;3088:7:1;348:15395:0;;;;;;;-1:-1:-1;;348:15395:0;;;;;3184:7:1;348:15395:0;;;;;;;;;;;3184:7:1;348:15395:0;;;;;;3184:7:1;348:15395:0;;;;;;-1:-1:-1;;;;;;348:15395:0;;;;;-1:-1:-1;;;;;;;;;;;348:15395:0;;3222:42:1;2942:330::o;348:15395:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:181:8;;348:15395:0;;;;;;;;601:6:8;;348:15395:0;;487:181:8;:::o;348:15395:0:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;-1:-1:-1;348:15395:0"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_34180": {
									"entryPoint": 8517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 8695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 10993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_literal_to_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862": {
									"entryPoint": 10893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"copy_literal_to_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f": {
									"entryPoint": 11287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_44077": {
									"entryPoint": 8733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__transfer": {
									"entryPoint": 10079,
									"id": 507,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 10872,
									"id": 2796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_addLiquidity": {
									"entryPoint": 8820,
									"id": 764,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_approve": {
									"entryPoint": 10558,
									"id": 2138,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_mul": {
									"entryPoint": 11250,
									"id": 2876,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_mul_34176": {
									"entryPoint": 11028,
									"id": 2876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_mul_34188": {
									"entryPoint": 11184,
									"id": 2876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_mul_34200": {
									"entryPoint": 11217,
									"id": 2876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_swapTokensForEth": {
									"entryPoint": 9420,
									"id": 649,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_transfer": {
									"entryPoint": 10294,
									"id": 1950,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"require_helper_string": {
									"entryPoint": 10950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"require_helper_stringliteral": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_3b6d": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_6a43": {
									"entryPoint": 9304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_7134": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_9e9b": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_baec": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_struct_Proposal_dyn": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"update_storage_value_offsett_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060409080825260049081361015610053575b5050361561002057600080fd5b3461002757005b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2005b6000917c0100000000000000000000000000000000000000000000000000000000833504918263013cf08b14611e525750816306fdde0314611d5b578163095ea7b314611d315781630abdc64014611d095781630d61b519146119125781631694505e146118ea57816318160ddd146118cb5781631b45a47a146118ac57816323b872dd146117d25781632a9af7ba146117b3578163313ce56714611797578163392627731461177857816339509351146117305781633ccfd60b146114ff578163553000c1146114e0578163562e9df9146114b857816370a08231146114825781637918447e146114635781637a594a2b1461143b5781637d81936c1461141c5781638198c34114610f3957816385a6a09114610e245781638da5cb5b14610dfc578163933f5e0714610ddd57816395d89b4114610cd757816398951b5614610bb65781639e5cd74a14610b97578163a457c2d714610aba578163a6f2ae3a14610a4f578163a9059cbb14610a1e578163b6bba0ae146109ff578163c84ad9a5146109db578163d7196dd914610873578163d8a0f828146107fb578163dce165a61461029957508063dd62ed3e146102505763fe7441e7146102165780610013565b903461024c57602036600319011261024c5780602092600160a060020a0361023c61212a565b168152600e845220549051908152f35b5080fd5b50903461024c578060031936011261024c578060209261026e61212a565b610276612145565b600160a060020a0391821683526001865283832091168252845220549051908152f35b905082346107f757610180806003193601126107f3578383359182151580930361024c576024938435918215158093036107f357604435948515158096036107ef5760643593841515968786036107eb5760a4359788151590818a036107e757610144358015159a8b82036107e3576101643599600160a060020a039b8c8c16809c036107e05760ff8b61033792338152600a6020522054166121a9565b610764575b6106d0575b610660575b8651966101c0880188811067ffffffffffffffff82111761064a57908e918152338952602089019182528801958652606088019485526080880193845260a0880191825260c0880191608435835260e0890193845261010089019460c43586526101208a019660e43588526101408b0198610104358a526101608c019a610124358c528c019e8f526101a08c019c8d5260055468010000000000000000811015610630578060016103fa920160055561208d565b9c909c61061757518c5495519151925193519451151578010000000000000000000000000000000000000000000000000278ff00000000000000000000000000000000000000000000000016941515770100000000000000000000000000000000000000000000000277ff0000000000000000000000000000000000000000000000169315157601000000000000000000000000000000000000000000000276ff000000000000000000000000000000000000000000001692151575010000000000000000000000000000000000000000000275ff0000000000000000000000000000000000000000001691151560a060020a0274ff000000000000000000000000000000000000000016908f1678ffffffffffffffffffffffffffffffffffffffffffffffffff1990961695909517949094179390931792909217919091171787555160018701555160028601805460ff191691151560ff1691909117905551600385015551888401555160058301555160068201556007019251151561058e90849060ff801983541691151516179055565b51168154906101000274ffffffffffffffffffffffffffffffffffffffff00169074ffffffffffffffffffffffffffffffffffffffff0019161790556005549160001983019283116106035750507f096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce8280a280f35b6011849160e060020a634e487b7102835252fd5b50505050508b8e808f60e060020a634e487b7102825252fd5b50505050508b8e60418f60e060020a634e487b7102835252fd5b508b8e60418f60e060020a634e487b7102835252fd5b876103465760848c60338d60208b519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a206e6577206f776e65722060448201527f697320746865207a65726f2061646472657373000000000000000000000000006064820152fd5b600a6106f3610124356106ee610104356106ee60e43560c4356121f7565b6121f7565b11156103415760848d60338e60208c519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f6665657320617420313025206f72206c657373000000000000000000000000006064820152fd5b6611c37937e08000601154111561033c5760848e603c8f60208d519360e560020a62461bcd0285528401528201527f4d756c74695369676e617475726557616c6c65743a204d757374206b6565702060448201527f3530303030303030303030303030303020576569206f72206c657373000000006064820152fd5b80fd5b8a80fd5b8880fd5b8680fd5b8480fd5b8380fd5b8280fd5b83915060203660031901126107f7577fc5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae745399161086b602092338652600a845261084860ff84882054166121a9565b600d5461085b60ff61010083041661215b565b61ff001916600d55349035612274565b51348152a180f35b905082346107f757826003193601126107f757338352600a60205261089d60ff82852054166121a9565b600160a060020a03916108b88360145416601b549030612836565b6108ca8360155416601c549030612836565b6108dc8360165416601d549030612836565b838080806108fb6108f2601b54601c54906121f7565b601d54906121f7565b9681601b5581601c5581601d55601454163031905af13d156109d6573d67ffffffffffffffff81116109c05783519061093e601f8201601f191660200183612252565b81528560203d92013e5b1561097b57507f21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff9160209151908152a180f35b6020606492519160e560020a62461bcd028352820152601260248201527f4661696c656420746f2073656e6420424e4200000000000000000000000000006044820152fd5b60248660418560e060020a634e487b7102835252fd5b610948565b82843461024c578160031936011261024c5760209060ff600d541690519015158152f35b82843461024c578160031936011261024c576020906019549051908152f35b82843461024c578060031936011261024c57602090610a48610a3e61212a565b602435903361275f565b5160018152f35b82848160031936011261024c57610a80610a9391610a7160ff600d541661215b565b30845283602052832054612bd1565b610a88612c17565b506064349104612274565b7f6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b8180a180f35b919050346107e057826003193601126107e057610ad561212a565b9183602435923381526001602052818120600160a060020a0386168252602052205490828210610b2b57602085610a4886610b248787610b1f610b16612a8d565b82841115612ac6565b6123d7565b903361293e565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b82843461024c578160031936011261024c576020906017549051908152f35b905082346107f7576020806003193601126107f357823592338552600a8252610be460ff84872054166121a9565b610bf160055485106123e4565b83855260068252828520338652825260ff8386205416610c6d5750610c2960ff60a060020a610c1f8661208d565b5054041615612458565b8284526006815281842090338552528220600160ff19825416179055337f12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb78380a380f35b90608492519160e560020a62461bcd028352820152603c60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206160448201527f6c72656164792077617320617070726f766564206279206f776e6572000000006064820152fd5b905082346107f757826003193601126107f757805191838154916002830491600191828516948515610dd3575b6020958686108114610dbd57858952908115610d9a5750600114610d42575b610d3e8787610d34828c0383612252565b51918291826120e1565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610d875750505082610d3e94610d3492820101948680610d23565b8054868501880152928601928101610d69565b60ff19168887015250505050151581028301019250610d3482610d3e8680610d23565b60248460228560e060020a634e487b7102835252fd5b93607f1693610d04565b82843461024c578160031936011261024c57602090601a549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600854169051908152f35b905082346107f7576020806003193601126107f357823592338552600a8252610e5260ff84872054166121a9565b610e5f60055485106123e4565b610e7260ff60a060020a610c1f8761208d565b83855260068252828520338652825260ff838620541615610ecf5750828452600681528184209033855252822060ff198154169055337fb8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb8380a380f35b90608492519160e560020a62461bcd028352820152602e60248201527f4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206960448201527f73206e6f7420617070726f7665640000000000000000000000000000000000006064820152fd5b905082346107f75760603660031901126107f757610f5561212a565b906024803593604490813590600160a060020a03928360075416943386036113b2578489981694858b52602096600a885260ff898d20541661136f57861461132c57806014541686146112e957806015541686146112a65760165416851461126357604b841161122057848a52600e8652868a20546111dd57601354891161117457505050610fe660649187612bf2565b610fee612c17565b5004946017549060185461100281846121f7565b9261101060195480956121f7565b908161103857505050505061102b600e939495601b54612a78565b601b555b85525282205580f35b611049919294999395979850612bb0565b81611052612c17565b5061105c91612af1565b9261106690612bb0565b8161106f612c17565b5061107991612af1565b9761108390612bb0565b9061108c612c17565b5061109691612af1565b916110a19082612bf2565b6110a9612c17565b5060649004966110b99082612bf2565b6110c1612c17565b5060649004916110d091612bf2565b6110d8612c17565b506064900491866110e7612a8d565b6110f49083831115612ac6565b6110fd916123d7565b81611106612a8d565b6111139083831115612ac6565b61111c916123d7565b82611125612a8d565b6111329083831115612ac6565b61113b916123d7565b95601b549061114991612a78565b601b55601c549061115991612a78565b601c55601d549061116991612a78565b601d55600e9161102f565b6084929160387f416d6f756e742063616e2774206578636565647320746865206d61782074726192888a519560e560020a62461bcd0287528601528401528201527f6e73616374696f6e20776974686472617720616d6f756e7400000000000000006064820152fd5b60649291601c7f55736572206861732070656e64696e67205769746864726177616c730000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064929160197f546865206665652063616e6e6f7420657863656564203735250000000000000092888a519560e560020a62461bcd028752860152840152820152fd5b60649291601b7f5465616d2063616e2774206d616b65207769746864726177616c73000000000092888a519560e560020a62461bcd028752860152840152820152fd5b6064847f536b796c65722063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f48656973656e2063616e2774206d616b65207769746864726177616c7300000085601d868c8e519560e560020a62461bcd028752860152840152820152fd5b6064847f4261636b656e642063616e2774206d616b65207769746864726177616c73000085601e868c8e519560e560020a62461bcd028752860152840152820152fd5b6064857f4f776e6572732063616e2774206d616b65207769746864726177616c7300000086601d878d8f519560e560020a62461bcd028752860152840152820152fd5b6084929160227f4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b659260208a519560e560020a62461bcd0287528601528401528201527f6e640000000000000000000000000000000000000000000000000000000000006064820152fd5b82843461024c578160031936011261024c576020906018549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601454169051908152f35b82843461024c578160031936011261024c576020906011549051908152f35b82843461024c57602036600319011261024c5780602092600160a060020a036114a961212a565b16815280845220549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03601654169051908152f35b82843461024c578160031936011261024c57602090601d549051908152f35b90508160031936011261024c57338252602090600f825283832054620151808101908181116117005781106116bb574211611716575b338352601082528383205460018101908181116117005781106116bb57338452601083528484205583832054601254106116515760115434106115c157507f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9192338452600e825280842054906115ad823330612836565b338552600e8352848181205551908152a180f35b60a49184519160e560020a62461bcd028352820152604460248201527f54686520616d6f756e742073656e74206973206e6f7420657175616c20746f2060448201527f74686520424e4220616d6f756e7420726571756972656420666f72207769746860648201527f64726177000000000000000000000000000000000000000000000000000000006084820152fd5b60849184519160e560020a62461bcd028352820152603060248201527f596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e6520776960448201527f746864726177616c2070657220646179000000000000000000000000000000006064820152fd5b5060649184519160e560020a62461bcd028352820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248560118560e060020a634e487b7102835252fd5b338352600f82524284842055601082528284812055611535565b82843461024c578060031936011261024c57610a48602092610b2461175361212a565b9133815260018652848120600160a060020a0384168252865284602435912054612a78565b82843461024c578160031936011261024c57602090601b549051908152f35b82843461024c578160031936011261024c576020905160128152f35b82843461024c578160031936011261024c57602090601e549051908152f35b90503461024c57606036600319011261024c576117ed61212a565b6117f5612145565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203611830575b602086610a4887878761275f565b848210611866575091839161185b61185460209796610a4896610b1f610b16612a8d565b338361293e565b919394819350611822565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b82843461024c578160031936011261024c57602090601c549051908152f35b82843461024c578160031936011261024c576020906002549051908152f35b82843461024c578160031936011261024c57602090600160a060020a03600b54169051908152f35b839150346107f757602090816003193601126107f357803561193760055482106123e4565b6119408161208d565b5060ff916119588360a060020a809454041615612458565b60095487805b828110611c8a575010611c1f579061197760079261208d565b509074ff000000000000000000000000000000000000000019825416178082558584807501000000000000000000000000000000000000000000840416611bc5575b9150507701000000000000000000000000000000000000000000000082540416611b89575b82780100000000000000000000000000000000000000000000000082540416611b53575b82600282015416611af4575b018054918216611a1c578580f35b600160a060020a03928361010080940416908115611a89575080600160a060020a03196007541617600755867f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3540416835280528120805460ff1916600117905581808080808580f35b6084908688519160e560020a62461bcd028352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b7fac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee96080600383015486840154600585015460068601549183601755806018558160195582601a558b519384528a8401528a8301526060820152a1611a0e565b7f7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c856001830154806011558851908152a1611a02565b611bbc3031611b99601e546124cc565b3089528887526064611bad898b2054612b14565b611bb5612c17565b5004612274565b86601e556119de565b7601000000000000000000000000000000000000000000007f01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604930416151560ff19600d541686821617600d558851908152a18785846119b9565b6084848688519160e560020a62461bcd028352820152603560248201527f4d756c74695369676e617475726557616c6c65743a20617070726f76616c732060448201527f6973206c657373207468616e20726571756972656400000000000000000000006064820152fd5b838a5260068852888a20600160a060020a03827f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154168b52885285898b205416611cf7575b6000198114611ce15760010161195e565b60248a60118960e060020a634e487b7102835252fd5b9060018101809111611ce15790611cd0565b82843461024c578160031936011261024c57602090600160a060020a03601554169051908152f35b82843461024c578060031936011261024c57602090610a48611d5161212a565b602435903361293e565b905082346107f757826003193601126107f7578051918360035460028104916001918281168015611e48575b6020958686108214611e325750848852908115611e115750600114611db8575b610d3e8686610d34828b0383612252565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410611dfe5750505082610d3e94610d34928201019486611da7565b8054868501880152928601928101611de1565b60ff191687860152505050151581028301019250610d3482610d3e86611da7565b83602260249260e060020a634e487b7102835252fd5b93607f1693611d87565b848492346107f35760203660031901126107f357356005548110156107f35760089060056101c0955202807f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001547f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18201549160ff90817f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015416937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3820154947f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4830154907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5840154928578010000000000000000000000000000000000000000000000007f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db77f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6880154970154988c600160a060020a039c8d831682528460a060020a8404161515602083015284750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b6005548110156120c8576008906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b60e060020a634e487b7102600052603260045260246000fd5b6020808252825181830181905290939260005b82811061211657505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016120f4565b60043590600160a060020a038216820361214057565b600080fd5b60243590600160a060020a038216820361214057565b1561216257565b606460405160e560020a62461bcd02815260206004820152601560248201527f50726573616c652069736e277420656e61626c656400000000000000000000006044820152fd5b156121b057565b606460405160e560020a62461bcd02815260206004820152601f60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572006044820152fd5b9190820180921161220457565b60e060020a634e487b7102600052601160045260246000fd5b6040810190811067ffffffffffffffff82111761223957604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761223957604052565b600160a060020a039081600b54169161229c600093308552846020526040852054903061293e565b600b54169061012c42018042116123c0574281106123795760c46060928660405195869485937ff305d719000000000000000000000000000000000000000000000000000000008552306004860152602485015288604485015288606485015230608485015260a48401525af1801561236e57612343575b505060207ffdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa91604051908152a1565b606090813d8111612367575b6123598183612252565b810103126107e05780612314565b503d61234f565b6040513d84823e3d90fd5b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60248460e060020a634e487b710281526011600452fd5b9190820391821161220457565b156123eb57565b608460405160e560020a62461bcd02815260206004820152602d60248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c206460448201527f6f6573206e6f74206578697374000000000000000000000000000000000000006064820152fd5b1561245f57565b608460405160e560020a62461bcd02815260206004820152603360248201527f4d756c74695369676e617475726557616c6c65743a2070726f706f73616c207760448201527f617320616c7265616479206578656375746564000000000000000000000000006064820152fd5b604080519167ffffffffffffffff90606084018281118582101761223957835260028452602080850190843683378551156120c857308252600160a060020a039283600b5416918651927fad5c46480000000000000000000000000000000000000000000000000000000084528184600481845afa93841561266c57600094612632575b508851936001948510156120c85761257091878592168a8c01523061293e565b84600b541694853b156121405791879894939198519889957f791ac94700000000000000000000000000000000000000000000000000000000875260a487019260048801526000602488015260a060448801525180925260c4860194936000905b838210612618575050505050509181600081819530606483015242608483015203925af1801561260d5761260457505050565b82116122395752565b82513d6000823e3d90fd5b8551811687528b97509582019594820194908401906125d1565b8281819693963d8311612665575b61264a8183612252565b8101031261024c57519086821682036107e057509238612550565b503d612640565b88513d6000823e3d90fd5b1561267e57565b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b156126f257565b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b906127ba9291600160a060020a038082169061277c821515612677565b83169061278a8215156126eb565b600091818352601f60205260ff604084205416908115612825575b5015908161280f575b506127bc575b50612836565b565b6127df60646127cd601a5487612bf2565b6127d5612c17565b5004601e54612a78565b601e5561280630316127f0866124cc565b308352826020526064611bad6040852054612b14565b601e55386127b4565b8252506021602052604081205460ff16386127ae565b835250604082205460ff16386127a5565b600160a060020a038091169161284d831515612677565b169161285a8315156126eb565b600082815280602052604090818120548381106128d2579183916128a77fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95602095610b1f610b16612a8d565b86825281855282822055868152816128c28482842054612a78565b91888152808652205551908152a3565b6084835160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a03809116918215612a0c571691821561299f5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90612a8390826121f7565b9081106123795790565b60405190612a9a8261221d565b601e82527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006020830152565b15612ace5750565b612aed9060405191829160e560020a62461bcd028352600483016120e1565b0390fd5b8115612afb570490565b60e060020a634e487b7102600052601260045260246000fd5b8015612baa57601e810290808204601e0361220457612b35601e9183612af1565b03612b3d5790565b608460405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b50600090565b8015612baa57606481029080820460640361220457612b3560649183612af1565b8015612baa57600a810290808204600a0361220457612b35600a9183612af1565b908115612c105780820291808304820361220457612b359083612af1565b5050600090565b60405190612c248261221d565b601a82527f536166654d6174683a206469766973696f6e206279207a65726f000000000000602083015256fea26469706673582212208eb8834cf6c8abccf2f956d52f570061bde875ecd8b76473e9413892bfa8345264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x53 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27 JUMPI STOP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x0 SWAP2 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x13CF08B EQ PUSH2 0x1E52 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5B JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x1D31 JUMPI DUP2 PUSH4 0xABDC640 EQ PUSH2 0x1D09 JUMPI DUP2 PUSH4 0xD61B519 EQ PUSH2 0x1912 JUMPI DUP2 PUSH4 0x1694505E EQ PUSH2 0x18EA JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x18CB JUMPI DUP2 PUSH4 0x1B45A47A EQ PUSH2 0x18AC JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x17D2 JUMPI DUP2 PUSH4 0x2A9AF7BA EQ PUSH2 0x17B3 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1797 JUMPI DUP2 PUSH4 0x39262773 EQ PUSH2 0x1778 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x1730 JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x14FF JUMPI DUP2 PUSH4 0x553000C1 EQ PUSH2 0x14E0 JUMPI DUP2 PUSH4 0x562E9DF9 EQ PUSH2 0x14B8 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1482 JUMPI DUP2 PUSH4 0x7918447E EQ PUSH2 0x1463 JUMPI DUP2 PUSH4 0x7A594A2B EQ PUSH2 0x143B JUMPI DUP2 PUSH4 0x7D81936C EQ PUSH2 0x141C JUMPI DUP2 PUSH4 0x8198C341 EQ PUSH2 0xF39 JUMPI DUP2 PUSH4 0x85A6A091 EQ PUSH2 0xE24 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xDFC JUMPI DUP2 PUSH4 0x933F5E07 EQ PUSH2 0xDDD JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xCD7 JUMPI DUP2 PUSH4 0x98951B56 EQ PUSH2 0xBB6 JUMPI DUP2 PUSH4 0x9E5CD74A EQ PUSH2 0xB97 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0xABA JUMPI DUP2 PUSH4 0xA6F2AE3A EQ PUSH2 0xA4F JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA1E JUMPI DUP2 PUSH4 0xB6BBA0AE EQ PUSH2 0x9FF JUMPI DUP2 PUSH4 0xC84AD9A5 EQ PUSH2 0x9DB JUMPI DUP2 PUSH4 0xD7196DD9 EQ PUSH2 0x873 JUMPI DUP2 PUSH4 0xD8A0F828 EQ PUSH2 0x7FB JUMPI DUP2 PUSH4 0xDCE165A6 EQ PUSH2 0x299 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI PUSH4 0xFE7441E7 EQ PUSH2 0x216 JUMPI DUP1 PUSH2 0x13 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x23C PUSH2 0x212A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x26E PUSH2 0x212A JUMP JUMPDEST PUSH2 0x276 PUSH2 0x2145 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH2 0x180 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP4 DUP4 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x24C JUMPI PUSH1 0x24 SWAP4 DUP5 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x7F3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP5 DUP6 ISZERO ISZERO DUP1 SWAP7 SUB PUSH2 0x7EF JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 DUP5 ISZERO ISZERO SWAP7 DUP8 DUP7 SUB PUSH2 0x7EB JUMPI PUSH1 0xA4 CALLDATALOAD SWAP8 DUP9 ISZERO ISZERO SWAP1 DUP2 DUP11 SUB PUSH2 0x7E7 JUMPI PUSH2 0x144 CALLDATALOAD DUP1 ISZERO ISZERO SWAP11 DUP12 DUP3 SUB PUSH2 0x7E3 JUMPI PUSH2 0x164 CALLDATALOAD SWAP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP12 DUP13 DUP13 AND DUP1 SWAP13 SUB PUSH2 0x7E0 JUMPI PUSH1 0xFF DUP12 PUSH2 0x337 SWAP3 CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x764 JUMPI JUMPDEST PUSH2 0x6D0 JUMPI JUMPDEST PUSH2 0x660 JUMPI JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0x1C0 DUP9 ADD DUP9 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x64A JUMPI SWAP1 DUP15 SWAP2 DUP2 MSTORE CALLER DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP2 DUP3 MSTORE DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP2 DUP3 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0xE0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x100 DUP10 ADD SWAP5 PUSH1 0xC4 CALLDATALOAD DUP7 MSTORE PUSH2 0x120 DUP11 ADD SWAP7 PUSH1 0xE4 CALLDATALOAD DUP9 MSTORE PUSH2 0x140 DUP12 ADD SWAP9 PUSH2 0x104 CALLDATALOAD DUP11 MSTORE PUSH2 0x160 DUP13 ADD SWAP11 PUSH2 0x124 CALLDATALOAD DUP13 MSTORE DUP13 ADD SWAP15 DUP16 MSTORE PUSH2 0x1A0 DUP13 ADD SWAP13 DUP14 MSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x630 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3FA SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x208D JUMP JUMPDEST SWAP13 SWAP1 SWAP13 PUSH2 0x617 JUMPI MLOAD DUP13 SLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH25 0x1000000000000000000000000000000000000000000000000 MUL PUSH25 0xFF000000000000000000000000000000000000000000000000 AND SWAP5 ISZERO ISZERO PUSH24 0x10000000000000000000000000000000000000000000000 MUL PUSH24 0xFF0000000000000000000000000000000000000000000000 AND SWAP4 ISZERO ISZERO PUSH23 0x100000000000000000000000000000000000000000000 MUL PUSH23 0xFF00000000000000000000000000000000000000000000 AND SWAP3 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL PUSH22 0xFF000000000000000000000000000000000000000000 AND SWAP2 ISZERO ISZERO PUSH1 0xA0 PUSH1 0x2 EXP MUL PUSH21 0xFF0000000000000000000000000000000000000000 AND SWAP1 DUP16 AND PUSH25 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO PUSH1 0xFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD DUP9 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 ADD SWAP3 MLOAD ISZERO ISZERO PUSH2 0x58E SWAP1 DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD AND DUP2 SLOAD SWAP1 PUSH2 0x100 MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x603 JUMPI POP POP PUSH32 0x96AA03A7CD4ABA017B05CE697DF0E528A91D045A01285C50E931B0C0C4939CE DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x11 DUP5 SWAP2 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 DUP1 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP3 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP12 DUP15 PUSH1 0x41 DUP16 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP8 PUSH2 0x346 JUMPI PUSH1 0x84 DUP13 PUSH1 0x33 DUP14 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A206E6577206F776E657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697320746865207A65726F206164647265737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xA PUSH2 0x6F3 PUSH2 0x124 CALLDATALOAD PUSH2 0x6EE PUSH2 0x104 CALLDATALOAD PUSH2 0x6EE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x21F7 JUMP JUMPDEST GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x84 DUP14 PUSH1 0x33 DUP15 PUSH1 0x20 DUP13 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6665657320617420313025206F72206C65737300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH7 0x11C37937E08000 PUSH1 0x11 SLOAD GT ISZERO PUSH2 0x33C JUMPI PUSH1 0x84 DUP15 PUSH1 0x3C DUP16 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A204D757374206B65657020 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3530303030303030303030303030303020576569206F72206C65737300000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH32 0xC5D4FBADDD2087D369F5CF16AD7544F41EF0DC291B510E4CB1CB6E6EAAE74539 SWAP2 PUSH2 0x86B PUSH1 0x20 SWAP3 CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE PUSH2 0x848 PUSH1 0xFF DUP5 DUP9 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x85B PUSH1 0xFF PUSH2 0x100 DUP4 DIV AND PUSH2 0x215B JUMP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0xD SSTORE CALLVALUE SWAP1 CALLDATALOAD PUSH2 0x2274 JUMP JUMPDEST MLOAD CALLVALUE DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI CALLER DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x89D PUSH1 0xFF DUP3 DUP6 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 PUSH2 0x8B8 DUP4 PUSH1 0x14 SLOAD AND PUSH1 0x1B SLOAD SWAP1 ADDRESS PUSH2 0x2836 JUMP JUMPDEST PUSH2 0x8CA DUP4 PUSH1 0x15 SLOAD AND PUSH1 0x1C SLOAD SWAP1 ADDRESS PUSH2 0x2836 JUMP JUMPDEST PUSH2 0x8DC DUP4 PUSH1 0x16 SLOAD AND PUSH1 0x1D SLOAD SWAP1 ADDRESS PUSH2 0x2836 JUMP JUMPDEST DUP4 DUP1 DUP1 DUP1 PUSH2 0x8FB PUSH2 0x8F2 PUSH1 0x1B SLOAD PUSH1 0x1C SLOAD SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP7 DUP2 PUSH1 0x1B SSTORE DUP2 PUSH1 0x1C SSTORE DUP2 PUSH1 0x1D SSTORE PUSH1 0x14 SLOAD AND ADDRESS BALANCE SWAP1 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x9D6 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9C0 JUMPI DUP4 MLOAD SWAP1 PUSH2 0x93E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x2252 JUMP JUMPDEST DUP2 MSTORE DUP6 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x97B JUMPI POP PUSH32 0x21A3A3648D0B2AFC084ACD733D71600B506FA4ECA7EF1F5E24718C5E17F4E7FF SWAP2 PUSH1 0x20 SWAP2 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420424E420000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x41 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x948 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0xD SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x19 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA48 PUSH2 0xA3E PUSH2 0x212A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x275F JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA80 PUSH2 0xA93 SWAP2 PUSH2 0xA71 PUSH1 0xFF PUSH1 0xD SLOAD AND PUSH2 0x215B JUMP JUMPDEST ADDRESS DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP4 KECCAK256 SLOAD PUSH2 0x2BD1 JUMP JUMPDEST PUSH2 0xA88 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 CALLVALUE SWAP2 DIV PUSH2 0x2274 JUMP JUMPDEST PUSH32 0x6CD8C20496FA31DBA3F83C7ADCA278C356A6CAA5529741A5D2B9B774613C198B DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x7E0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E0 JUMPI PUSH2 0xAD5 PUSH2 0x212A JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xB2B JUMPI PUSH1 0x20 DUP6 PUSH2 0xA48 DUP7 PUSH2 0xB24 DUP8 DUP8 PUSH2 0xB1F PUSH2 0xB16 PUSH2 0x2A8D JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x23D7 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x293E JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x17 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xBE4 PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0xBF1 PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23E4 JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND PUSH2 0xC6D JUMPI POP PUSH2 0xC29 PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC1F DUP7 PUSH2 0x208D JUMP JUMPDEST POP SLOAD DIV AND ISZERO PUSH2 0x2458 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0x12C8D6025943157CBCB4E904B3E3D97D2AC7EAE9F61F343B2E7CB23BE24BDBB7 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C72656164792077617320617070726F766564206279206F776E657200000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xDD3 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xDBD JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xD9A JUMPI POP PUSH1 0x1 EQ PUSH2 0xD42 JUMPI JUMPDEST PUSH2 0xD3E DUP8 DUP8 PUSH2 0xD34 DUP3 DUP13 SUB DUP4 PUSH2 0x2252 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x20E1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xD87 JUMPI POP POP POP DUP3 PUSH2 0xD3E SWAP5 PUSH2 0xD34 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xD23 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD34 DUP3 PUSH2 0xD3E DUP7 DUP1 PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xD04 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1A SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0xE52 PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0xE5F PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0xE72 PUSH1 0xFF PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xC1F DUP8 PUSH2 0x208D JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0xECF JUMPI POP DUP3 DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP5 KECCAK256 SWAP1 CALLER DUP6 MSTORE MSTORE DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER PUSH32 0xB8B1CBDD07C030BED9E01F4EE5465E3A3FD2AA8F7135C84467C0F3CF203925EB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2050726F706F73616C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F7420617070726F766564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F7 JUMPI PUSH2 0xF55 PUSH2 0x212A JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP4 PUSH1 0x44 SWAP1 DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0x7 SLOAD AND SWAP5 CALLER DUP7 SUB PUSH2 0x13B2 JUMPI DUP5 DUP10 SWAP9 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x20 SWAP7 PUSH1 0xA DUP9 MSTORE PUSH1 0xFF DUP10 DUP14 KECCAK256 SLOAD AND PUSH2 0x136F JUMPI DUP7 EQ PUSH2 0x132C JUMPI DUP1 PUSH1 0x14 SLOAD AND DUP7 EQ PUSH2 0x12E9 JUMPI DUP1 PUSH1 0x15 SLOAD AND DUP7 EQ PUSH2 0x12A6 JUMPI PUSH1 0x16 SLOAD AND DUP6 EQ PUSH2 0x1263 JUMPI PUSH1 0x4B DUP5 GT PUSH2 0x1220 JUMPI DUP5 DUP11 MSTORE PUSH1 0xE DUP7 MSTORE DUP7 DUP11 KECCAK256 SLOAD PUSH2 0x11DD JUMPI PUSH1 0x13 SLOAD DUP10 GT PUSH2 0x1174 JUMPI POP POP POP PUSH2 0xFE6 PUSH1 0x64 SWAP2 DUP8 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0xFEE PUSH2 0x2C17 JUMP JUMPDEST POP DIV SWAP5 PUSH1 0x17 SLOAD SWAP1 PUSH1 0x18 SLOAD PUSH2 0x1002 DUP2 DUP5 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 PUSH2 0x1010 PUSH1 0x19 SLOAD DUP1 SWAP6 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1038 JUMPI POP POP POP POP POP PUSH2 0x102B PUSH1 0xE SWAP4 SWAP5 SWAP6 PUSH1 0x1B SLOAD PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1B SSTORE JUMPDEST DUP6 MSTORE MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x1049 SWAP2 SWAP3 SWAP5 SWAP10 SWAP4 SWAP6 SWAP8 SWAP9 POP PUSH2 0x2BB0 JUMP JUMPDEST DUP2 PUSH2 0x1052 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH2 0x105C SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP3 PUSH2 0x1066 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST DUP2 PUSH2 0x106F PUSH2 0x2C17 JUMP JUMPDEST POP PUSH2 0x1079 SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP8 PUSH2 0x1083 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 PUSH2 0x108C PUSH2 0x2C17 JUMP JUMPDEST POP PUSH2 0x1096 SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP2 PUSH2 0x10A1 SWAP1 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x10A9 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP7 PUSH2 0x10B9 SWAP1 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x10C1 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 PUSH2 0x10D0 SWAP2 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x10D8 PUSH2 0x2C17 JUMP JUMPDEST POP PUSH1 0x64 SWAP1 DIV SWAP2 DUP7 PUSH2 0x10E7 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x10F4 SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x10FD SWAP2 PUSH2 0x23D7 JUMP JUMPDEST DUP2 PUSH2 0x1106 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x1113 SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x111C SWAP2 PUSH2 0x23D7 JUMP JUMPDEST DUP3 PUSH2 0x1125 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x1132 SWAP1 DUP4 DUP4 GT ISZERO PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x113B SWAP2 PUSH2 0x23D7 JUMP JUMPDEST SWAP6 PUSH1 0x1B SLOAD SWAP1 PUSH2 0x1149 SWAP2 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1B SSTORE PUSH1 0x1C SLOAD SWAP1 PUSH2 0x1159 SWAP2 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1C SSTORE PUSH1 0x1D SLOAD SWAP1 PUSH2 0x1169 SWAP2 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1D SSTORE PUSH1 0xE SWAP2 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x38 PUSH32 0x416D6F756E742063616E2774206578636565647320746865206D617820747261 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E73616374696F6E20776974686472617720616D6F756E740000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1C PUSH32 0x55736572206861732070656E64696E67205769746864726177616C7300000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x19 PUSH32 0x546865206665652063616E6E6F74206578636565642037352500000000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP3 SWAP2 PUSH1 0x1B PUSH32 0x5465616D2063616E2774206D616B65207769746864726177616C730000000000 SWAP3 DUP9 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x536B796C65722063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x48656973656E2063616E2774206D616B65207769746864726177616C73000000 DUP6 PUSH1 0x1D DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH32 0x4261636B656E642063616E2774206D616B65207769746864726177616C730000 DUP6 PUSH1 0x1E DUP7 DUP13 DUP15 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH32 0x4F776E6572732063616E2774206D616B65207769746864726177616C73000000 DUP7 PUSH1 0x1D DUP8 DUP14 DUP16 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP3 SWAP2 PUSH1 0x22 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206261636B65 SWAP3 PUSH1 0x20 DUP11 MLOAD SWAP6 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP8 MSTORE DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x6E64000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x18 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x14 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x14A9 PUSH2 0x212A JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x16 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1D SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI CALLER DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xF DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1700 JUMPI DUP2 LT PUSH2 0x16BB JUMPI TIMESTAMP GT PUSH2 0x1716 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x10 DUP3 MSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1700 JUMPI DUP2 LT PUSH2 0x16BB JUMPI CALLER DUP5 MSTORE PUSH1 0x10 DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP4 DUP4 KECCAK256 SLOAD PUSH1 0x12 SLOAD LT PUSH2 0x1651 JUMPI PUSH1 0x11 SLOAD CALLVALUE LT PUSH2 0x15C1 JUMPI POP PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP2 SWAP3 CALLER DUP5 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x15AD DUP3 CALLER ADDRESS PUSH2 0x2836 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP2 DUP2 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0xA4 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E742073656E74206973206E6F7420657175616C20746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686520424E4220616D6F756E7420726571756972656420666F722077697468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74206D616B65206D6F7265207468616E206F6E65207769 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746864726177616C207065722064617900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0xF DUP3 MSTORE TIMESTAMP DUP5 DUP5 KECCAK256 SSTORE PUSH1 0x10 DUP3 MSTORE DUP3 DUP5 DUP2 KECCAK256 SSTORE PUSH2 0x1535 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0xA48 PUSH1 0x20 SWAP3 PUSH2 0xB24 PUSH2 0x1753 PUSH2 0x212A JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x2A78 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1B SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x17ED PUSH2 0x212A JUMP JUMPDEST PUSH2 0x17F5 PUSH2 0x2145 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x1830 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0xA48 DUP8 DUP8 DUP8 PUSH2 0x275F JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1866 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x185B PUSH2 0x1854 PUSH1 0x20 SWAP8 SWAP7 PUSH2 0xA48 SWAP7 PUSH2 0xB1F PUSH2 0xB16 PUSH2 0x2A8D JUMP JUMPDEST CALLER DUP4 PUSH2 0x293E JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x7F7 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F3 JUMPI DUP1 CALLDATALOAD PUSH2 0x1937 PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x1940 DUP2 PUSH2 0x208D JUMP JUMPDEST POP PUSH1 0xFF SWAP2 PUSH2 0x1958 DUP4 PUSH1 0xA0 PUSH1 0x2 EXP DUP1 SWAP5 SLOAD DIV AND ISZERO PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP8 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C8A JUMPI POP LT PUSH2 0x1C1F JUMPI SWAP1 PUSH2 0x1977 PUSH1 0x7 SWAP3 PUSH2 0x208D JUMP JUMPDEST POP SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 NOT DUP3 SLOAD AND OR DUP1 DUP3 SSTORE DUP6 DUP5 DUP1 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND PUSH2 0x1BC5 JUMPI JUMPDEST SWAP2 POP POP PUSH24 0x10000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B89 JUMPI JUMPDEST DUP3 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP3 SLOAD DIV AND PUSH2 0x1B53 JUMPI JUMPDEST DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1AF4 JUMPI JUMPDEST ADD DUP1 SLOAD SWAP2 DUP3 AND PUSH2 0x1A1C JUMPI DUP6 DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH2 0x100 DUP1 SWAP5 DIV AND SWAP1 DUP2 ISZERO PUSH2 0x1A89 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP7 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 SLOAD DIV AND DUP4 MSTORE DUP1 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 DUP7 DUP9 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xAC9D517045A5EC57DA9F145E5C349535857BAA98B41FA00AEA81886B40B65EE9 PUSH1 0x80 PUSH1 0x3 DUP4 ADD SLOAD DUP7 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD SWAP2 DUP4 PUSH1 0x17 SSTORE DUP1 PUSH1 0x18 SSTORE DUP2 PUSH1 0x19 SSTORE DUP3 PUSH1 0x1A SSTORE DUP12 MLOAD SWAP4 DUP5 MSTORE DUP11 DUP5 ADD MSTORE DUP11 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 PUSH2 0x1A0E JUMP JUMPDEST PUSH32 0x7752C7A6D518AB1CF03B50E7D7FD3DA3258EB319DC343789E0A7BED06C43066C DUP6 PUSH1 0x1 DUP4 ADD SLOAD DUP1 PUSH1 0x11 SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1BBC ADDRESS BALANCE PUSH2 0x1B99 PUSH1 0x1E SLOAD PUSH2 0x24CC JUMP JUMPDEST ADDRESS DUP10 MSTORE DUP9 DUP8 MSTORE PUSH1 0x64 PUSH2 0x1BAD DUP10 DUP12 KECCAK256 SLOAD PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x1BB5 PUSH2 0x2C17 JUMP JUMPDEST POP DIV PUSH2 0x2274 JUMP JUMPDEST DUP7 PUSH1 0x1E SSTORE PUSH2 0x19DE JUMP JUMPDEST PUSH23 0x100000000000000000000000000000000000000000000 PUSH32 0x1B48326D6E9158A921C6006B9D6AD4B9D777C488E9B7924B3E0C8B0B1304604 SWAP4 DIV AND ISZERO ISZERO PUSH1 0xFF NOT PUSH1 0xD SLOAD AND DUP7 DUP3 AND OR PUSH1 0xD SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP8 DUP6 DUP5 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x84 DUP5 DUP7 DUP9 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A20617070726F76616C7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6973206C657373207468616E2072657175697265640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP11 MSTORE PUSH1 0x6 DUP9 MSTORE DUP9 DUP11 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SLOAD AND DUP12 MSTORE DUP9 MSTORE DUP6 DUP10 DUP12 KECCAK256 SLOAD AND PUSH2 0x1CF7 JUMPI JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CE1 JUMPI PUSH1 0x1 ADD PUSH2 0x195E JUMP JUMPDEST PUSH1 0x24 DUP11 PUSH1 0x11 DUP10 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1CE1 JUMPI SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x15 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA48 PUSH2 0x1D51 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x293E JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x7F7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E48 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x1E32 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1E11 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DB8 JUMPI JUMPDEST PUSH2 0xD3E DUP7 DUP7 PUSH2 0xD34 DUP3 DUP12 SUB DUP4 PUSH2 0x2252 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x1DFE JUMPI POP POP POP DUP3 PUSH2 0xD3E SWAP5 PUSH2 0xD34 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x1DA7 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0xD34 DUP3 PUSH2 0xD3E DUP7 PUSH2 0x1DA7 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1D87 JUMP JUMPDEST DUP5 DUP5 SWAP3 CALLVALUE PUSH2 0x7F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F3 JUMPI CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH2 0x1C0 SWAP6 MSTORE MUL DUP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF SWAP1 DUP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SLOAD AND SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SLOAD SWAP5 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP4 ADD SLOAD SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 DUP5 ADD SLOAD SWAP3 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB7 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP9 DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP13 DUP14 DUP4 AND DUP3 MSTORE DUP5 PUSH1 0xA0 PUSH1 0x2 EXP DUP5 DIV AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x20C8 JUMPI PUSH1 0x8 SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2116 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x2140 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x2140 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2162 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C652069736E277420656E61626C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x21B0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420616E206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2204 JUMPI JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2239 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2239 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 PUSH1 0xB SLOAD AND SWAP2 PUSH2 0x229C PUSH1 0x0 SWAP4 ADDRESS DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 ADDRESS PUSH2 0x293E JUMP JUMPDEST PUSH1 0xB SLOAD AND SWAP1 PUSH2 0x12C TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x23C0 JUMPI TIMESTAMP DUP2 LT PUSH2 0x2379 JUMPI PUSH1 0xC4 PUSH1 0x60 SWAP3 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE ADDRESS PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE DUP9 PUSH1 0x44 DUP6 ADD MSTORE DUP9 PUSH1 0x64 DUP6 ADD MSTORE ADDRESS PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x236E JUMPI PUSH2 0x2343 JUMPI JUMPDEST POP POP PUSH1 0x20 PUSH32 0xFDB748C915E4E67B4BB23287BF4295A4595CE48B50343214369F72CCFB974CFA SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x2367 JUMPI JUMPDEST PUSH2 0x2359 DUP2 DUP4 PUSH2 0x2252 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7E0 JUMPI DUP1 PUSH2 0x2314 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x234F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2204 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x23EB JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6573206E6F7420657869737400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x245F JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617320616C726561647920657865637574656400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x60 DUP5 ADD DUP3 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x2239 JUMPI DUP4 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP1 DUP5 CALLDATASIZE DUP4 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x20C8 JUMPI ADDRESS DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 PUSH1 0xB SLOAD AND SWAP2 DUP7 MLOAD SWAP3 PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP2 DUP5 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x266C JUMPI PUSH1 0x0 SWAP5 PUSH2 0x2632 JUMPI JUMPDEST POP DUP9 MLOAD SWAP4 PUSH1 0x1 SWAP5 DUP6 LT ISZERO PUSH2 0x20C8 JUMPI PUSH2 0x2570 SWAP2 DUP8 DUP6 SWAP3 AND DUP11 DUP13 ADD MSTORE ADDRESS PUSH2 0x293E JUMP JUMPDEST DUP5 PUSH1 0xB SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x2140 JUMPI SWAP2 DUP8 SWAP9 SWAP5 SWAP4 SWAP2 SWAP9 MLOAD SWAP9 DUP10 SWAP6 PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0xA4 DUP8 ADD SWAP3 PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xC4 DUP7 ADD SWAP5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2618 JUMPI POP POP POP POP POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 DUP2 SWAP6 ADDRESS PUSH1 0x64 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x260D JUMPI PUSH2 0x2604 JUMPI POP POP POP JUMP JUMPDEST DUP3 GT PUSH2 0x2239 JUMPI MSTORE JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP12 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x25D1 JUMP JUMPDEST DUP3 DUP2 DUP2 SWAP7 SWAP4 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x2665 JUMPI JUMPDEST PUSH2 0x264A DUP2 DUP4 PUSH2 0x2252 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24C JUMPI MLOAD SWAP1 DUP7 DUP3 AND DUP3 SUB PUSH2 0x7E0 JUMPI POP SWAP3 CODESIZE PUSH2 0x2550 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2640 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x267E JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26F2 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x27BA SWAP3 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND SWAP1 PUSH2 0x277C DUP3 ISZERO ISZERO PUSH2 0x2677 JUMP JUMPDEST DUP4 AND SWAP1 PUSH2 0x278A DUP3 ISZERO ISZERO PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x2825 JUMPI JUMPDEST POP ISZERO SWAP1 DUP2 PUSH2 0x280F JUMPI JUMPDEST POP PUSH2 0x27BC JUMPI JUMPDEST POP PUSH2 0x2836 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x64 PUSH2 0x27CD PUSH1 0x1A SLOAD DUP8 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x27D5 PUSH2 0x2C17 JUMP JUMPDEST POP DIV PUSH1 0x1E SLOAD PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH2 0x2806 ADDRESS BALANCE PUSH2 0x27F0 DUP7 PUSH2 0x24CC JUMP JUMPDEST ADDRESS DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x64 PUSH2 0x1BAD PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x1E SSTORE CODESIZE PUSH2 0x27B4 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x27AE JUMP JUMPDEST DUP4 MSTORE POP PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 PUSH2 0x284D DUP4 ISZERO ISZERO PUSH2 0x2677 JUMP JUMPDEST AND SWAP2 PUSH2 0x285A DUP4 ISZERO ISZERO PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x28D2 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0x28A7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 PUSH1 0x20 SWAP6 PUSH2 0xB1F PUSH2 0xB16 PUSH2 0x2A8D JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x28C2 DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0x2A78 JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP4 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2A0C JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x299F JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2A83 SWAP1 DUP3 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2379 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A9A DUP3 PUSH2 0x221D JUMP JUMPDEST PUSH1 0x1E DUP3 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2ACE JUMPI POP JUMP JUMPDEST PUSH2 0x2AED SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x20E1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2AFB JUMPI DIV SWAP1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0x1E DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x1E SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 PUSH1 0x1E SWAP2 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST SUB PUSH2 0x2B3D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 PUSH1 0x64 SWAP2 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 PUSH1 0xA SWAP2 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2C10 JUMPI DUP1 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP3 SUB PUSH2 0x2204 JUMPI PUSH2 0x2B35 SWAP1 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2C24 DUP3 PUSH2 0x221D JUMP JUMPDEST PUSH1 0x1A DUP3 MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xB8 DUP4 0x4C 0xF6 0xC8 0xAB 0xCC CALLCODE 0xF9 JUMP 0xD5 0x2F JUMPI STOP PUSH2 0xBDE8 PUSH22 0xECD8B76473E9413892BFA8345264736F6C6343000811 STOP CALLER ",
							"sourceMap": "348:15395:0:-:0;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;4834:9;4830:83;;348:15395;4830:83;348:15395;4834:9;348:15395;;4869:32;348:15395;736:10:9;4869:32:0;;4830:83;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;;;-1:-1:-1;;;;;348:15395:0;;:::i;:::-;;;;10999:20;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;348:15395:0;;;;;4255:11:2;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;736:10:9;1781:66:1;736:10:9;;348:15395:0;;1789:7:1;348:15395:0;;;;;1781:66:1;:::i;:::-;12454:161:0;;348:15395;12625:241;;348:15395;12876:142;;348:15395;;;;;;;;;;;;;;;;;;;;;736:10:9;348:15395:0;;;13043:609;;348:15395;;;13043:609;;348:15395;;;;13043:609;;348:15395;;;;13043:609;;348:15395;;;;13043:609;;348:15395;;;;13043:609;;348:15395;;;;;;13043:609;;348:15395;;;;13043:609;;348:15395;;;;;;13043:609;;348:15395;;;;;;13043:609;;348:15395;;;;;;13043:609;;348:15395;;;;;13043:609;;348:15395;;;13043:609;;;348:15395;;;13028:9;348:15395;;;;;;;;;;;;13028:9;348:15395;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;348:15395:0;;;;;;-1:-1:-1;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;13028:9;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13028:9;348:15395;;;;;;;;;;;13669:36;;;;;;348:15395;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;12876:142;12921:29;12876:142;348:15395;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;12625:241;1789:7:1;12686:70:0;348:15395;;12686:51;348:15395;;12686:37;348:15395;;;;12686:37;:::i;:::-;:51;:::i;:70::-;12779:19;348:15395;12625:241;348:15395;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;12454:161;12522:16;12505:13;348:15395;12505:33;348:15395;12454:161;348:15395;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;-1:-1:-1;;348:15395:0;;;;5415:30;736:10:9;5389:9:0;348:15395;736:10:9;;348:15395:0;;1789:7:1;348:15395:0;;1781:66:1;348:15395:0;;;;;;1781:66:1;:::i;:::-;5270:21:0;348:15395;5262:55;348:15395;;;;;5262:55;:::i;:::-;-1:-1:-1;;348:15395:0;5270:21;348:15395;5389:9;;348:15395;5389:9;:::i;:::-;348:15395;5389:9;348:15395;;5415:30;348:15395;;;;;;;;;;;;;;;;;736:10:9;348:15395:0;;1789:7:1;348:15395:0;;1781:66:1;348:15395:0;;;;;;1781:66:1;:::i;:::-;-1:-1:-1;;;;;348:15395:0;5512:64;348:15395;5543:16;348:15395;;5561:14;348:15395;5536:4;;5512:64;:::i;:::-;5587;348:15395;5618:16;348:15395;;5636:14;348:15395;5536:4;;5587:64;:::i;:::-;5662:54;348:15395;5693:11;348:15395;;5706:9;348:15395;5536:4;;5662:54;:::i;:::-;348:15395;;;;5744:43;:31;5561:14;348:15395;5636:14;348:15395;5744:31;;:::i;:::-;5706:9;348:15395;5744:43;;:::i;:::-;348:15395;;5561:14;348:15395;;5636:14;348:15395;;5706:9;348:15395;5543:16;348:15395;;5536:4;5925:21;5896:55;;;348:15395;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;:::i;:::-;;;;;;;;;;;;;;6013:19;348:15395;;;;;;;6013:19;348:15395;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;599:32;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;;2222:29;348:15395;;;;;;;;;;;;;;;;;;;;;;;4039:6:2;348:15395:0;;:::i;:::-;;;736:10:9;;4039:6:2;:::i;:::-;348:15395:0;;;;;;;;;;;;;;;;5054:32;5136:9;348:15395;4971:46;348:15395;4979:12;348:15395;;4971:46;:::i;:::-;5072:4;348:15395;;;;;;;;5054:32;:::i;:::-;348:15395;;:::i;:::-;;5091:3;5136:9;348:15395;;5136:9;:::i;:::-;5162:8;;;;348:15395;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;736:10:9;;348:15395:0;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;7059:35:2;;;;348:15395:0;;;;7189:37:2;348:15395:0;1548:5:8;348:15395:0;;1496:29:8;348:15395:0;;:::i;:::-;1504:6:8;;;;1496:29;:::i;:::-;1548:5;:::i;:::-;736:10:9;;7189:37:2;:::i;348:15395:0:-;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:36;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;736:10:9;;348:15395:0;;1789:7:1;348:15395:0;;1781:66:1;348:15395:0;;;;;;1781:66:1;:::i;:::-;1074:88:10;1096:9;348:15395:0;1082:30:10;;1074:88;:::i;:::-;348:15395:0;;;1257:16:10;348:15395:0;;;;;736:10:9;348:15395:0;;;;;;;;;;;;1458:22:10;1449:96;348:15395:0;-1:-1:-1;;;1458:22:10;;;:::i;:::-;348:15395:0;;;;1457:32:10;1449:96;:::i;:::-;348:15395:0;;;1257:16:10;348:15395:0;;;;;736:10:9;;348:15395:0;;;;;;;;;;;;;;736:10:9;13959:42:0;;;;348:15395;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;-1:-1:-1;;;;348:15395:0;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2258:34;348:15395;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1367:6:1;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;736:10:9;;348:15395:0;;1789:7:1;348:15395:0;;1781:66:1;348:15395:0;;;;;;1781:66:1;:::i;:::-;1074:88:10;1096:9;348:15395:0;1082:30:10;;1074:88;:::i;:::-;1449:96;348:15395:0;-1:-1:-1;;;1458:22:10;;;:::i;1449:96::-;348:15395:0;;;15519:16;348:15395;;;;;736:10:9;348:15395:0;;;;;;;;;;;;;;;;;15519:16;348:15395;;;;;736:10:9;;348:15395:0;;;;;;;;;;;;736:10:9;15691:41:0;;;;348:15395;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;1642:8:1;348:15395:0;;736:10:9;;2000:25:1;;348:15395:0;;2075:1:1;;348:15395:0;;;;;;;;2237:7:1;348:15395:0;;;;;;;;;;9200:15;;348:15395;;;9275:16;348:15395;;9269:22;;348:15395;;;9350:16;348:15395;;9344:22;;348:15395;;9425:11;348:15395;;9419:17;;348:15395;;9494:2;9487:9;;348:15395;;;;;9545:20;348:15395;;;;;;;;9636:29;348:15395;9626:39;;348:15395;;9759:15;;;;9779:3;9759:15;;;:::i;:::-;348:15395;;:::i;:::-;;;;9815:17;348:15395;;9835:15;348:15395;9815:35;;;;:::i;:::-;348:15395;9815:48;9853:10;348:15395;9815:48;;;:::i;:::-;9878:15;;;;348:15395;;;;;9927:29;9545:20;348:15395;;;9927:14;348:15395;9927:29;:::i;:::-;:14;348:15395;9874:972;348:15395;;;;;;;;9874:972;10031:26;;;;;;;;;;;:::i;:::-;348:15395;;;:::i;:::-;;3573:5:8;;;:::i;:::-;10121:24:0;;;;:::i;:::-;348:15395;;;:::i;:::-;;3573:5:8;;;:::i;:::-;10204:19:0;;;;:::i;:::-;348:15395;;;:::i;:::-;;3573:5:8;;;:::i;:::-;10282:37:0;;;;;:::i;:::-;348:15395;;:::i;:::-;;9779:3;348:15395;;10369:37;;;;;:::i;:::-;348:15395;;:::i;:::-;;9779:3;348:15395;;10451:32;;;;:::i;:::-;348:15395;;:::i;:::-;;9779:3;348:15395;;;;;;:::i;:::-;1496:29:8;;1504:6;;;;1496:29;:::i;:::-;1548:5;;;:::i;:::-;348:15395:0;;;:::i;:::-;1496:29:8;;1504:6;;;;1496:29;:::i;:::-;1548:5;;;:::i;:::-;348:15395:0;;;:::i;:::-;1496:29:8;;1504:6;;;;1496:29;:::i;:::-;1548:5;;;:::i;:::-;348:15395:0;10678:14;348:15395;10678:37;;;;:::i;:::-;:14;348:15395;10747:14;348:15395;10747:35;;;;:::i;:::-;:14;348:15395;10809:9;348:15395;10809:25;;;;:::i;:::-;:9;348:15395;9545:20;9874:972;;;348:15395;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:34;348:15395;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1468:93:0;348:15395;;;;;;;;;;;;;;;;;;;;;;;;888:39;348:15395;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;;;-1:-1:-1;;;;;348:15395:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1668:88:0;348:15395;;;;;;;;;;;;;;;;;;;;;;;;2522:28;348:15395;;;;;;;;;;;;;;;;;;736:10:9;348:15395:0;;;;11155:22;348:15395;;;;;;11191:5;348:15395;;;;;;;;601:6:8;;348:15395:0;;11137:15;:60;11133:193;;348:15395;736:10:9;348:15395:0;;11371:23;348:15395;;;;;;11408:1;348:15395;;;;;;;;601:6:8;;348:15395:0;;736:10:9;348:15395:0;;11371:23;348:15395;;;;;;;;;;11465:19;348:15395;-1:-1:-1;348:15395:0;;11684:13;348:15395;11670:9;:28;348:15395;;736:10:9;11961:16:0;736:10:9;;;348:15395:0;;11799:20;348:15395;;;;;;736:10:9;11889:6:0;736:10:9;;11868:4:0;11889:6;:::i;:::-;736:10:9;348:15395:0;;11799:20;348:15395;;;;;;;;;;;11961:16;348:15395;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;11133:193;736:10:9;348:15395:0;;11155:22;348:15395;;11137:15;348:15395;;;;11278:23;348:15395;;;;;;;11133:193;;348:15395;;;;;;;;;;;;;;6264:41:2;348:15395:0;;6264:41:2;348:15395:0;;:::i;:::-;736:10:9;;348:15395:0;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;6264:41:2;:::i;348:15395:0:-;;;;;;;;;;;;;;;;2442:33;348:15395;;;;;;;;;;;;;;;;;;;;;;;;3304:2:2;348:15395:0;;;;;;;;;;;;;;;;;;;2557:33;348:15395;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;736:10:9;348:15395:0;;;;;;;;;11767:37:2;;11763:239;;348:15395:0;;5649:6:2;;;;;;:::i;11763:239::-;11829:26;;;348:15395:0;;;;;;11950:28:2;1548:5:8;348:15395:0;;;5649:6:2;348:15395:0;1496:29:8;348:15395:0;;:::i;1548:5:8:-;736:10:9;11950:28:2;;:::i;:::-;11763:239;;;;;;;;348:15395:0;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:33;348:15395;;;;;;;;;;;;;;;;;;;;;;;3467:12:2;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;425:41:0;348:15395;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:88:10;1096:9;348:15395:0;1082:30:10;;1074:88;:::i;:::-;1458:22;;;:::i;:::-;348:15395:0;;;1449:96:10;348:15395:0;-1:-1:-1;;;348:15395:0;;;;;1457:32:10;1449:96;:::i;:::-;1470:7:1;348:15395:0;14104:17;;14145:27;;;;;;14468:57;;348:15395;;14622:22;;15196:24;14622:22;;:::i;:::-;348:15395;;;;;;;;;;;;;;;;;;14690:99;;14132:166;348:15395;;;;;;;;14799:82;;14132:166;348:15395;;;;;;14891:108;;14132:166;15013:24;;;;348:15395;;15009:173;;14132:166;15196:24;348:15395;;;;;15192:166;;348:15395;;;15192:166;-1:-1:-1;;;;;348:15395:0;;;;;;;2663:24:1;;;348:15395:0;;;;-1:-1:-1;;;;;348:15395:0;15196:24;348:15395;;;15196:24;348:15395;2778:44:1;;;;;348:15395:0;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;15192:166;;;;;348:15395;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;15009:173;8187:84;348:15395;;15070:26;;348:15395;15098:24;;;348:15395;1096:9:10;15124:19:0;;348:15395;14198:16;15145:24;;348:15395;;;8008:38;348:15395;;8057:34;348:15395;;8102:24;348:15395;;8137:34;348:15395;;;;;;;;;;;;;;;;;;8187:84;15009:173;;14891:108;8407:37;14964:22;348:15395;14964:22;;348:15395;;8361:30;348:15395;;;;;;8407:37;14891:108;;14799:82;6979:15;6804:4;6796:21;6845:14;;348:15395;6845:14;:::i;:::-;6804:4;348:15395;;;;;6934:3;6897:32;348:15395;;;;6897:32;:::i;:::-;348:15395;;:::i;:::-;;;6979:15;:::i;:::-;348:15395;6845:14;348:15395;14799:82;;14690:99;348:15395;8570:25;348:15395;;;;;;;8526:28;348:15395;;;;;;8526:28;348:15395;;;;;;8570:25;14690:99;;;;;348:15395;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;14174:3;348:15395;;;14198:16;348:15395;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;14194:93;;14174:3;-1:-1:-1;;348:15395:0;;;;;;14137:6;;348:15395;;;;;-1:-1:-1;;;;;348:15395:0;;;;14194:93;348:15395;;;;;;;;;14194:93;;;348:15395;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1568:93:0;348:15395;;;;;;;;;;;;;;;;;;;;;;;;4774:6:2;348:15395:0;;:::i;:::-;;;736:10:9;;4774:6:2;:::i;348:15395:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;-1:-1:-1;;;348:15395:0;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;348:15395:0;;;;;887:27:10;348:15395:0;887:27:10;;;;;348:15395:0;;887:27:10;348:15395:0;;;;;;;;887:27:10;;;348:15395:0;;;887:27:10;;;;;348:15395:0;;887:27:10;;;;348:15395:0;887:27:10;;;;348:15395:0;887:27:10;;;;348:15395:0;887:27:10;;348:15395:0;887:27:10;;;;348:15395:0;887:27:10;;348:15395:0;;;-1:-1:-1;;;;;348:15395:0;;;;;;;-1:-1:-1;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:9:10;348:15395:0;;;;;;;;1096:9:10;-1:-1:-1;348:15395:0;;;;;-1:-1:-1;348:15395:0;:::o;:::-;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8611:402::-;-1:-1:-1;;;;;348:15395:0;;8713:15;348:15395;;-1:-1:-1;8731:24:0;-1:-1:-1;8698:4:0;;348:15395;;;;;;;;;8698:4;;8731:24;:::i;:::-;8713:15;348:15395;;8935:15;8955:3;8935:15;348:15395;8935:15;;348:15395;;;8935:15;601:6:8;;348:15395:0;;;8767:203;348:15395;;;;8767:203;;;;;348:15395;8767:203;;8698:4;8767:203;;;348:15395;;;;;;;;;;;;;;;8698:4;348:15395;;;;;;;;8767:203;;;;;;;;8611:402;348:15395;;;8986:19;348:15395;;;;;;8986:19;8611:402::o;8767:203::-;;;;;;;;;;;;;;:::i;:::-;;;348:15395;;;;8767:203;;;;;;;;;348:15395;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;7380:475;348:15395;;;;;;;;;;;;;;;;;;;;7484:1;348:15395;;;;;;;;;;;;;;;;7515:4;348:15395;;-1:-1:-1;;;;;348:15395:0;;7541:15;348:15395;;;;;7541:22;348:15395;7541:22;;;;;;;;;;;;;;-1:-1:-1;7541:22:0;;;7380:475;348:15395;;;7536:1;;348:15395;;;;;;7626:11;348:15395;;;;;;;;;7515:4;7626:11;:::i;:::-;348:15395;7541:15;348:15395;;7651:196;;;;;;348:15395;;;;;;;;7651:196;;;348:15395;7651:196;;348:15395;;;7651:196;7541:22;7651:196;;348:15395;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;7515:4;;;;;;;;-1:-1:-1;7515:4:0;;;;348:15395;;;;7821:15;348:15395;;;;7651:196;;;;;;;;;;7380:475;;;:::o;7651:196::-;348:15395;;;;;7380:475::o;7651:196::-;348:15395;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;-1:-1:-1;348:15395:0;;;;;;;;;;;;;;7541:22;;;;;;;;;;;;;;;;;:::i;:::-;;;348:15395;;;;;;;;;;;;;7541:22;;;;;;;;;;;348:15395;;;-1:-1:-1;348:15395:0;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;6048:664;;6697:6;6048:664;;-1:-1:-1;;;;;348:15395:0;;;6180:18;6172:68;6180:18;;;6172:68;:::i;:::-;348:15395;;6259:16;6251:64;6259:16;;;6251:64;:::i;:::-;6196:1;348:15395;;;;6343:19;348:15395;;;;;;;;6343:52;;;;;6048:664;6341:55;;6413:42;;;;6048:664;6409:252;;;6048:664;6697:6;;:::i;:::-;6048:664::o;6409:252::-;6566:35;6530:3;6498:27;6509:15;348:15395;6498:27;;:::i;:::-;348:15395;;:::i;:::-;;;6566:14;348:15395;6566:35;:::i;:::-;:14;348:15395;7321:15;7148:4;7140:21;7189:12;;;:::i;:::-;7148:4;348:15395;;;;;6530:3;7239:32;348:15395;;;;7239:32;:::i;7321:15::-;6566:14;348:15395;6409:252;;;6413:42;348:15395;;-1:-1:-1;6424:25:0;348:15395;;;;;;;;6413:42;;;6343:52;348:15395;;-1:-1:-1;348:15395:0;;;;;;6343:52;;;7736:837:2;-1:-1:-1;;;;;348:15395:0;;;7867:18:2;7859:68;7867:18;;;7859:68;:::i;:::-;348:15395:0;7946:16:2;7938:64;7946:16;;;7938:64;:::i;:::-;7883:1;348:15395:0;;;;;;;;;;;;8122:21:2;;;348:15395:0;;;;;1548:5:8;8489:26:2;348:15395:0;;;1496:29:8;348:15395:0;;:::i;1548:5:8:-;348:15395:0;;;;;;;;;;;;;;8439:25:2;348:15395:0;;;;;8439:25:2;:::i;:::-;348:15395:0;;;;;;;;;;;;;8489:26:2;7736:837::o;348:15395:0:-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;10894:380:2;-1:-1:-1;;;;;348:15395:0;;;11030:19:2;;;348:15395:0;;;11109:21:2;;;348:15395:0;;;11234:32:2;348:15395:0;;11047:1:2;348:15395:0;11182:11:2;348:15395:0;;;11047:1:2;348:15395:0;;11047:1:2;348:15395:0;;;;;11047:1:2;348:15395:0;;;;;;;11234:32:2;10894:380::o;348:15395:0:-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;487:181:8;;577:5;487:181;577:5;;:::i;:::-;601:6;;;348:15395:0;;487:181:8;:::o;348:15395:0:-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;348:15395:0;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;348:15395:0;;;;;;;;1841:471:8;2144:6;;2140:47;;6845:14:0;348:15395;;;;;;6845:14;348:15395;;;2235:5:8;6845:14:0;2235:5:8;;;:::i;:::-;:10;348:15395:0;;1841:471:8;:::o;348:15395:0:-;;;;-1:-1:-1;;;;;348:15395:0;;;;;;;;;;;;;;;;;;;;;;;2140:47:8;2167:8;2149:1;2167:8;:::o;1841:471::-;2144:6;;2140:47;;9779:3:0;348:15395;;;;;;9779:3;348:15395;;;2235:5:8;9779:3:0;2235:5:8;;;:::i;1841:471::-;2144:6;;2140:47;;5083:2:0;348:15395;;;;;;5083:2;348:15395;;;2235:5:8;5083:2:0;2235:5:8;;;:::i;1841:471::-;;2144:6;;2140:47;;348:15395:0;;;;;;;;;;;2235:5:8;;;;:::i;2140:47::-;2167:8;;2149:1;2167:8;:::o;348:15395:0:-;;;;;;;:::i;:::-;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2279600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_poolHeisenDev()": "629",
								"_poolLiquidity()": "585",
								"_poolMarketing()": "541",
								"_poolTeam()": "695",
								"addressHeisenDev()": "858",
								"addressMarketing()": "528",
								"addressTeam()": "792",
								"allowance(address,address)": "1622",
								"approve(address,uint256)": "22430",
								"approveProposal(uint256)": "24099",
								"balanceOf(address)": "1001",
								"buy()": "infinite",
								"decimals()": "401",
								"decreaseAllowance(address,uint256)": "infinite",
								"executeProposal(uint256)": "infinite",
								"firstLiquidity(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "23172",
								"name()": "infinite",
								"owner()": "946",
								"proposals(uint256)": "2615",
								"revokeProposal(uint256)": "24008",
								"salesEnabled()": "1081",
								"submitProposal(bool,bool,bool,bool,uint256,bool,uint256,uint256,uint256,uint256,bool,address)": "infinite",
								"symbol()": "infinite",
								"taxFeeHeisenverse()": "959",
								"taxFeeLiquidity()": "893",
								"taxFeeMarketing()": "805",
								"taxFeeTeam()": "1047",
								"teamPayment()": "infinite",
								"totalSupply()": "519",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"uniswapV2Router()": "572",
								"withdraw()": "infinite",
								"withdrawAllowance(address)": "1437",
								"withdrawAuthorization(address,uint256,uint256)": "infinite",
								"withdrawPrice()": "761"
							},
							"internal": {
								"_getApprovalCount(uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"addLiquidity(uint256,uint256)": "infinite",
								"isUnderDailyWithdrawalLimit(address)": "infinite",
								"swapAndAddLiquidity()": "infinite",
								"swapAndAddLiquidityTokens(uint256)": "infinite",
								"swapTokensForEth(uint256)": "infinite",
								"updateSalesStatus(bool)": "infinite",
								"updateTaxesFees(uint256,uint256,uint256,uint256)": "infinite",
								"updateWithdrawOptions(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "5377697368466973680000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "5346480000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP5",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9C064737B570A74C2BAC5D21056D93AC53115214216CD14D4A0FC9B60BE81231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 569,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 569,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 626,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 626,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "11C37937E08000"
								},
								{
									"begin": 916,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1028,
									"end": 1041,
									"name": "PUSH",
									"source": 0,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 1028,
									"end": 1041,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1560,
									"name": "PUSH",
									"source": 0,
									"value": "EDA73409D4BBD147F4E1295A73A2CA243A529338"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1510,
									"end": 1561,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1510,
									"end": 1561,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 1660,
									"name": "PUSH",
									"source": 0,
									"value": "3C1CD83D8850803C9C42FF5083F56B66B00FBD61"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1610,
									"end": 1661,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1610,
									"end": 1661,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1713,
									"end": 1755,
									"name": "PUSH",
									"source": 0,
									"value": "63024AC73FE77427F20E8247FA26F470C0D9700B"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1705,
									"end": 1756,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1705,
									"end": 1756,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2173,
									"end": 2174,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2214,
									"end": 2215,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2250,
									"end": 2251,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2474,
									"end": 2475,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2514,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2549,
									"end": 2550,
									"name": "PUSH",
									"source": 0,
									"value": "1D"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2589,
									"end": 2590,
									"name": "PUSH",
									"source": 0,
									"value": "1E"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "C45A015500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3478,
									"end": 3520,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 3478,
									"end": 3520,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 3478,
									"end": 3520,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3478,
									"end": 3520,
									"name": "PUSH",
									"source": 0,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "AD5C464800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "28"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "C9C6539600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP12",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "32"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3676,
									"end": 3710,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3723,
									"end": 3748,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1510,
									"end": 1561,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1610,
									"end": 1661,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1705,
									"end": 1756,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4387,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 4380,
									"end": 4387,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4351,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 4351,
									"end": 4358,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4351,
									"end": 4358,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4351,
									"end": 4358,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4322,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4322,
									"end": 4329,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4322,
									"end": 4329,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 4322,
									"end": 4329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4351,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4351,
									"end": 4358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4387,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 4380,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2663,
									"end": 2687,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2663,
									"end": 2687,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2741,
									"end": 2762,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2741,
									"end": 2762,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2822,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 569,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8944,
									"end": 8965,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9326,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 9091,
									"end": 9115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9091,
									"end": 9115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 9273,
									"end": 9303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 9273,
									"end": 9303,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9326,
									"end": 9363,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 9326,
									"end": 9363,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "6464726573730000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4351,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4387,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 4322,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP14",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP12",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP13",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP14",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3557,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3639,
									"end": 3662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 3639,
									"end": 3662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3575,
									"end": 3601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP16",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 3575,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP15",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "7F"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 3272,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2942,
									"end": 3272,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3007,
									"end": 3029,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3007,
									"end": 3029,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 3028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3095,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3095,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "10000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9C064737B570A74C2BAC5D21056D93AC53115214216CD14D4A0FC9B60BE81231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3222,
									"end": 3264,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 3272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4F776E61626C653A204F776E6572206973206E6F7420756E6971756500000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4F776E61626C653A204F776E657220697320746865207A65726F206164647265"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "7373000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 487,
									"end": 668,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 487,
									"end": 668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 487,
									"end": 668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 601,
									"end": 607,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 601,
									"end": 607,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 487,
									"end": 668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 487,
									"end": 668,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "84"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "tag",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 15743,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208eb8834cf6c8abccf2f956d52f570061bde875ecd8b76473e9413892bfa8345264736f6c63430008110033",
									".code": [
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4843,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4830,
											"end": 4913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4913,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4830,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4843,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4869,
											"end": 4901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4901,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4913,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "ABDC640"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "D61B519"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1694505E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1B45A47A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "2A9AF7BA"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "39262773"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "553000C1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "562E9DF9"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7918447E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7A594A2B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7D81936C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "8198C341"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "85A6A091"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "933F5E07"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "98951B56"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "9E5CD74A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A6F2AE3A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "B6BBA0AE"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C84AD9A5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "D7196DD9"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "D8A0F828"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "DCE165A6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FE7441E7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11019,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4266,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12454,
											"end": 12615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12625,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12625,
											"end": 12866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12876,
											"end": 13018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF00000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "PUSH",
											"source": 0,
											"value": "96AA03A7CD4ABA017B05CE697DF0E528A91D045A01285C50E931B0C0C4939CE"
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 13018,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12876,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12921,
											"end": 12950,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A206E6577206F776E657220"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "697320746865207A65726F206164647265737300000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12625,
											"end": 12866,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12625,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 12686,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12686,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12723,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12686,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12686,
											"end": 12737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12756,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12686,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12779,
											"end": 12798,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12625,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A204D757374206B65657020"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6665657320617420313025206F72206C65737300000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12454,
											"end": 12615,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12454,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12522,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "11C37937E08000"
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12505,
											"end": 12538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12454,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A204D757374206B65657020"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3530303030303030303030303030303020576569206F72206C65737300000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5445,
											"name": "PUSH",
											"source": 0,
											"value": "C5D4FBADDD2087D369F5CF16AD7544F41EF0DC291B510E4CB1CB6E6EAAE74539"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5262,
											"end": 5317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5389,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5445,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5512,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5512,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5512,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5512,
											"end": 5576,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5512,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5634,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5650,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5587,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5651,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5587,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5693,
											"end": 5704,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5662,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5716,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5662,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5744,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5650,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5744,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5775,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5744,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5744,
											"end": 5787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5787,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5744,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5650,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5951,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5951,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6032,
											"name": "PUSH",
											"source": 0,
											"value": "21A3A3648D0B2AFC084ACD733D71600B506FA4ECA7EF1F5E24718C5E17F4E7FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6032,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4661696C656420746F2073656E6420424E420000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 599,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2222,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4039,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4979,
											"end": 4991,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4971,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 5017,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4971,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 5076,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5054,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5136,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5170,
											"name": "PUSH",
											"source": 0,
											"value": "6CD8C20496FA31DBA3F83C7ADCA278C356A6CAA5529741A5D2B9B774613C198B"
										},
										{
											"begin": 5162,
											"end": 5170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5170,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2138,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1074,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1449,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13959,
											"end": 14001,
											"name": "PUSH",
											"source": 0,
											"value": "12C8D6025943157CBCB4E904B3E3D97D2AC7EAE9F61F343B2E7CB23BE24BDBB7"
										},
										{
											"begin": 13959,
											"end": 14001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13959,
											"end": 14001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13959,
											"end": 14001,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2061"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6C72656164792077617320617070726F766564206279206F776E657200000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1781,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1781,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1074,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15519,
											"end": 15535,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15519,
											"end": 15535,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 15691,
											"end": 15732,
											"name": "PUSH",
											"source": 0,
											"value": "B8B1CBDD07C030BED9E01F4EE5465E3A3FD2AA8F7135C84467C0F3CF203925EB"
										},
										{
											"begin": 15691,
											"end": 15732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15691,
											"end": 15732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15691,
											"end": 15732,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2050726F706F73616C2069"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "73206E6F7420617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9215,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9215,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9291,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9291,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9291,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9344,
											"end": 9366,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9344,
											"end": 9366,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9425,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9436,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 0,
											"value": "4B"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9565,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9636,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9626,
											"end": 9665,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9626,
											"end": 9665,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9759,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9832,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9835,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9815,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9815,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9815,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 9853,
											"end": 9863,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9863,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9815,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9863,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 9815,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9927,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 9545,
											"end": 9565,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9927,
											"end": 9941,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9927,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9927,
											"end": 9956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9927,
											"end": 9956,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 9927,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9927,
											"end": 9941,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10031,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 10031,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10121,
											"end": 10145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10204,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10282,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 10282,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10369,
											"end": 10406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 10369,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10451,
											"end": 10483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1496,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1548,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10678,
											"end": 10715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10678,
											"end": 10715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10715,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10678,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10747,
											"end": 10782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10818,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10809,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10818,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9565,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9874,
											"end": 10846,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "416D6F756E742063616E2774206578636565647320746865206D617820747261"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6E73616374696F6E20776974686472617720616D6F756E740000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "55736572206861732070656E64696E67205769746864726177616C7300000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "546865206665652063616E6E6F74206578636565642037352500000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "5465616D2063616E2774206D616B65207769746864726177616C730000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "536B796C65722063616E2774206D616B65207769746864726177616C73000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "48656973656E2063616E2774206D616B65207769746864726177616C73000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4261636B656E642063616E2774206D616B65207769746864726177616C730000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E6572732063616E2774206D616B65207769746864726177616C73000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206261636B65"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6E64000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2215,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1561,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1668,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11177,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11191,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11152,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11197,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 11133,
											"end": 11326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11371,
											"end": 11394,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11371,
											"end": 11394,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11465,
											"end": 11484,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11684,
											"end": 11697,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11670,
											"end": 11679,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11670,
											"end": 11698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 11977,
											"name": "PUSH",
											"source": 0,
											"value": "5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11868,
											"end": 11872,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11889,
											"end": 11895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 11977,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "54686520616D6F756E742073656E74206973206E6F7420657175616C20746F20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "74686520424E4220616D6F756E7420726571756972656420666F722077697468"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6472617700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "596F752063616E6E6F74206D616B65206D6F7265207468616E206F6E65207769"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "746864726177616C207065722064617900000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11326,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 11133,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11177,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11152,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11301,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 11133,
											"end": 11326,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6264,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5649,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11950,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1074,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1074,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1449,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1449,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14121,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 14145,
											"end": 14172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14468,
											"end": 14525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14468,
											"end": 14525,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14622,
											"end": 14644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14622,
											"end": 14644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 15196,
											"end": 15220,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14622,
											"end": 14644,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14622,
											"end": 14644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14622,
											"end": 14644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14622,
											"end": 14644,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 14622,
											"end": 14644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14799,
											"end": 14881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 14799,
											"end": 14881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14891,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 14891,
											"end": 14999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15037,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15013,
											"end": 15037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 15009,
											"end": 15182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 14132,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15220,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15220,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2822,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15182,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 15009,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8271,
											"name": "PUSH",
											"source": 0,
											"value": "AC9D517045A5EC57DA9F145E5C349535857BAA98B41FA00AEA81886B40B65EE9"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15070,
											"end": 15096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15070,
											"end": 15096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15122,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15124,
											"end": 15143,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15145,
											"end": 15169,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15145,
											"end": 15169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8091,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8126,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8171,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8271,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 15009,
											"end": 15182,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14891,
											"end": 14999,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 14891,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8407,
											"end": 8444,
											"name": "PUSH",
											"source": 0,
											"value": "7752C7A6D518AB1CF03B50E7D7FD3DA3258EB319DC343789E0A7BED06C43066C"
										},
										{
											"begin": 14964,
											"end": 14986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14964,
											"end": 14986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 14986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8407,
											"end": 8444,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 14891,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 14891,
											"end": 14999,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14799,
											"end": 14881,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 14799,
											"end": 14881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 6804,
											"end": 6808,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6796,
											"end": 6817,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6845,
											"end": 6859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6808,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6897,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6979,
											"end": 6994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6994,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 6979,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14799,
											"end": 14881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 14799,
											"end": 14881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 8570,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "1B48326D6E9158A921C6006B9D6AD4B9D777C488E9B7924B3E0C8B0B1304604"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8595,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 14690,
											"end": 14789,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A20617070726F76616C7320"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6973206C657373207468616E2072657175697265640000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 14137,
											"end": 14143,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 14194,
											"end": 14287,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1661,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4774,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB7"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "50726573616C652069736E277420656E61626C65640000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420616E206F776E657200"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8611,
											"end": 9013,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8611,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8728,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8731,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8731,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8755,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 8731,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8728,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8958,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 8935,
											"end": 8950,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8950,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8950,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "F305D71900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8611,
											"end": 9013,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 8611,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FDB748C915E4E67B4BB23287BF4295A4595CE48B50343214369F72CCFB974CFA"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9005,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 8611,
											"end": 9013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8767,
											"end": 8970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 8767,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "2D"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2064"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6F6573206E6F7420657869737400000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4D756C74695369676E617475726557616C6C65743A2070726F706F73616C2077"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "617320616C726561647920657865637574656400000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C464800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7537,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "791AC94700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7836,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 7651,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7541,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6172,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6240,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 6172,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6251,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6315,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 6251,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6362,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 6048,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6697,
											"end": 6703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6498,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 6509,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6525,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6498,
											"end": 6525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6525,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 6498,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6566,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6601,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 6566,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7161,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 7189,
											"end": 7201,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7189,
											"end": 7201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7201,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 7189,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7239,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7239,
											"end": 7271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 6409,
											"end": 6661,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6424,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 6413,
											"end": 6455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 6343,
											"end": 6395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "571"
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 7859,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "tag",
											"source": 2,
											"value": "571"
										},
										{
											"begin": 7859,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "572"
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 7938,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "tag",
											"source": 2,
											"value": "572"
										},
										{
											"begin": 7938,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "578"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 8439,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "tag",
											"source": 2,
											"value": "578"
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10894,
											"end": 11274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 487,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 577,
											"end": 582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 577,
											"end": 582,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 577,
											"end": 582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2235,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 2140,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								},
								"9C064737B570A74C2BAC5D21056D93AC53115214216CD14D4A0FC9B60BE81231": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_poolHeisenDev()": "39262773",
							"_poolLiquidity()": "2a9af7ba",
							"_poolMarketing()": "1b45a47a",
							"_poolTeam()": "553000c1",
							"addressHeisenDev()": "7a594a2b",
							"addressMarketing()": "0abdc640",
							"addressTeam()": "562e9df9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveProposal(uint256)": "98951b56",
							"balanceOf(address)": "70a08231",
							"buy()": "a6f2ae3a",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"executeProposal(uint256)": "0d61b519",
							"firstLiquidity(uint256)": "d8a0f828",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proposals(uint256)": "013cf08b",
							"revokeProposal(uint256)": "85a6a091",
							"salesEnabled()": "c84ad9a5",
							"submitProposal(bool,bool,bool,bool,uint256,bool,uint256,uint256,uint256,uint256,bool,address)": "dce165a6",
							"symbol()": "95d89b41",
							"taxFeeHeisenverse()": "9e5cd74a",
							"taxFeeLiquidity()": "933f5e07",
							"taxFeeMarketing()": "7d81936c",
							"taxFeeTeam()": "b6bba0ae",
							"teamPayment()": "d7196dd9",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"uniswapV2Router()": "1694505e",
							"withdraw()": "3ccfd60b",
							"withdrawAllowance(address)": "fe7441e7",
							"withdrawAuthorization(address,uint256,uint256)": "8198c341",
							"withdrawPrice()": "7918447e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backend\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BuyEgg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnb\",\"type\":\"uint256\"}],\"name\":\"FirstLiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnb\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"SalesState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TeamPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeHeisenverse\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeTeam\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxFeeLiquidity\",\"type\":\"uint256\"}],\"name\":\"UpdateTaxesFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"}],\"name\":\"UpdateWithdrawOptions\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_poolHeisenDev\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressHeisenDev\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressMarketing\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressTeam\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"approveProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"firstLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"revokeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_updateEggSales\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_backendAddress\",\"type\":\"address\"}],\"name\":\"submitProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeHeisenverse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFeeTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"withdrawAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"HeisenDev\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"SwishFish Contract for SwishFish Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_poolHeisenDev()\":{\"notice\":\"Definition of pools `_poolHeisenDev` `_poolMarketing` `_poolTeam` `_poolLiquidity`\"},\"addressHeisenDev()\":{\"notice\":\"Definition of the Project Wallets `addressHeisenDev` Corresponds to the wallet address where the development team will receive their payments `addressMarketing` Corresponds to the wallet address where the funds for marketing will be received `addressTeam` Represents the wallet where teams and other collaborators will receive their payments\"},\"taxFeeHeisenverse()\":{\"notice\":\"Definition of the taxes fees for swaps `taxFeeHeisenverse` 2%  Initial tax fee during presale `taxFeeMarketing` 3%  Initial tax fee during presale `taxFeeTeam` 3%  Initial tax fee during presale `taxFeeLiquidity` 2%  Initial tax fee during presale This value can be modified by the method {updateTaxesFees}\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SwishFishToken.sol\":\"SwishFish\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"SwishFishToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// SwishFish Contract (SwishFishToken.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./contracts/ERC20.sol\\\";\\r\\nimport \\\"./access/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/IUniswapV2Factory.sol\\\";\\r\\nimport \\\"./interfaces/IUniswapV2Router02.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title SwishFish Contract for SwishFish Token\\r\\n * @author HeisenDev\\r\\n */\\r\\ncontract SwishFish is ERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    IUniswapV2Router02 public uniswapV2Router;\\r\\n\\r\\n    /**\\r\\n     * Definition of the token parameters\\r\\n     */\\r\\n    uint private _tokenTotalSupply = 1000000000 * 10 ** 18;\\r\\n\\r\\n    bool public salesEnabled = false;\\r\\n    bool private firstLiquidityEnabled = true;\\r\\n\\r\\n\\r\\n    mapping(address => uint256) private _authorizedWithdraws;\\r\\n    mapping(address => uint256) private _accountWithdrawalLast;\\r\\n    mapping(address => uint256) private _accountWithdrawalCount;\\r\\n\\r\\n\\r\\n    uint public withdrawPrice = 0.005 ether;\\r\\n    uint256 private _maxWithdrawalCount = 1;\\r\\n    uint256 private _maxTransactionWithdrawAmount = 1000000 ether;\\r\\n\\r\\n    /**\\r\\n     * Definition of the Project Wallets\\r\\n     * `addressHeisenDev` Corresponds to the wallet address where the development\\r\\n     * team will receive their payments\\r\\n     * `addressMarketing` Corresponds to the wallet address where the funds\\r\\n     * for marketing will be received\\r\\n     * `addressTeam` Represents the wallet where teams and other\\r\\n     * collaborators will receive their payments\\r\\n     */\\r\\n\\r\\n    address payable public addressHeisenDev = payable(0xEDa73409d4bBD147f4E1295A73a2Ca243a529338);\\r\\n    address payable public addressMarketing = payable(0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61);\\r\\n    address payable public addressTeam = payable(0x63024aC73FE77427F20e8247FA26F470C0D9700B);\\r\\n\\r\\n    /**\\r\\n     * Definition of the taxes fees for swaps\\r\\n     * `taxFeeHeisenverse` 2%  Initial tax fee during presale\\r\\n     * `taxFeeMarketing` 3%  Initial tax fee during presale\\r\\n     * `taxFeeTeam` 3%  Initial tax fee during presale\\r\\n     * `taxFeeLiquidity` 2%  Initial tax fee during presale\\r\\n     * This value can be modified by the method {updateTaxesFees}\\r\\n     */\\r\\n    uint256 public taxFeeHeisenverse = 2;\\r\\n    uint256 public taxFeeMarketing = 3;\\r\\n    uint256 public taxFeeTeam = 3;\\r\\n    uint256 public taxFeeLiquidity = 2;\\r\\n\\r\\n    /**\\r\\n     * Definition of pools\\r\\n     * `_poolHeisenDev`\\r\\n     * `_poolMarketing`\\r\\n     * `_poolTeam`\\r\\n     * `_poolLiquidity`\\r\\n     */\\r\\n    uint256 public _poolHeisenDev = 0;\\r\\n    uint256 public _poolMarketing = 0;\\r\\n    uint256 public _poolTeam = 0;\\r\\n    uint256 public _poolLiquidity = 0;\\r\\n\\r\\n    mapping(address => bool) private _isExcludedFromFees;\\r\\n    mapping(address => bool) private _isExcludedFromLimits;\\r\\n    mapping(address => bool) private automatedMarketMakerPairs;\\r\\n\\r\\n    event Deposit(address indexed sender, uint amount);\\r\\n    event BuyEgg();\\r\\n    event SalesState(bool status);\\r\\n    event Withdraw(uint amount);\\r\\n    event TeamPayment(uint amount);\\r\\n    event FirstLiquidityAdded(\\r\\n        uint256 bnb\\r\\n    );\\r\\n    event LiquidityAdded(\\r\\n        uint256 bnb\\r\\n    );\\r\\n    event UpdateTaxesFees(\\r\\n        uint256 taxFeeHeisenverse,\\r\\n        uint256 taxFeeMarketing,\\r\\n        uint256 taxFeeTeam,\\r\\n        uint256 taxFeeLiquidity\\r\\n    );\\r\\n    event UpdateWithdrawOptions(\\r\\n        uint256 withdrawPrice\\r\\n    );\\r\\n    constructor(address _owner1, address _owner2, address _owner3, address _backend) {\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\r\\n        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\r\\n        .createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n\\r\\n        automatedMarketMakerPairs[_uniswapV2Pair] = true;\\r\\n        _isExcludedFromFees[address(this)] = true;\\r\\n        _isExcludedFromFees[addressHeisenDev] = true;\\r\\n        _isExcludedFromFees[addressMarketing] = true;\\r\\n        _isExcludedFromFees[addressTeam] = true;\\r\\n\\r\\n        _isExcludedFromLimits[address(this)] = true;\\r\\n        _isExcludedFromLimits[_uniswapV2Pair] = true;\\r\\n        _isExcludedFromLimits[_backend] = true;\\r\\n        /*\\r\\n            _setOwners is an internal function in Ownable.sol that is only called here,\\r\\n            and CANNOT be called ever again\\r\\n        */\\r\\n        _addOwner(_owner1);\\r\\n        _addOwner(_owner2);\\r\\n        _addOwner(_owner3);\\r\\n        /*\\r\\n            _transferBackend is an internal function in Ownable.sol\\r\\n        */\\r\\n        _transferBackend(_backend);\\r\\n        /*\\r\\n            _mint is an internal function in ERC20.sol that is only called here,\\r\\n            and CANNOT be called ever again\\r\\n        */\\r\\n        _mint(address(this), _tokenTotalSupply);\\r\\n    }\\r\\n\\r\\n    /// @dev Fallback function allows to deposit ether.\\r\\n    receive() external payable {\\r\\n        if (msg.value > 0) {\\r\\n            emit Deposit(_msgSender(), msg.value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function buy() external payable {\\r\\n        require(salesEnabled, \\\"Presale isn't enabled\\\");\\r\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(10).div(100);\\r\\n        addLiquidity(liquidityTokens, msg.value);\\r\\n        emit BuyEgg();\\r\\n    }\\r\\n    function firstLiquidity(uint256 tokens) external payable onlyOwner {\\r\\n        require(firstLiquidityEnabled, \\\"Presale isn't enabled\\\");\\r\\n        firstLiquidityEnabled = false;\\r\\n        addLiquidity(tokens, msg.value);\\r\\n        emit FirstLiquidityAdded(msg.value);\\r\\n    }\\r\\n    function teamPayment() external onlyOwner {\\r\\n        super._transfer(address(this), addressHeisenDev, _poolHeisenDev);\\r\\n        super._transfer(address(this), addressMarketing, _poolMarketing);\\r\\n        super._transfer(address(this), addressTeam, _poolTeam);\\r\\n        uint256 amount = _poolHeisenDev + _poolMarketing + _poolTeam;\\r\\n        _poolHeisenDev = 0;\\r\\n        _poolMarketing = 0;\\r\\n        _poolTeam = 0;\\r\\n        (bool sent, ) = addressHeisenDev.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send BNB\\\");\\r\\n        emit TeamPayment(amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal override {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        bool takeFee = !(_isExcludedFromFees[from] || _isExcludedFromFees[to]);\\r\\n\\r\\n        if (takeFee && automatedMarketMakerPairs[from]) {\\r\\n            uint256 liquidityAmount = amount.mul(taxFeeLiquidity).div(100);\\r\\n            _poolLiquidity = _poolLiquidity.add(liquidityAmount);\\r\\n            swapAndAddLiquidityTokens(amount);\\r\\n        }\\r\\n        super._transfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    function swapAndAddLiquidity() private {\\r\\n        uint256 contractBalance = address(this).balance;\\r\\n        swapTokensForEth(_poolLiquidity);\\r\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\\r\\n        addLiquidity(liquidityTokens, contractBalance);\\r\\n        _poolLiquidity = 0;\\r\\n    }\\r\\n    function swapAndAddLiquidityTokens(uint256 _tokenAmount) private {\\r\\n        uint256 contractBalance = address(this).balance;\\r\\n        swapTokensForEth(_tokenAmount);\\r\\n        uint256 liquidityTokens = balanceOf(address(this)).mul(30).div(100);\\r\\n        addLiquidity(liquidityTokens, contractBalance);\\r\\n        _poolLiquidity = 0;\\r\\n    }\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateTaxesFees(uint256 _heisenVerseTaxFee, uint256 _marketingTaxFee, uint256 _teamTaxFee, uint256 _liquidityTaxFee) private {\\r\\n        taxFeeHeisenverse = _heisenVerseTaxFee;\\r\\n        taxFeeMarketing = _marketingTaxFee;\\r\\n        taxFeeTeam = _teamTaxFee;\\r\\n        taxFeeLiquidity = _liquidityTaxFee;\\r\\n        emit UpdateTaxesFees(_heisenVerseTaxFee, _marketingTaxFee, _teamTaxFee, _liquidityTaxFee);\\r\\n    }\\r\\n\\r\\n    function updateWithdrawOptions(uint256 _withdrawPrice) private {\\r\\n        withdrawPrice = _withdrawPrice;\\r\\n        emit UpdateWithdrawOptions(_withdrawPrice);\\r\\n    }\\r\\n\\r\\n    function updateSalesStatus(bool _salesEnabled) private {\\r\\n        salesEnabled = _salesEnabled;\\r\\n        emit SalesState(_salesEnabled);\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokens, uint256 bnb) private {\\r\\n        _approve(address(this), address(uniswapV2Router), balanceOf(address(this)));\\r\\n        uniswapV2Router.addLiquidityETH{value : bnb}(\\r\\n            address(this),\\r\\n            tokens,\\r\\n            0,\\r\\n            0,\\r\\n            address(this),\\r\\n            block.timestamp.add(300)\\r\\n        );\\r\\n        emit LiquidityAdded(bnb);\\r\\n    }\\r\\n\\r\\n    function withdrawAuthorization(address to, uint256 amount, uint256 fee) external onlyBackend {\\r\\n        require(!isAnOwner(to), \\\"Owners can't make withdrawals\\\");\\r\\n        require(to != backend(), \\\"Backend can't make withdrawals\\\");\\r\\n        require(to != addressHeisenDev, \\\"Heisen can't make withdrawals\\\");\\r\\n        require(to != addressMarketing, \\\"Skyler can't make withdrawals\\\");\\r\\n        require(to != addressTeam, \\\"Team can't make withdrawals\\\");\\r\\n        require(fee <= 75, \\\"The fee cannot exceed 75%\\\");\\r\\n        require(_authorizedWithdraws[to] == 0, \\\"User has pending Withdrawals\\\");\\r\\n        require(amount <= _maxTransactionWithdrawAmount, \\\"Amount can't exceeds the max transaction withdraw amount\\\");\\r\\n\\r\\n        uint256 amountFee = amount.mul(fee).div(100);\\r\\n        uint256 totalTaxes = taxFeeHeisenverse + taxFeeMarketing + taxFeeTeam;\\r\\n        if (totalTaxes == 0) {\\r\\n            _poolHeisenDev = _poolHeisenDev.add(amountFee);\\r\\n        }\\r\\n        else {\\r\\n            uint256 currentTaxFeeHeisenDev = taxFeeHeisenverse.mul(100).div(totalTaxes);\\r\\n            uint256 currentTaxFeeMarketing = taxFeeMarketing.mul(100).div(totalTaxes);\\r\\n            uint256 currentTaxFeeTeam = taxFeeTeam.mul(100).div(totalTaxes);\\r\\n            uint256 heisenVerseAmount = amountFee.mul(currentTaxFeeHeisenDev).div(100);\\r\\n            uint256 marketingAmount = amountFee.mul(currentTaxFeeMarketing).div(100);\\r\\n            uint256 teamAmount = amountFee.mul(currentTaxFeeTeam).div(100);\\r\\n\\r\\n            amount = amount.sub(heisenVerseAmount);\\r\\n            amount = amount.sub(marketingAmount);\\r\\n            amount = amount.sub(teamAmount);\\r\\n\\r\\n            _poolHeisenDev = _poolHeisenDev.add(heisenVerseAmount);\\r\\n            _poolMarketing = _poolMarketing.add(marketingAmount);\\r\\n            _poolTeam = _poolTeam.add(teamAmount);\\r\\n        }\\r\\n        _authorizedWithdraws[to] = amount;\\r\\n    }\\r\\n\\r\\n    function withdrawAllowance(address account) external view returns (uint256) {\\r\\n        return _authorizedWithdraws[account];\\r\\n    }\\r\\n\\r\\n    function isUnderDailyWithdrawalLimit(address account) internal returns (bool) {\\r\\n        if (block.timestamp > _accountWithdrawalLast[account].add(86400)) {\\r\\n            _accountWithdrawalLast[account] = block.timestamp;\\r\\n            _accountWithdrawalCount[account] = 0;\\r\\n        }\\r\\n        _accountWithdrawalCount[account] = _accountWithdrawalCount[account].add(1);\\r\\n        return (_accountWithdrawalCount[account] <= _maxWithdrawalCount);\\r\\n    }\\r\\n\\r\\n    function withdraw() external payable {\\r\\n        require(isUnderDailyWithdrawalLimit(_msgSender()), \\\"You cannot make more than one withdrawal per day\\\");\\r\\n        require(msg.value >= (withdrawPrice), \\\"The amount sent is not equal to the BNB amount required for withdraw\\\");\\r\\n        uint256 amount = _authorizedWithdraws[_msgSender()];\\r\\n        super._transfer(address(this), _msgSender(), amount);\\r\\n        _authorizedWithdraws[_msgSender()] = 0;\\r\\n        emit Withdraw(amount);\\r\\n    }\\r\\n    function submitProposal(\\r\\n        bool _updateEggSales,\\r\\n        bool _salesEnabled,\\r\\n        bool _swapAndAddLiquidity,\\r\\n        bool _updateWithdrawOptions,\\r\\n        uint256 _withdrawPrice,\\r\\n        bool _updateTaxesFees,\\r\\n        uint256 _heisenVerseTaxFee,\\r\\n        uint256 _marketingTaxFee,\\r\\n        uint256 _teamTaxFee,\\r\\n        uint256 _liquidityTaxFee,\\r\\n        bool _transferBackend,\\r\\n        address _backendAddress\\r\\n    ) external onlyOwner {\\r\\n        if (_updateWithdrawOptions) {\\r\\n            require(withdrawPrice <= 5000000000000000, \\\"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\\\");\\r\\n        }\\r\\n        if (_updateTaxesFees) {\\r\\n            uint256 sellTotalFees = _heisenVerseTaxFee + _marketingTaxFee + _teamTaxFee + _liquidityTaxFee;\\r\\n            require(sellTotalFees <= 10, \\\"MultiSignatureWallet: Must keep fees at 10% or less\\\");\\r\\n        }\\r\\n        if (_transferBackend) {\\r\\n            require(_backendAddress != address(0), \\\"MultiSignatureWallet: new owner is the zero address\\\");\\r\\n        }\\r\\n        proposals.push(Proposal({\\r\\n        author: _msgSender(),\\r\\n        executed: false,\\r\\n        updateSalesStatus: _updateEggSales,\\r\\n        salesEnabled: _salesEnabled,\\r\\n        swapAndAddLiquidity: _swapAndAddLiquidity,\\r\\n        updateWithdrawOptions: _updateWithdrawOptions,\\r\\n        withdrawPrice: _withdrawPrice,\\r\\n        updateTaxesFees: _updateTaxesFees,\\r\\n        heisenVerseTaxFee: _heisenVerseTaxFee,\\r\\n        marketingTaxFee: _marketingTaxFee,\\r\\n        teamTaxFee: _teamTaxFee,\\r\\n        liquidityTaxFee: _liquidityTaxFee,\\r\\n        transferBackend: _transferBackend,\\r\\n        backendAddress: _backendAddress\\r\\n        }));\\r\\n        emit SubmitProposal(proposals.length - 1);\\r\\n    }\\r\\n\\r\\n    function approveProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotApproved(_proposalId) proposalNotExecuted(_proposalId)\\r\\n    {\\r\\n        proposalApproved[_proposalId][_msgSender()] = true;\\r\\n        emit ApproveProposal(_msgSender(), _proposalId);\\r\\n    }\\r\\n\\r\\n    function _getApprovalCount(uint _proposalId) private view returns (uint256) {\\r\\n        uint256 count = 0;\\r\\n        for (uint i; i < requiredConfirmations(); i++) {\\r\\n            if (proposalApproved[_proposalId][getOwner(i)]) {\\r\\n                count += 1;\\r\\n            }\\r\\n        }\\r\\n        return count;\\r\\n    }\\r\\n\\r\\n    function executeProposal(uint _proposalId) external proposalExists(_proposalId) proposalNotExecuted(_proposalId) {\\r\\n        require(_getApprovalCount(_proposalId) >= requiredConfirmations(), \\\"MultiSignatureWallet: approvals is less than required\\\");\\r\\n        Proposal storage proposal = proposals[_proposalId];\\r\\n        proposal.executed = true;\\r\\n        if (proposal.updateSalesStatus) {\\r\\n            updateSalesStatus(proposal.salesEnabled);\\r\\n        }\\r\\n        if (proposal.swapAndAddLiquidity) {\\r\\n            swapAndAddLiquidity();\\r\\n        }\\r\\n        if (proposal.updateWithdrawOptions) {\\r\\n            updateWithdrawOptions(proposal.withdrawPrice);\\r\\n        }\\r\\n        if (proposal.updateTaxesFees) {\\r\\n            updateTaxesFees(proposal.heisenVerseTaxFee ,proposal.marketingTaxFee ,proposal.teamTaxFee ,proposal.liquidityTaxFee);\\r\\n        }\\r\\n        if (proposal.transferBackend) {\\r\\n            _transferBackend(proposal.backendAddress);\\r\\n            _isExcludedFromLimits[proposal.backendAddress] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function revokeProposal(uint _proposalId) external onlyOwner proposalExists(_proposalId) proposalNotExecuted(_proposalId)\\r\\n    {\\r\\n        require(proposalApproved[_proposalId][_msgSender()], \\\"MultiSignatureWallet: Proposal is not approved\\\");\\r\\n        proposalApproved[_proposalId][_msgSender()] = false;\\r\\n        emit RevokeProposal(_msgSender(), _proposalId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x351d7977fd5e354ab016404de5e64436acd7655735a05dc4ad67525be88e795e\",\"license\":\"MIT\"},\"access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (access/Ownable.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../utils/MultiSignature.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context, MultiSignature {\\r\\n    address private _backend;\\r\\n    address private _owner;\\r\\n    address[] private _owners;\\r\\n    mapping(address => bool) private isOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n    function requiredConfirmations() internal view returns (uint256) {\\r\\n        return _owners.length;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns the address of the current backend.\\r\\n     */\\r\\n    function backend() internal view returns (address) {\\r\\n        return _backend;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner[_msgSender()],  \\\"Ownable: caller is not an owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyBackend() {\\r\\n        require(backend() == _msgSender(), \\\"Ownable: caller is not the backend\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if account is an owner.\\r\\n     */\\r\\n    function isAnOwner(address account) internal view returns (bool) {\\r\\n        return isOwner[account];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns owner by Index.\\r\\n     */\\r\\n    function getOwner(uint256 index) internal view returns (address) {\\r\\n        return _owners[index];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function _transferBackend(address newBackend) internal  {\\r\\n        require(newBackend != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _backend = newBackend;\\r\\n        emit OwnershipTransferred(address(0), newBackend);\\r\\n    }\\r\\n    /**\\r\\n     * @dev Set owners of the contract\\r\\n     * Is Only called in the contract creation\\r\\n     */\\r\\n    function _addOwner(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: Owner is the zero address\\\");\\r\\n        require(!isOwner[newOwner], \\\"Ownable: Owner is not unique\\\");\\r\\n        isOwner[newOwner] = true;\\r\\n        _owners.push(newOwner);\\r\\n        emit OwnershipTransferred(address(0), newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xace1787660bdf0b3409380f4ab67bcb238cf86fbaf840a09594402b809ffc1a6\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../interfaces/IERC20.sol\\\";\\r\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\r\\nimport \\\"../libraries/SafeMath.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor() {\\r\\n        _name = \\\"SwishFish\\\";\\r\\n        _symbol = \\\"SFH\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n    unchecked {\\r\\n        _approve(owner, spender, currentAllowance.sub(subtractedValue));\\r\\n    }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n    unchecked {\\r\\n        _balances[from] = fromBalance.sub(amount);\\r\\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n        // decrementing then incrementing.\\r\\n        _balances[to] = _balances[to].add(amount);\\r\\n    }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n    unchecked {\\r\\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n    }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = _balances[account].sub(amount);\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply = _totalSupply.sub(amount);\\r\\n        }\\r\\n        emit Transfer(account, address(0), amount);\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance.sub(amount));\\r\\n        }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x9a8023d613b42d4e4757f8fe75f37be33054ae44be3c966bd77538b9974aeb77\",\"license\":\"MIT\"},\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"},\"interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x17e11f3a7f387d611d79692f57a12340a2eec6e1dcf096e361723ddfd8a7ec72\",\"license\":\"MIT\"},\"interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa14a8f5dad5e8e68d13a0ad59507baf7eb243e2d2f9f5438f4c28ce95309d3c5\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8328ed8fd4438c01a0eb7c83c7d531a5792c7996f28a815da0e241970ec269bc\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IUniswapV2Router01.sol\\\";\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x8dd2dbe49fd4b174cc7b8fd4dcca259791dced6ac5158a26c35e4c648464e211\",\"license\":\"GPL-3.0\"},\"libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Wrappers over Solidity's arithmetic operations.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x230abde3f0534bbf161e909591a48372dc2809afeece53563b5d7bce2a6d1640\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"},\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdc5e99ad2cb681bef03489d4a1724ea612944d73f9a371ad04e1b0535c2e1f46\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1615,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1621,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1623,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1625,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1627,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 3042,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "proposals",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(Proposal)3038_storage)dyn_storage"
							},
							{
								"astId": 3048,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1403,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_backend",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1405,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1408,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_owners",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1412,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "isOwner",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 16,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IUniswapV2Router02)2767"
							},
							{
								"astId": 24,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_tokenTotalSupply",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "salesEnabled",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 30,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "firstLiquidityEnabled",
								"offset": 1,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 34,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_authorizedWithdraws",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 38,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_accountWithdrawalLast",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 42,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_accountWithdrawalCount",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 45,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "withdrawPrice",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 48,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_maxWithdrawalCount",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 51,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_maxTransactionWithdrawAmount",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "addressHeisenDev",
								"offset": 0,
								"slot": "20",
								"type": "t_address_payable"
							},
							{
								"astId": 64,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "addressMarketing",
								"offset": 0,
								"slot": "21",
								"type": "t_address_payable"
							},
							{
								"astId": 70,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "addressTeam",
								"offset": 0,
								"slot": "22",
								"type": "t_address_payable"
							},
							{
								"astId": 74,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeHeisenverse",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 77,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeMarketing",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 80,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeTeam",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 83,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "taxFeeLiquidity",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 87,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolHeisenDev",
								"offset": 0,
								"slot": "27",
								"type": "t_uint256"
							},
							{
								"astId": 90,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolMarketing",
								"offset": 0,
								"slot": "28",
								"type": "t_uint256"
							},
							{
								"astId": 93,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolTeam",
								"offset": 0,
								"slot": "29",
								"type": "t_uint256"
							},
							{
								"astId": 96,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_poolLiquidity",
								"offset": 0,
								"slot": "30",
								"type": "t_uint256"
							},
							{
								"astId": 100,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_isExcludedFromFees",
								"offset": 0,
								"slot": "31",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 104,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "_isExcludedFromLimits",
								"offset": 0,
								"slot": "32",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 108,
								"contract": "SwishFishToken.sol:SwishFish",
								"label": "automatedMarketMakerPairs",
								"offset": 0,
								"slot": "33",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Proposal)3038_storage)dyn_storage": {
								"base": "t_struct(Proposal)3038_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)2767": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)3038_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 3011,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3013,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3015,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3017,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3019,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3021,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3023,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3025,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 3027,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3035,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 3037,
										"contract": "SwishFishToken.sol:SwishFish",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"_poolHeisenDev()": {
								"notice": "Definition of pools `_poolHeisenDev` `_poolMarketing` `_poolTeam` `_poolLiquidity`"
							},
							"addressHeisenDev()": {
								"notice": "Definition of the Project Wallets `addressHeisenDev` Corresponds to the wallet address where the development team will receive their payments `addressMarketing` Corresponds to the wallet address where the funds for marketing will be received `addressTeam` Represents the wallet where teams and other collaborators will receive their payments"
							},
							"taxFeeHeisenverse()": {
								"notice": "Definition of the taxes fees for swaps `taxFeeHeisenverse` 2%  Initial tax fee during presale `taxFeeMarketing` 3%  Initial tax fee during presale `taxFeeTeam` 3%  Initial tax fee during presale `taxFeeLiquidity` 2%  Initial tax fee during presale This value can be modified by the method {updateTaxesFees}"
							}
						},
						"version": 1
					}
				}
			},
			"access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"access/Ownable.sol\":1136:1154  _owner = msgSender */\n  0x03\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"access/Ownable.sol\":1170:1213  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  dup2\n  dup1\n  log3\n    /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup3\n      calldataload\n      div\n      swap1\n      dup2\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      pop\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      jumpi(tag_9, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_9\n      jumpi\n      0x20\n      and(sload(0x03), 0xffffffffffffffffffffffffffffffffffffffff)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_9:\n      dup1\n      revert\n    tag_3:\n      swap1\n      pop\n      jumpi(tag_13, callvalue)\n      jumpi(tag_13, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup3\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      0x08\n      swap1\n      dup4\n      0x01c0\n      swap5\n      mstore\n      mul\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup2\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      dup5\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup2\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n      dup3\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup4\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap2\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n      dup6\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      add\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n      sload\n      swap6\n      dup6\n      0x01000000000000000000000000000000000000000000000000\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap11\n      dup12\n      dup2\n      and\n      dup14\n      mstore\n      dup13\n      0x20\n      dup5\n      0x010000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x40\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n    tag_15:\n      dup3\n      dup1\n      revert\n        /* \"access/Ownable.sol\":686:3275  contract Ownable is Context, MultiSignature {... */\n    tag_13:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608080604052346100515760038054600160a060020a0319163390811790915560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a361032090816100578239f35b600080fdfe608080604052600436101561001357600080fd5b6000907c0100000000000000000000000000000000000000000000000000000000823504908163013cf08b146100895750638da5cb5b1461005357600080fd5b34610086578060031936011261008657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b80fd5b9050346102e65760203660031901126102e65760043582548110156102e257600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH2 0x320 SWAP1 DUP2 PUSH2 0x57 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV SWAP1 DUP2 PUSH4 0x13CF08B EQ PUSH2 0x89 JUMPI POP PUSH4 0x8DA5CB5B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x86 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x86 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2E6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E6 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2912F00834417F8C6A6431D2305FDC3800727F15DDD7360A040E2D248F2D7D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "686:2589:1:-:0;;;;;;;1136:18;686:2589;;-1:-1:-1;;;;;;686:2589:1;736:10:9;686:2589:1;;;;;;-1:-1:-1;1170:43:1;-1:-1:-1;;1170:43:1;686:2589;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b6000907c0100000000000000000000000000000000000000000000000000000000823504908163013cf08b146100895750638da5cb5b1461005357600080fd5b34610086578060031936011261008657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b80fd5b9050346102e65760203660031901126102e65760043582548110156102e257600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV SWAP1 DUP2 PUSH4 0x13CF08B EQ PUSH2 0x89 JUMPI POP PUSH4 0x8DA5CB5B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x86 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x86 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2E6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E6 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2912F00834417F8C6A6431D2305FDC3800727F15DDD7360A040E2D248F2D7D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "686:2589:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;686:2589:1;;;;;;;;887:27:10;;;;;686:2589:1;;;;;;;;;;;887:27:10;;;;686:2589:1;;887:27:10;;;;686:2589:1;;887:27:10;;;;686:2589:1;887:27:10;;;;686:2589:1;887:27:10;;;686:2589:1;887:27:10;;;;;686:2589:1;887:27:10;;686:2589:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:27:10;;;;686:2589:1;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "160000",
								"executionCost": "22021",
								"totalCost": "182021"
							},
							"external": {
								"owner()": "391",
								"proposals(uint256)": "2470"
							},
							"internal": {
								"_addOwner(address)": "infinite",
								"_transferBackend(address)": "infinite",
								"backend()": "infinite",
								"getOwner(uint256)": "infinite",
								"isAnOwner(address)": "infinite",
								"requiredConfirmations()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 1170,
									"end": 1213,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "RETURN",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 3275,
									"name": "REVERT",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f2912f00834417f8c6a6431d2305fdc3800727f15ddd7360a040e2d248f2d7d64736f6c63430008110033",
									".code": [
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "13CF08B"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1C0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 887,
											"end": 914,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"proposals(uint256)": "013cf08b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (access/Ownable.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../utils/MultiSignature.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context, MultiSignature {\\r\\n    address private _backend;\\r\\n    address private _owner;\\r\\n    address[] private _owners;\\r\\n    mapping(address => bool) private isOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n    function requiredConfirmations() internal view returns (uint256) {\\r\\n        return _owners.length;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns the address of the current backend.\\r\\n     */\\r\\n    function backend() internal view returns (address) {\\r\\n        return _backend;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner[_msgSender()],  \\\"Ownable: caller is not an owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyBackend() {\\r\\n        require(backend() == _msgSender(), \\\"Ownable: caller is not the backend\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if account is an owner.\\r\\n     */\\r\\n    function isAnOwner(address account) internal view returns (bool) {\\r\\n        return isOwner[account];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Returns owner by Index.\\r\\n     */\\r\\n    function getOwner(uint256 index) internal view returns (address) {\\r\\n        return _owners[index];\\r\\n    }\\r\\n    /**\\r\\n     * @dev Transfers backend Control of the contract to a new account (`newBackend`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function _transferBackend(address newBackend) internal  {\\r\\n        require(newBackend != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _backend = newBackend;\\r\\n        emit OwnershipTransferred(address(0), newBackend);\\r\\n    }\\r\\n    /**\\r\\n     * @dev Set owners of the contract\\r\\n     * Is Only called in the contract creation\\r\\n     */\\r\\n    function _addOwner(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: Owner is the zero address\\\");\\r\\n        require(!isOwner[newOwner], \\\"Ownable: Owner is not unique\\\");\\r\\n        isOwner[newOwner] = true;\\r\\n        _owners.push(newOwner);\\r\\n        emit OwnershipTransferred(address(0), newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xace1787660bdf0b3409380f4ab67bcb238cf86fbaf840a09594402b809ffc1a6\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"},\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdc5e99ad2cb681bef03489d4a1724ea612944d73f9a371ad04e1b0535c2e1f46\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3042,
								"contract": "access/Ownable.sol:Ownable",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)3038_storage)dyn_storage"
							},
							{
								"astId": 3048,
								"contract": "access/Ownable.sol:Ownable",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1403,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_backend",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1405,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1408,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owners",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1412,
								"contract": "access/Ownable.sol:Ownable",
								"label": "isOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Proposal)3038_storage)dyn_storage": {
								"base": "t_struct(Proposal)3038_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Proposal)3038_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 3011,
										"contract": "access/Ownable.sol:Ownable",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3013,
										"contract": "access/Ownable.sol:Ownable",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3015,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3017,
										"contract": "access/Ownable.sol:Ownable",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3019,
										"contract": "access/Ownable.sol:Ownable",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3021,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3023,
										"contract": "access/Ownable.sol:Ownable",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3025,
										"contract": "access/Ownable.sol:Ownable",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 3027,
										"contract": "access/Ownable.sol:Ownable",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "access/Ownable.sol:Ownable",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "access/Ownable.sol:Ownable",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "access/Ownable.sol:Ownable",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3035,
										"contract": "access/Ownable.sol:Ownable",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 3037,
										"contract": "access/Ownable.sol:Ownable",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_2, callvalue)\n  tag_4\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sload\n  tag_1\n  jump\t// in\ntag_4:\n  0x1f\n  dup2\n  gt\n  tag_5\n  jumpi\ntag_6:\n  pop\n  0x5377697368466973680000000000000000000000000000000000000000000012\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sstore\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sload\n  tag_7\n  swap1\n  tag_1\n  jump\t// in\ntag_7:\n  0x1f\n  dup2\n  gt\n  tag_8\n  jumpi\ntag_9:\n  0x5346480000000000000000000000000000000000000000000000000000000006\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_8:\n  0x00\n  swap1\n    /* \"contracts/ERC20.sol\":2166:2181  _symbol = \"SFH\" */\n  0x04\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dup3\n  mstore\n  0x20\n  0x1f\n  dup2\n  dup5\n  keccak256\n  swap3\n  add\n  div\n  dup2\n  add\n  swap1\ntag_10:\n  dup2\n  dup2\n  lt\n  tag_11\n  jumpi\n  pop\n  pop\n  jump(tag_9)\ntag_11:\n  dup3\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_10)\ntag_5:\n  0x00\n  swap1\n    /* \"contracts/ERC20.sol\":2136:2155  _name = \"SwishFish\" */\n  0x03\n    /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dup3\n  mstore\n  0x20\n  0x1f\n  dup2\n  dup5\n  keccak256\n  swap3\n  add\n  div\n  dup2\n  add\n  swap1\ntag_13:\n  dup2\n  dup2\n  lt\n  tag_14\n  jumpi\n  pop\n  pop\n  jump(tag_6)\ntag_14:\n  dup3\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_13)\ntag_2:\n  0x00\n  dup1\n  revert\ntag_1:\n  swap1\n  0x01\n  0x02\n  dup4\n  div\n  swap3\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\ntag_17:\n  0x20\n  dup4\n  lt\n  eq\n  tag_18\n  jumpi\n  jump\t// out\ntag_18:\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_16:\n  swap2\n  0x7f\n  and\n  swap2\n  jump(tag_17)\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      0x80\n      0x40\n      dup2\n      dup2\n      mstore\n      0x04\n      swap2\n      dup3\n      calldatasize\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      0x00\n      swap3\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup5\n      calldataload\n      div\n      swap2\n      dup3\n      0x06fdde03\n      eq\n      tag_12\n      jumpi\n      pop\n      dup2\n      0x095ea7b3\n      eq\n      tag_14\n      jumpi\n      dup2\n      0x18160ddd\n      eq\n      tag_16\n      jumpi\n      dup2\n      0x23b872dd\n      eq\n      tag_18\n      jumpi\n      dup2\n      0x313ce567\n      eq\n      tag_20\n      jumpi\n      dup2\n      0x39509351\n      eq\n      tag_22\n      jumpi\n      dup2\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      dup2\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup2\n      0xa457c2d7\n      eq\n      tag_28\n      jumpi\n      pop\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      dup1\n      0x20\n      swap3\n      tag_38\n      tag_2\n      jump\t// in\n    tag_38:\n      tag_39\n      tag_3\n      jump\t// in\n    tag_39:\n      sub(exp(0x02, 0xa0), 0x01)\n      swap2\n      dup3\n      and\n      dup4\n      mstore\n        /* \"contracts/ERC20.sol\":4255:4266  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup7\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap2\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_36:\n      pop\n      dup1\n      revert\n    tag_30:\n      pop\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_45\n      tag_2\n      jump\t// in\n    tag_45:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4039:4045  amount */\n      tag_6\n      jump\t// in\n    tag_44:\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mload\n      0x01\n      dup2\n      mstore\n      return\n    tag_28:\n      dup4\n      swap2\n      pop\n      jumpi(tag_36, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      tag_50\n      tag_2\n      jump\t// in\n    tag_50:\n      swap2\n      dup4\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      caller\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup7\n      and\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":7059:7094  currentAllowance >= subtractedValue */\n      swap2\n      dup2\n      dup4\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_51\n      jumpi\n      0x20\n      dup6\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup7\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_54\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup8\n      dup8\n      dup6\n      mload\n      swap2\n      tag_55\n      dup4\n      tag_4\n      jump\t// in\n    tag_55:\n      0x1e\n      dup4\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup9\n      dup5\n      add\n      mstore\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_9\n      jump\t// in\n    tag_54:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":7189:7226  currentAllowance.sub(subtractedValue) */\n      tag_7\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_51:\n      0x84\n      swap1\n      0x20\n      dup7\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n      0x44\n      dup3\n      add\n      mstore\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_26:\n      swap2\n      swap1\n      pop\n      jumpi(tag_58, callvalue)\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_58\n      jumpi\n      dup1\n      mload\n      swap2\n      dup4\n      dup2\n      sload\n      swap2\n      0x02\n      dup4\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup6\n      and\n      swap5\n      dup6\n      iszero\n      tag_60\n      jumpi\n    tag_61:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup2\n      eq\n      tag_62\n      jumpi\n      dup6\n      dup10\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_64\n      jumpi\n      pop\n      0x01\n      eq\n      tag_66\n      jumpi\n    tag_67:\n      tag_68\n      dup8\n      dup8\n      tag_69\n      dup3\n      dup13\n      sub\n      dup4\n      tag_5\n      jump\t// in\n    tag_69:\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_68:\n      sub\n      swap1\n      return\n    tag_66:\n      dup2\n      mstore\n      swap3\n      swap6\n      pop\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n    tag_70:\n      dup3\n      dup5\n      lt\n      tag_71\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_68\n      swap5\n      tag_69\n      swap3\n      dup3\n      add\n      add\n      swap5\n      codesize\n      dup1\n      jump(tag_67)\n    tag_71:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_70)\n    tag_64:\n      not(0xff)\n      and\n      dup9\n      dup8\n      add\n      mstore\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_69\n      dup3\n      tag_68\n      codesize\n      dup1\n      jump(tag_67)\n    tag_62:\n      0x24\n      dup5\n      0x22\n      dup6\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_60:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_61)\n    tag_58:\n      dup3\n      dup1\n      revert\n    tag_24:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      0x20\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n      tag_77\n      tag_2\n      jump\t// in\n    tag_77:\n      and\n      dup2\n      mstore\n      dup1\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_22:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      0x20\n      swap3\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_54\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_84\n      tag_2\n      jump\t// in\n    tag_84:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap2\n      caller\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      mstore\n      0x01\n      dup7\n      mstore\n      dup5\n      dup2\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup3\n      mstore\n      dup7\n      mstore\n      dup5\n      calldataload(0x24)\n      swap2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6264:6305  allowance(owner, spender).add(addedValue) */\n      tag_8\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_20:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/ERC20.sol\":3304:3306  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      mstore\n      return\n    tag_18:\n      dup4\n      swap2\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x60))\n      tag_93\n      tag_2\n      jump\t// in\n    tag_93:\n      tag_94\n      tag_3\n      jump\t// in\n    tag_94:\n      swap2\n      dup5\n      calldataload(0x44)\n      swap5\n      sub(exp(0x02, 0xa0), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n      dup2\n      keccak256\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":11787:11804  type(uint256).max */\n      swap1\n      not(0x00)\n        /* \"contracts/ERC20.sol\":11767:11804  currentAllowance != type(uint256).max */\n      dup3\n      sub\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      tag_95\n      jumpi\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_96:\n      0x20\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      dup7\n      tag_44\n      dup8\n      dup8\n      dup8\n      tag_6\n      jump\t// in\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n    tag_95:\n        /* \"contracts/ERC20.sol\":11829:11855  currentAllowance >= amount */\n      dup5\n      dup3\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_98\n      jumpi\n      pop\n      swap2\n      dup4\n      swap2\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      tag_100\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_101\n        /* \"contracts/ERC20.sol\":5649:5655  amount */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap6\n      dup9\n      swap8\n      0x20\n      swap10\n      mload\n      swap2\n      tag_102\n      dup4\n      tag_4\n      jump\t// in\n    tag_102:\n      0x1e\n      dup4\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup12\n      dup5\n      add\n      mstore\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_9\n      jump\t// in\n    tag_101:\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":11950:11978  currentAllowance.sub(amount) */\n      dup4\n      tag_7\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC20.sol\":11763:12002  if (currentAllowance != type(uint256).max) {... */\n      swap2\n      swap4\n      swap5\n      dup2\n      swap4\n      pop\n      jump(tag_96)\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_98:\n      0x64\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_16:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":3467:3479  _totalSupply */\n      0x02\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_14:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      0x20\n      swap1\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_44\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_112\n      tag_2\n      jump\t// in\n    tag_112:\n      calldataload(0x24)\n        /* \"utils/Context.sol\":736:746  msg.sender */\n      swap1\n      caller\n        /* \"contracts/ERC20.sol\":4774:4780  amount */\n      tag_7\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_12:\n      swap3\n      swap2\n      pop\n      jumpi(tag_115, callvalue)\n      dup4\n      add(calldatasize, not(0x03))\n      slt\n      tag_115\n      jumpi\n      dup4\n      sload(0x03)\n      0x02\n      dup2\n      div\n      swap2\n      0x01\n      swap2\n      dup3\n      dup2\n      and\n      dup1\n      iszero\n      tag_117\n      jumpi\n    tag_118:\n      0x20\n      swap6\n      dup7\n      dup7\n      lt\n      dup3\n      eq\n      tag_119\n      jumpi\n      pop\n      dup5\n      dup9\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_121\n      jumpi\n      pop\n      0x01\n      eq\n      tag_123\n      jumpi\n    tag_124:\n      tag_68\n      dup7\n      dup7\n      tag_69\n      dup3\n      dup12\n      sub\n      dup4\n      tag_5\n      jump\t// in\n    tag_123:\n      swap3\n      swap6\n      pop\n      0x03\n      dup4\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n    tag_127:\n      dup3\n      dup5\n      lt\n      tag_128\n      jumpi\n      pop\n      pop\n      pop\n      dup3\n      tag_68\n      swap5\n      tag_69\n      swap3\n      dup3\n      add\n      add\n      swap5\n      codesize\n      jump(tag_124)\n    tag_128:\n      dup1\n      sload\n      dup7\n      dup6\n      add\n      dup9\n      add\n      mstore\n      swap3\n      dup7\n      add\n      swap3\n      dup2\n      add\n      jump(tag_127)\n    tag_121:\n      not(0xff)\n      and\n      dup8\n      dup7\n      add\n      mstore\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      dup2\n      mul\n      dup4\n      add\n      add\n      swap3\n      pop\n      tag_69\n      dup3\n      tag_68\n      codesize\n      jump(tag_124)\n    tag_119:\n      dup4\n      0x22\n      0x24\n      swap3\n      mul(0x4e487b71, exp(0x02, 0xe0))\n      dup4\n      mstore\n      mstore\n      revert\n    tag_117:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_118)\n    tag_115:\n      dup4\n      dup1\n      revert\n    tag_1:\n      0x20\n      dup1\n      dup3\n      mstore\n      dup3\n      mload\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap4\n      swap3\n      0x00\n    tag_130:\n      dup3\n      dup2\n      lt\n      tag_131\n      jumpi\n      pop\n      pop\n      0x40\n      swap3\n      swap4\n      pop\n      0x00\n      dup4\n      dup3\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_131:\n      dup2\n      dup2\n      add\n      dup7\n      add\n      mload\n      dup5\n      dup3\n      add\n      0x40\n      add\n      mstore\n      dup6\n      add\n      jump(tag_130)\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_133\n      jumpi\n      jump\t// out\n    tag_133:\n      0x00\n      dup1\n      revert\n    tag_3:\n      calldataload(0x24)\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_133\n      jumpi\n      jump\t// out\n    tag_4:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_137\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_137:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_137\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n    tag_6:\n      swap3\n      swap2\n      swap3\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":7867:7885  from != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_141\n      jumpi\n      and\n        /* \"contracts/ERC20.sol\":7946:7962  to != address(0) */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_143\n      jumpi\n        /* \"contracts/ERC20.sol\":7883:7884  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap4\n      dup2\n      dup6\n      mstore\n      0x20\n      swap1\n      dup6\n      dup3\n      mstore\n      0x40\n      dup1\n      dup8\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8122:8143  fromBalance >= amount */\n      swap7\n      dup3\n      dup9\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_145\n      jumpi\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_147\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap6\n      swap7\n      swap8\n      swap9\n      dup5\n      dup5\n      mload\n      swap2\n      tag_55\n      dup4\n      tag_4\n      jump\t// in\n        /* \"libraries/SafeMath.sol\":1036:1079  sub(a, b, \"SafeMath: subtraction overflow\") */\n    tag_147:\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup7\n      dup3\n      mstore\n      dup2\n      dup6\n      mstore\n      dup3\n      dup3\n      keccak256\n      sstore\n      dup7\n      dup2\n      mstore\n      dup2\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_149\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup5\n      dup3\n      dup5\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":8439:8464  _balances[to].add(amount) */\n      tag_8\n      jump\t// in\n    tag_149:\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap2\n      dup9\n      dup2\n      mstore\n      dup1\n      dup7\n      mstore\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":8489:8515  Transfer(from, to, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":7736:8573  function _transfer(... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_145:\n      0x84\n      dup5\n      dup4\n      mload\n      swap1\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n      0x44\n      dup3\n      add\n      mstore\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_143:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_141:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      0x44\n      dup3\n      add\n      mstore\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n    tag_7:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup1\n      swap2\n      and\n        /* \"contracts/ERC20.sol\":11030:11049  owner != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_150\n      jumpi\n      and\n        /* \"contracts/ERC20.sol\":11109:11130  spender != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_152\n      jumpi\n      0x20\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      swap2\n      dup4\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore\n        /* \"contracts/ERC20.sol\":11182:11193  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup3\n      mstore\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      keccak256\n      dup6\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore\n      dup3\n      mstore\n      dup1\n      0x40\n        /* \"contracts/ERC20.sol\":11047:11048  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      keccak256\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":11234:11266  Approval(owner, spender, amount) */\n      log3\n        /* \"contracts/ERC20.sol\":10894:11274  function _approve(... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_152:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      0x44\n      dup3\n      add\n      mstore\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_150:\n      0x84\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_8:\n      swap1\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      dup2\n      add\n      swap1\n      dup2\n      dup2\n      gt\n      tag_154\n      jumpi\n        /* \"libraries/SafeMath.sol\":601:607  c >= a */\n      dup2\n      lt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_156\n      jumpi\n        /* \"libraries/SafeMath.sol\":487:668  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_156:\n      0x64\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_154:\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"libraries/SafeMath.sol\":1390:1582  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_9:\n      swap2\n        /* \"libraries/SafeMath.sol\":1504:1510  b <= a */\n      dup3\n      dup3\n      gt\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      tag_158\n      jumpi\n      pop\n      dup2\n      sub\n      swap1\n      dup2\n      gt\n      tag_154\n      jumpi\n        /* \"libraries/SafeMath.sol\":1390:1582  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1482:13465  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n    tag_158:\n      tag_162\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n      tag_1\n      jump\t// in\n    tag_162:\n      sub\n      swap1\n      revert\n\n    auxdata: 0xa2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"extract_byte_array_length": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052346100e6576100146003546100eb565b601f81116100b8575b507f537769736846697368000000000000000000000000000000000000000000001260035560045461004e906100eb565b601f811161008a575b7f5346480000000000000000000000000000000000000000000000000000000006600455604051610aec90816101408239f35b600090600482526020601f8184209201048101905b8181106100ad575050610057565b82815560010161009f565b600090600382526020601f8184209201048101905b8181106100db57505061001d565b8281556001016100cd565b600080fd5b9060016002830492168015610135575b602083101461010657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916100fb56fe608060408181526004918236101561001657600080fd5b6000927c010000000000000000000000000000000000000000000000000000000084350491826306fdde031461052a57508163095ea7b31461050057816318160ddd146104e157816323b872dd146103d7578163313ce567146103bb578163395093511461037357816370a082311461033d57816395d89b4114610233578163a457c2d71461013557508063a9059cbb146101055763dd62ed3e146100ba57600080fd5b34610101578060031936011261010157806020926100d661066b565b6100de610686565b600160a060020a0391821683526001865283832091168252845220549051908152f35b5080fd5b503461010157806003193601126101015760209061012e61012461066b565b60243590336106f3565b5160018152f35b8391503461010157826003193601126101015761015061066b565b9183602435913381526001602052818120600160a060020a03861682526020522054918183106101c75760208561012e866101c087878551916101928361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000088840152610a7e565b90336108d0565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b9190503461033957826003193601126103395780519183815491600283049160019182851694851561032f575b6020958686108114610319578589529081156102f6575060011461029e575b61029a8787610290828c03836106d1565b5191829182610622565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106102e3575050508261029a946102909282010194388061027f565b80548685018801529286019281016102c5565b60ff191688870152505050501515810283010192506102908261029a388061027f565b60248460228560e060020a634e487b7102835252fd5b93607f1693610260565b8280fd5b5050346101015760203660031901126101015780602092600160a060020a0361036461066b565b16815280845220549051908152f35b50503461010157806003193601126101015761012e6020926101c061039661066b565b9133815260018652848120600160a060020a0384168252865284602435912054610a0a565b5050346101015781600319360112610101576020905160128152f35b83915034610101576060366003190112610101576103f361066b565b6103fb610686565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203610436575b60208661012e8787876106f3565b84821061049b575091839161049061048961012e958897602099519161045b8361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008b840152610a7e565b33836108d0565b919394819350610428565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101015781600319360112610101576020906002549051908152f35b50503461010157806003193601126101015760209061012e61052061066b565b60243590336108d0565b9291503461061e578360031936011261061e578360035460028104916001918281168015610614575b60209586861082146105fe57508488529081156105dd5750600114610584575b61029a8686610290828b03836106d1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106105ca575050508261029a94610290928201019438610573565b80548685018801529286019281016105ad565b60ff1916878601525050501515810283010192506102908261029a38610573565b83602260249260e060020a634e487b7102835252fd5b93607f1693610553565b8380fd5b6020808252825181830181905290939260005b82811061065757505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610635565b60043590600160a060020a038216820361068157565b600080fd5b60243590600160a060020a038216820361068157565b6040810190811067ffffffffffffffff8211176106b857604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106b857604052565b929192600160a060020a0380911691821561086357169081156107f6576000938185526020908582526040808720549682881061078a5761075f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95969798848451916101928361069c565b868252818552828220558681528161077a8482842054610a0a565b91888152808652205551908152a3565b60848483519060e560020a62461bcd0282526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a0380911691821561099e57169182156109315760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90810190818111610a65578110610a1e5790565b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60e060020a634e487b7102600052601160045260246000fd5b91828211610a9357508103908111610a655790565b610ab29060405191829160e560020a62461bcd02835260048301610622565b0390fdfea2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xE6 JUMPI PUSH2 0x14 PUSH1 0x3 SLOAD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB8 JUMPI JUMPDEST POP PUSH32 0x5377697368466973680000000000000000000000000000000000000000000012 PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH2 0x4E SWAP1 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x8A JUMPI JUMPDEST PUSH32 0x5346480000000000000000000000000000000000000000000000000000000006 PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP1 DUP2 PUSH2 0x140 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1F DUP2 DUP5 KECCAK256 SWAP3 ADD DIV DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xAD JUMPI POP POP PUSH2 0x57 JUMP JUMPDEST DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9F JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1F DUP2 DUP5 KECCAK256 SWAP3 ADD DIV DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDB JUMPI POP POP PUSH2 0x1D JUMP JUMPDEST DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x106 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFB JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x52A JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x500 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x4E1 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x3D7 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3BB JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x373 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x135 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x105 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xD6 PUSH2 0x66B JUMP JUMPDEST PUSH2 0xDE PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x124 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x6F3 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x150 PUSH2 0x66B JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 DUP2 DUP4 LT PUSH2 0x1C7 JUMPI PUSH1 0x20 DUP6 PUSH2 0x12E DUP7 PUSH2 0x1C0 DUP8 DUP8 DUP6 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP9 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x339 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x339 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x32F JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x319 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x29E JUMPI JUMPDEST PUSH2 0x29A DUP8 DUP8 PUSH2 0x290 DUP3 DUP13 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x2E3 JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x364 PUSH2 0x66B JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x12E PUSH1 0x20 SWAP3 PUSH2 0x1C0 PUSH2 0x396 PUSH2 0x66B JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x3F3 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x686 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x436 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x12E DUP8 DUP8 DUP8 PUSH2 0x6F3 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x49B JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x490 PUSH2 0x489 PUSH2 0x12E SWAP6 DUP9 SWAP8 PUSH1 0x20 SWAP10 MLOAD SWAP2 PUSH2 0x45B DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP12 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST CALLER DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x428 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x520 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x614 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x5FE JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x5DD JUMPI POP PUSH1 0x1 EQ PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x29A DUP7 DUP7 PUSH2 0x290 DUP3 DUP12 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x5CA JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x553 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x657 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x635 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x863 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SLOAD SWAP7 DUP3 DUP9 LT PUSH2 0x78A JUMPI PUSH2 0x75F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP7 SWAP8 SWAP9 DUP5 DUP5 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x77A DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP5 DUP4 MLOAD SWAP1 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x99E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x931 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA65 JUMPI DUP2 LT PUSH2 0xA1E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP3 DUP3 GT PUSH2 0xA93 JUMPI POP DUP2 SUB SWAP1 DUP2 GT PUSH2 0xA65 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0xAB2 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC SWAP9 0xD6 SWAP13 KECCAK256 SWAP7 MUL 0x2D SWAP10 ADDRESS LT SWAP13 DUP7 0xC7 NOT BLOCKHASH 0xCF JUMP 0xDD SWAP10 0xD5 PUSH5 0x26487D959B MOD RETURNDATACOPY 0xD0 0xE7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1482:11983:2:-:0;;;;;;;2136:19;1482:11983;;:::i;:::-;;;;;;-1:-1:-1;;1482:11983:2;2136:19;1482:11983;2166:15;1482:11983;;;;:::i;:::-;;;;;;-1:-1:-1;1482:11983:2;2166:15;1482:11983;;;;;;;;;;;-1:-1:-1;1482:11983:2;2166:15;1482:11983;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1482:11983:2;2136:19;1482:11983;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_5424": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_5427": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 2570,
									"id": 2796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_approve": {
									"entryPoint": 2256,
									"id": 2138,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_sub": {
									"entryPoint": 2686,
									"id": 2841,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_transfer": {
									"entryPoint": 1779,
									"id": 1950,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060408181526004918236101561001657600080fd5b6000927c010000000000000000000000000000000000000000000000000000000084350491826306fdde031461052a57508163095ea7b31461050057816318160ddd146104e157816323b872dd146103d7578163313ce567146103bb578163395093511461037357816370a082311461033d57816395d89b4114610233578163a457c2d71461013557508063a9059cbb146101055763dd62ed3e146100ba57600080fd5b34610101578060031936011261010157806020926100d661066b565b6100de610686565b600160a060020a0391821683526001865283832091168252845220549051908152f35b5080fd5b503461010157806003193601126101015760209061012e61012461066b565b60243590336106f3565b5160018152f35b8391503461010157826003193601126101015761015061066b565b9183602435913381526001602052818120600160a060020a03861682526020522054918183106101c75760208561012e866101c087878551916101928361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000088840152610a7e565b90336108d0565b608490602086519160e560020a62461bcd028352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b9190503461033957826003193601126103395780519183815491600283049160019182851694851561032f575b6020958686108114610319578589529081156102f6575060011461029e575b61029a8787610290828c03836106d1565b5191829182610622565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106102e3575050508261029a946102909282010194388061027f565b80548685018801529286019281016102c5565b60ff191688870152505050501515810283010192506102908261029a388061027f565b60248460228560e060020a634e487b7102835252fd5b93607f1693610260565b8280fd5b5050346101015760203660031901126101015780602092600160a060020a0361036461066b565b16815280845220549051908152f35b50503461010157806003193601126101015761012e6020926101c061039661066b565b9133815260018652848120600160a060020a0384168252865284602435912054610a0a565b5050346101015781600319360112610101576020905160128152f35b83915034610101576060366003190112610101576103f361066b565b6103fb610686565b918460443594600160a060020a038416815260016020528181203382526020522054906000198203610436575b60208661012e8787876106f3565b84821061049b575091839161049061048961012e958897602099519161045b8361069c565b601e83527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008b840152610a7e565b33836108d0565b919394819350610428565b606490602087519160e560020a62461bcd028352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101015781600319360112610101576020906002549051908152f35b50503461010157806003193601126101015760209061012e61052061066b565b60243590336108d0565b9291503461061e578360031936011261061e578360035460028104916001918281168015610614575b60209586861082146105fe57508488529081156105dd5750600114610584575b61029a8686610290828b03836106d1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106105ca575050508261029a94610290928201019438610573565b80548685018801529286019281016105ad565b60ff1916878601525050501515810283010192506102908261029a38610573565b83602260249260e060020a634e487b7102835252fd5b93607f1693610553565b8380fd5b6020808252825181830181905290939260005b82811061065757505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610635565b60043590600160a060020a038216820361068157565b600080fd5b60243590600160a060020a038216820361068157565b6040810190811067ffffffffffffffff8211176106b857604052565b60e060020a634e487b7102600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106b857604052565b929192600160a060020a0380911691821561086357169081156107f6576000938185526020908582526040808720549682881061078a5761075f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95969798848451916101928361069c565b868252818552828220558681528161077a8482842054610a0a565b91888152808652205551908152a3565b60848483519060e560020a62461bcd0282526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b600160a060020a0380911691821561099e57169182156109315760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b90810190818111610a65578110610a1e5790565b606460405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152fd5b60e060020a634e487b7102600052601160045260246000fd5b91828211610a9357508103908111610a655790565b610ab29060405191829160e560020a62461bcd02835260048301610622565b0390fdfea2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD DIV SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x52A JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x500 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x4E1 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x3D7 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3BB JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x373 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x135 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x105 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xD6 PUSH2 0x66B JUMP JUMPDEST PUSH2 0xDE PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x124 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x6F3 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x150 PUSH2 0x66B JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 DUP2 DUP4 LT PUSH2 0x1C7 JUMPI PUSH1 0x20 DUP6 PUSH2 0x12E DUP7 PUSH2 0x1C0 DUP8 DUP8 DUP6 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP9 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x339 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x339 JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP2 PUSH1 0x2 DUP4 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x32F JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x319 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x29E JUMPI JUMPDEST PUSH2 0x29A DUP8 DUP8 PUSH2 0x290 DUP3 DUP13 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x2E3 JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE DUP1 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x364 PUSH2 0x66B JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x12E PUSH1 0x20 SWAP3 PUSH2 0x1C0 PUSH2 0x396 PUSH2 0x66B JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x3F3 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x686 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x436 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x12E DUP8 DUP8 DUP8 PUSH2 0x6F3 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x49B JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x490 PUSH2 0x489 PUSH2 0x12E SWAP6 DUP9 SWAP8 PUSH1 0x20 SWAP10 MLOAD SWAP2 PUSH2 0x45B DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1E DUP4 MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP12 DUP5 ADD MSTORE PUSH2 0xA7E JUMP JUMPDEST CALLER DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x428 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x12E PUSH2 0x520 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x8D0 JUMP JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x61E JUMPI DUP4 PUSH1 0x3 SLOAD PUSH1 0x2 DUP2 DIV SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x614 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x5FE JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x5DD JUMPI POP PUSH1 0x1 EQ PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x29A DUP7 DUP7 PUSH2 0x290 DUP3 DUP12 SUB DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x5CA JUMPI POP POP POP DUP3 PUSH2 0x29A SWAP5 PUSH2 0x290 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO DUP2 MUL DUP4 ADD ADD SWAP3 POP PUSH2 0x290 DUP3 PUSH2 0x29A CODESIZE PUSH2 0x573 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x553 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x657 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x635 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND DUP3 SUB PUSH2 0x681 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x863 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SLOAD SWAP7 DUP3 DUP9 LT PUSH2 0x78A JUMPI PUSH2 0x75F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP7 SWAP8 SWAP9 DUP5 DUP5 MLOAD SWAP2 PUSH2 0x192 DUP4 PUSH2 0x69C JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP2 PUSH2 0x77A DUP5 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP2 DUP9 DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 DUP5 DUP4 MLOAD SWAP1 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x99E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x931 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA65 JUMPI DUP2 LT PUSH2 0xA1E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP3 DUP3 GT PUSH2 0xA93 JUMPI POP DUP2 SUB SWAP1 DUP2 GT PUSH2 0xA65 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0xAB2 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x622 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC SWAP9 0xD6 SWAP13 KECCAK256 SWAP7 MUL 0x2D SWAP10 ADDRESS LT SWAP13 DUP7 0xC7 NOT BLOCKHASH 0xCF JUMP 0xDD SWAP10 0xD5 PUSH5 0x26487D959B MOD RETURNDATACOPY 0xD0 0xE7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1482:11983:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1482:11983:2;;;;;4255:11;1482:11983;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:6;1482:11983;;:::i;:::-;;;736:10:9;;4039:6:2;:::i;:::-;1482:11983;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;736:10:9;;1482:11983:2;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;7059:35;;;;1482:11983;;;;7189:37;1482:11983;1036:43:8;1482:11983:2;;;;;;;;:::i;:::-;;;;;;;;;1036:43:8;:::i;:::-;736:10:9;;7189:37:2;:::i;1482:11983::-;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;-1:-1:-1;;;;1482:11983:2;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;;;-1:-1:-1;;;;;1482:11983:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6264:41;1482:11983;;6264:41;1482:11983;;:::i;:::-;736:10:9;;1482:11983:2;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;6264:41;:::i;1482:11983::-;;;;;;;;;;;;;;;;;3304:2;1482:11983;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;736:10:9;1482:11983:2;;;;;;11787:17;;;11767:37;;11763:239;;1482:11983;;5649:6;;;;;;:::i;11763:239::-;11829:26;;;1482:11983;;;;;;11950:28;1036:43:8;5649:6:2;1482:11983;;;;;;;;;;:::i;:::-;;;;;;;;;1036:43:8;:::i;:::-;736:10:9;11950:28:2;;:::i;:::-;11763:239;;;;;;;;1482:11983;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3467:12;1482:11983;;;;;;;;;;;;;;;;;;;;;;;4774:6;1482:11983;;:::i;:::-;;;736:10:9;;4774:6:2;:::i;1482:11983::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1482:11983:2;;;;;-1:-1:-1;;;1482:11983:2;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7736:837::-;;;;-1:-1:-1;;;;;1482:11983:2;;;7867:18;;;1482:11983;;;7946:16;;;1482:11983;;7883:1;1482:11983;;;;;;;;;;;;;;8122:21;;;;1482:11983;;1036:43:8;8489:26:2;1482:11983;;;;;;;;;;;:::i;1036:43:8:-;1482:11983:2;;;;;;;;;;;;;;8439:25;1482:11983;;;;;8439:25;:::i;:::-;1482:11983;;;;;;;;;;;;;8489:26;7736:837::o;1482:11983::-;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;10894:380;-1:-1:-1;;;;;1482:11983:2;;;11030:19;;;1482:11983;;;11109:21;;;1482:11983;;;11234:32;1482:11983;;11047:1;1482:11983;11182:11;1482:11983;;;11047:1;1482:11983;;11047:1;1482:11983;;;;;11047:1;1482:11983;;;;;;;11234:32;10894:380::o;1482:11983::-;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;;;;;487:181:8;;1482:11983:2;;;;;;;;601:6:8;;1482:11983:2;;487:181:8;:::o;1482:11983:2:-;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1482:11983:2;;;;;-1:-1:-1;1482:11983:2;1390:192:8;;1504:6;;;1482:11983:2;;;;;;;;;;1390:192:8;:::o;1482:11983:2:-;;;;;;;;-1:-1:-1;;;;;1482:11983:2;;;;;;:::i;:::-;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "559200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1061",
								"approve(address,uint256)": "22403",
								"balanceOf(address)": "776",
								"decimals()": "264",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "22977",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "426",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "5377697368466973680000000000000000000000000000000000000000000012"
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "5346480000000000000000000000000000000000000000000000000000000006"
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1482,
									"end": 13465,
									"name": "JUMP",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc98d69c2096022d9930109c86c71940cf56dd99d56426487d959b063ed0e7de64736f6c63430008110033",
									".code": [
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4266,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4039,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7189,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6264,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5649,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 11950,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11950,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11763,
											"end": 12002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4774,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1036,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8439,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 8573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10894,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11130,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11182,
											"end": 11193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11234,
											"end": 11266,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10894,
											"end": 11274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 487,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 487,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 487,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 487,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13465,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\nimport \\\"../interfaces/IERC20.sol\\\";\\r\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\r\\nimport \\\"../libraries/SafeMath.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor() {\\r\\n        _name = \\\"SwishFish\\\";\\r\\n        _symbol = \\\"SFH\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender).add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n    unchecked {\\r\\n        _approve(owner, spender, currentAllowance.sub(subtractedValue));\\r\\n    }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n    unchecked {\\r\\n        _balances[from] = fromBalance.sub(amount);\\r\\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n        // decrementing then incrementing.\\r\\n        _balances[to] = _balances[to].add(amount);\\r\\n    }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n    unchecked {\\r\\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n    }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = _balances[account].sub(amount);\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply = _totalSupply.sub(amount);\\r\\n        }\\r\\n        emit Transfer(account, address(0), amount);\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance.sub(amount));\\r\\n        }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x9a8023d613b42d4e4757f8fe75f37be33054ae44be3c966bd77538b9974aeb77\",\"license\":\"MIT\"},\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"},\"interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x17e11f3a7f387d611d79692f57a12340a2eec6e1dcf096e361723ddfd8a7ec72\",\"license\":\"MIT\"},\"libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Wrappers over Solidity's arithmetic operations.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x230abde3f0534bbf161e909591a48372dc2809afeece53563b5d7bce2a6d1640\",\"license\":\"MIT\"},\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1615,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1621,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1623,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1625,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1627,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb7aa62de070c259e9466be8b5ac48d4c4fca67521bd05c4debf128739d61c74\",\"license\":\"MIT\"},\"interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x17e11f3a7f387d611d79692f57a12340a2eec6e1dcf096e361723ddfd8a7ec72\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa14a8f5dad5e8e68d13a0ad59507baf7eb243e2d2f9f5438f4c28ce95309d3c5\",\"license\":\"GPL-3.0\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8328ed8fd4438c01a0eb7c83c7d531a5792c7996f28a815da0e241970ec269bc\",\"license\":\"GPL-3.0\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8328ed8fd4438c01a0eb7c83c7d531a5792c7996f28a815da0e241970ec269bc\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./IUniswapV2Router01.sol\\\";\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x8dd2dbe49fd4b174cc7b8fd4dcca259791dced6ac5158a26c35e4c648464e211\",\"license\":\"GPL-3.0\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeMath.sol\":224:4943  library SafeMath {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeMath.sol\":224:4943  library SafeMath {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 DIV PUSH18 0x55931071A6528AEEF6DA4A8135F663F5FE3E DUP11 RETURNDATACOPY STATICCALL 0xDA EQ 0xC1 0xD 0xAC SWAP4 0x4C EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:4719:8:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 DIV PUSH18 0x55931071A6528AEEF6DA4A8135F663F5FE3E DUP11 RETURNDATACOPY STATICCALL 0xDA EQ 0xC1 0xD 0xAC SWAP4 0x4C EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:4719:8:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 4943,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4047155931071a6528aeef6da4a8135f663f5fe3e8a3efada14c10dac934c3f64736f6c63430008110033",
									".code": [
										{
											"begin": 224,
											"end": 4943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4943,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 224,
											"end": 4943,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Wrappers over Solidity's arithmetic operations.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x230abde3f0534bbf161e909591a48372dc2809afeece53563b5d7bce2a6d1640\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5ad02aef65a10b88cc02acbc001a86c026a0d989e9a9f7817dfe5a88b2f005a4\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/MultiSignature.sol": {
				"MultiSignature": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ApproveProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "RevokeProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "SubmitProposal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "author",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateSalesStatus",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "salesEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "swapAndAddLiquidity",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "updateWithdrawOptions",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "withdrawPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "updateTaxesFees",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "heisenVerseTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "marketingTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityTaxFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "transferBackend",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "backendAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      0x0100000000000000000000000000000000000000000000000000000000\n      dup3\n      calldataload\n      div\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_7, callvalue)\n      jumpi(tag_7, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup3\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      0x08\n      swap1\n      dup4\n      0x01c0\n      swap5\n      mstore\n      mul\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup2\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      0xff\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      dup1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      dup5\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      and\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap3\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup2\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap4\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n      dup3\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup4\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap2\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n      dup6\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n      swap5\n      add\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n      sload\n      swap6\n      dup6\n      0x01000000000000000000000000000000000000000000000000\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap11\n      dup12\n      dup2\n      and\n      dup14\n      mstore\n      dup13\n      0x20\n      dup5\n      0x010000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x40\n      dup5\n      0x01000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x60\n      dup5\n      0x0100000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      dup13\n      0x80\n      dup5\n      0x010000000000000000000000000000000000000000000000\n      dup5\n      div\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      iszero\n      iszero\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      swap6\n      dup7\n      dup10\n      add\n      mstore\n      0x0120\n      dup9\n      add\n      mstore\n      0x0140\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n      dup2\n      and\n      iszero\n      iszero\n      0x0180\n      dup6\n      add\n      mstore\n      div\n      and\n      0x01a0\n      dup3\n      add\n      mstore\n      return\n        /* \"utils/MultiSignature.sol\":887:914  Proposal[] public proposals */\n    tag_9:\n      dup3\n      dup1\n      revert\n        /* \"utils/MultiSignature.sol\":112:1568  contract MultiSignature {... */\n    tag_7:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102db908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000907c010000000000000000000000000000000000000000000000000000000082350463013cf08b1461004657600080fd5b346102a15760203660031901126102a157600435825481101561029d57600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2DB SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV PUSH4 0x13CF08B EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A1 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH22 0xBDDE4BE71743BB743FB26A879B5BAD0D83B68E190258 0x2F ORIGIN SELFDESTRUCT SWAP15 0xD7 0xDF DUP2 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "112:1456:10:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b6000907c010000000000000000000000000000000000000000000000000000000082350463013cf08b1461004657600080fd5b346102a15760203660031901126102a157600435825481101561029d57600890836101c0945202807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56481015460ff807f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015416927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566810154937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678201547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568830154917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5698501549401549585780100000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9a8b81168d528c6020847401000000000000000000000000000000000000000084041615159101528c604084750100000000000000000000000000000000000000000084041615159101528c60608476010000000000000000000000000000000000000000000084041615159101528c6080847701000000000000000000000000000000000000000000000084041615159101520416151560a08b015260c08a0152151560e089015261010095868901526101208801526101408701526101608601528116151561018085015204166101a0820152f35b8280fd5b5080fdfea26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 CALLDATALOAD DIV PUSH4 0x13CF08B EQ PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A1 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x8 SWAP1 DUP4 PUSH2 0x1C0 SWAP5 MSTORE MUL DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SLOAD SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP2 ADD SLOAD PUSH1 0xFF DUP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP5 ADD SLOAD AND SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP2 ADD SLOAD SWAP4 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567 DUP3 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP4 ADD SLOAD SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP6 DUP6 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 DUP2 AND DUP14 MSTORE DUP13 PUSH1 0x20 DUP5 PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x40 DUP5 PUSH22 0x1000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x60 DUP5 PUSH23 0x100000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP13 PUSH1 0x80 DUP5 PUSH24 0x10000000000000000000000000000000000000000000000 DUP5 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DIV AND ISZERO ISZERO PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP6 DUP7 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE DIV AND PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH22 0xBDDE4BE71743BB743FB26A879B5BAD0D83B68E190258 0x2F ORIGIN SELFDESTRUCT SWAP15 0xD7 0xDF DUP2 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "112:1456:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;112:1456:10;;;;;;;;887:27;;;;;112:1456;;;;;;;;;;;887:27;;;;112:1456;;887:27;;;;112:1456;;887:27;;;;112:1456;887:27;;;;112:1456;887:27;;;112:1456;887:27;;;;;112:1456;887:27;;112:1456;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:27;;;;112:1456;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "146200",
								"executionCost": "196",
								"totalCost": "146396"
							},
							"external": {
								"proposals(uint256)": "2459"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "RETURN",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 1568,
									"name": "REVERT",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202975bdde4be71743bb743fb26a879b5bad0d83b68e1902582f32ff9ed7df812164736f6c63430008110033",
									".code": [
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "13CF08B"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E567"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E569"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "10000000000000000000000000000000000000000000000"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 112,
											"end": 1568,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"SwishFishToken.sol",
								"access/Ownable.sol",
								"contracts/ERC20.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IUniswapV2Factory.sol",
								"interfaces/IUniswapV2Router01.sol",
								"interfaces/IUniswapV2Router02.sol",
								"libraries/SafeMath.sol",
								"utils/Context.sol",
								"utils/MultiSignature.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"proposals(uint256)": "013cf08b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ApproveProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"RevokeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"SubmitProposal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateSalesStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salesEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swapAndAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateWithdrawOptions\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updateTaxesFees\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"heisenVerseTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketingTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferBackend\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"backendAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/MultiSignature.sol\":\"MultiSignature\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"utils/MultiSignature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Coin2Fish Contract (utils/MultiSigWallet.sol)\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ncontract MultiSignature {\\r\\n    event DepositProposal(address indexed sender, uint amount);\\r\\n    event SubmitProposal(uint indexed proposalId);\\r\\n    event ApproveProposal(address indexed owner, uint indexed proposalId);\\r\\n    event RevokeProposal(address indexed owner, uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        address author;\\r\\n        bool executed;\\r\\n        bool updateSalesStatus;\\r\\n        bool salesEnabled;\\r\\n        bool swapAndAddLiquidity;\\r\\n        bool updateWithdrawOptions;\\r\\n        uint256 withdrawPrice;\\r\\n        bool updateTaxesFees;\\r\\n        uint256 heisenVerseTaxFee;\\r\\n        uint256 marketingTaxFee;\\r\\n        uint256 teamTaxFee;\\r\\n        uint256 liquidityTaxFee;\\r\\n        bool transferBackend;\\r\\n        address backendAddress;\\r\\n    }\\r\\n\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    mapping(uint => mapping(address => bool)) internal proposalApproved;\\r\\n    constructor() {}\\r\\n\\r\\n    modifier proposalExists(uint _proposalId) {\\r\\n        require(_proposalId < proposals.length, \\\"MultiSignatureWallet: proposal does not exist\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotApproved(uint _proposalId) {\\r\\n        require(!proposalApproved[_proposalId][msg.sender], \\\"MultiSignatureWallet: proposal already was approved by owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier proposalNotExecuted(uint _proposalId) {\\r\\n        require(!proposals[_proposalId].executed, \\\"MultiSignatureWallet: proposal was already executed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdc5e99ad2cb681bef03489d4a1724ea612944d73f9a371ad04e1b0535c2e1f46\",\"license\":\"MIT\"}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3042,
								"contract": "utils/MultiSignature.sol:MultiSignature",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)3038_storage)dyn_storage"
							},
							{
								"astId": 3048,
								"contract": "utils/MultiSignature.sol:MultiSignature",
								"label": "proposalApproved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)3038_storage)dyn_storage": {
								"base": "t_struct(Proposal)3038_storage",
								"encoding": "dynamic_array",
								"label": "struct MultiSignature.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Proposal)3038_storage": {
								"encoding": "inplace",
								"label": "struct MultiSignature.Proposal",
								"members": [
									{
										"astId": 3011,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "author",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3013,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "executed",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3015,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateSalesStatus",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3017,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "salesEnabled",
										"offset": 22,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3019,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "swapAndAddLiquidity",
										"offset": 23,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3021,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateWithdrawOptions",
										"offset": 24,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3023,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "withdrawPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3025,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "updateTaxesFees",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 3027,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "heisenVerseTaxFee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "marketingTaxFee",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "teamTaxFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "liquidityTaxFee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3035,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "transferBackend",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 3037,
										"contract": "utils/MultiSignature.sol:MultiSignature",
										"label": "backendAddress",
										"offset": 1,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SwishFishToken.sol": {
				"ast": {
					"absolutePath": "SwishFishToken.sol",
					"exportedSymbols": {
						"Context": [
							2985
						],
						"ERC20": [
							2205
						],
						"IERC20": [
							2283
						],
						"IERC20Metadata": [
							2308
						],
						"IUniswapV2Factory": [
							2371
						],
						"IUniswapV2Router01": [
							2679
						],
						"IUniswapV2Router02": [
							2767
						],
						"MultiSignature": [
							3099
						],
						"Ownable": [
							1595
						],
						"SafeMath": [
							2963
						],
						"SwishFish": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:0"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./contracts/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 2206,
							"src": "106:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 1596,
							"src": "139:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUniswapV2Factory.sol",
							"file": "./interfaces/IUniswapV2Factory.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 2372,
							"src": "171:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUniswapV2Router02.sol",
							"file": "./interfaces/IUniswapV2Router02.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 2768,
							"src": "217:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "ERC20",
										"nameLocations": [
											"370:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2205,
										"src": "370:5:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "370:5:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "Ownable",
										"nameLocations": [
											"377:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1595,
										"src": "377:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "377:7:0"
								}
							],
							"canonicalName": "SwishFish",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "266:80:0",
								"text": " @title SwishFish Contract for SwishFish Token\n @author HeisenDev"
							},
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392,
								1595,
								3099,
								2205,
								2308,
								2283,
								2985
							],
							"name": "SwishFish",
							"nameLocation": "357:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "SafeMath",
										"nameLocations": [
											"398:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2963,
										"src": "398:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "392:27:0",
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 16,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "451:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "425:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 15,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 14,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"425:18:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2767,
											"src": "425:18:0"
										},
										"referencedDeclaration": 2767,
										"src": "425:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "475:55:0",
										"text": " Definition of the token parameters"
									},
									"id": 24,
									"mutability": "mutable",
									"name": "_tokenTotalSupply",
									"nameLocation": "549:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "536:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "536:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 19,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "569:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 22,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 20,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 21,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "588:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "582:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "569:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c84ad9a5",
									"id": 27,
									"mutability": "mutable",
									"name": "salesEnabled",
									"nameLocation": "611:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "599:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 25,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "599:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "626:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "firstLiquidityEnabled",
									"nameLocation": "651:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "638:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 28,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "638:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "675:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_authorizedWithdraws",
									"nameLocation": "726:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "690:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "698:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "690:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 32,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "709:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_accountWithdrawalLast",
									"nameLocation": "789:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "753:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "761:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "753:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_accountWithdrawalCount",
									"nameLocation": "854:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "818:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "826:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "818:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7918447e",
									"id": 45,
									"mutability": "mutable",
									"name": "withdrawPrice",
									"nameLocation": "900:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "888:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "888:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303035",
										"id": 44,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "916:11:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"value": "0.005"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "_maxWithdrawalCount",
									"nameLocation": "950:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "934:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "934:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "972:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_maxTransactionWithdrawAmount",
									"nameLocation": "996:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "980:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "980:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1028:13:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"value": "1000000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1050:410:0",
										"text": " Definition of the Project Wallets\n `addressHeisenDev` Corresponds to the wallet address where the development\n team will receive their payments\n `addressMarketing` Corresponds to the wallet address where the funds\n for marketing will be received\n `addressTeam` Represents the wallet where teams and other\n collaborators will receive their payments"
									},
									"functionSelector": "7a594a2b",
									"id": 58,
									"mutability": "mutable",
									"name": "addressHeisenDev",
									"nameLocation": "1491:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1468:93:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1468:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307845446137333430396434624244313437663445313239354137336132436132343361353239333338",
												"id": 56,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1518:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xEDa73409d4bBD147f4E1295A73a2Ca243a529338"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 55,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1510:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 54,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1510:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 57,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1510:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0abdc640",
									"id": 64,
									"mutability": "mutable",
									"name": "addressMarketing",
									"nameLocation": "1591:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1568:93:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 59,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1568:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307833633143643833443838353038303343396334326646353038334635366236366230304642443631",
												"id": 62,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1618:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x3c1Cd83D8850803C9c42fF5083F56b66b00FBD61"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1610:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 60,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1610:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1610:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "562e9df9",
									"id": 70,
									"mutability": "mutable",
									"name": "addressTeam",
									"nameLocation": "1691:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1668:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 65,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1668:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836333032346143373346453737343237463230653832343746413236463437304330443937303042",
												"id": 68,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1713:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x63024aC73FE77427F20e8247FA26F470C0D9700B"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 67,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1705:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 66,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1705:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 69,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1705:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1765:367:0",
										"text": " Definition of the taxes fees for swaps\n `taxFeeHeisenverse` 2%  Initial tax fee during presale\n `taxFeeMarketing` 3%  Initial tax fee during presale\n `taxFeeTeam` 3%  Initial tax fee during presale\n `taxFeeLiquidity` 2%  Initial tax fee during presale\n This value can be modified by the method {updateTaxesFees}"
									},
									"functionSelector": "9e5cd74a",
									"id": 74,
									"mutability": "mutable",
									"name": "taxFeeHeisenverse",
									"nameLocation": "2153:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2138:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2138:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2173:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d81936c",
									"id": 77,
									"mutability": "mutable",
									"name": "taxFeeMarketing",
									"nameLocation": "2196:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2181:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2181:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2214:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6bba0ae",
									"id": 80,
									"mutability": "mutable",
									"name": "taxFeeTeam",
									"nameLocation": "2237:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2222:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 78,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2222:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2250:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "933f5e07",
									"id": 83,
									"mutability": "mutable",
									"name": "taxFeeLiquidity",
									"nameLocation": "2273:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2258:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2258:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2291:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2301:135:0",
										"text": " Definition of pools\n `_poolHeisenDev`\n `_poolMarketing`\n `_poolTeam`\n `_poolLiquidity`"
									},
									"functionSelector": "39262773",
									"id": 87,
									"mutability": "mutable",
									"name": "_poolHeisenDev",
									"nameLocation": "2457:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2442:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2442:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2474:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b45a47a",
									"id": 90,
									"mutability": "mutable",
									"name": "_poolMarketing",
									"nameLocation": "2497:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2482:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2482:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2514:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "553000c1",
									"id": 93,
									"mutability": "mutable",
									"name": "_poolTeam",
									"nameLocation": "2537:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2522:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2522:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 92,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2549:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a9af7ba",
									"id": 96,
									"mutability": "mutable",
									"name": "_poolLiquidity",
									"nameLocation": "2572:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2557:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 94,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2557:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 95,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2589:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_isExcludedFromFees",
									"nameLocation": "2632:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2599:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 99,
										"keyType": {
											"id": 97,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2607:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2599:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 98,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2618:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "_isExcludedFromLimits",
									"nameLocation": "2691:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2658:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 103,
										"keyType": {
											"id": 101,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2666:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2658:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 102,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2677:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "automatedMarketMakerPairs",
									"nameLocation": "2752:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "2719:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 107,
										"keyType": {
											"id": 105,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2727:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2719:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 106,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2738:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 114,
									"name": "Deposit",
									"nameLocation": "2792:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2816:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2800:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2800:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2829:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2824:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2799:37:0"
									},
									"src": "2786:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6cd8c20496fa31dba3f83c7adca278c356a6caa5529741a5d2b9b774613c198b",
									"id": 116,
									"name": "BuyEgg",
									"nameLocation": "2849:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:0"
									},
									"src": "2843:15:0"
								},
								{
									"anonymous": false,
									"eventSelector": "01b48326d6e9158a921c6006b9d6ad4b9d777c488e9b7924b3e0c8b0b1304604",
									"id": 120,
									"name": "SalesState",
									"nameLocation": "2870:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2886:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2881:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:13:0"
									},
									"src": "2864:30:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d",
									"id": 124,
									"name": "Withdraw",
									"nameLocation": "2906:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2920:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2915:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2915:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:13:0"
									},
									"src": "2900:28:0"
								},
								{
									"anonymous": false,
									"eventSelector": "21a3a3648d0b2afc084acd733d71600b506fa4eca7ef1f5e24718c5e17f4e7ff",
									"id": 128,
									"name": "TeamPayment",
									"nameLocation": "2940:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2957:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2952:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:13:0"
									},
									"src": "2934:31:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c5d4fbaddd2087d369f5cf16ad7544f41ef0dc291b510e4cb1cb6e6eaae74539",
									"id": 132,
									"name": "FirstLiquidityAdded",
									"nameLocation": "2977:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": false,
												"mutability": "mutable",
												"name": "bnb",
												"nameLocation": "3015:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3007:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2996:29:0"
									},
									"src": "2971:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa",
									"id": 136,
									"name": "LiquidityAdded",
									"nameLocation": "3038:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"indexed": false,
												"mutability": "mutable",
												"name": "bnb",
												"nameLocation": "3071:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "3063:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3052:29:0"
									},
									"src": "3032:50:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ac9d517045a5ec57da9f145e5c349535857baa98b41fa00aea81886b40b65ee9",
									"id": 146,
									"name": "UpdateTaxesFees",
									"nameLocation": "3094:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeHeisenverse",
												"nameLocation": "3128:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3120:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeMarketing",
												"nameLocation": "3164:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3156:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeTeam",
												"nameLocation": "3198:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3190:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxFeeLiquidity",
												"nameLocation": "3227:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3219:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3109:140:0"
									},
									"src": "3088:162:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7752c7a6d518ab1cf03b50e7d7fd3da3258eb319dc343789e0a7bed06c43066c",
									"id": 150,
									"name": "UpdateWithdrawOptions",
									"nameLocation": "3262:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawPrice",
												"nameLocation": "3302:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3294:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3283:39:0"
									},
									"src": "3256:67:0"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3410:1317:0",
										"statements": [
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "3440:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "3421:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 162,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 161,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"3421:18:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2767,
																"src": "3421:18:0"
															},
															"referencedDeclaration": 2767,
															"src": "3421:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3478:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "3459:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2767_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3459:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3421:100:0"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "_uniswapV2Pair",
														"nameLocation": "3540:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "3532:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 168,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3632:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3624:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3624:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3624:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 180,
																	"name": "_uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "3639:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																		"typeString": "contract IUniswapV2Router02"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3656:4:0",
																"memberName": "WETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2383,
																"src": "3639:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																	"typeString": "function () pure external returns (address)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3639:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 171,
																			"name": "_uniswapV2Router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "3575:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																				"typeString": "contract IUniswapV2Router02"
																			}
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3592:7:0",
																		"memberName": "factory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2378,
																		"src": "3575:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3575:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 170,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "3557:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$2371_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3557:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$2371",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3613:10:0",
														"memberName": "createPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2360,
														"src": "3557:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) external returns (address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3532:131:0"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3676:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 186,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "3694:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "3676:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "3676:34:0"
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 189,
															"name": "automatedMarketMakerPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3723:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 191,
														"indexExpression": {
															"id": 190,
															"name": "_uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3749:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3723:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3767:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3723:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3723:48:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 195,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "3782:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 200,
														"indexExpression": {
															"arguments": [
																{
																	"id": 198,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3810:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3802:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 196,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3802:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3802:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3782:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3819:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3782:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "3782:41:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 204,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "3834:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 206,
														"indexExpression": {
															"id": 205,
															"name": "addressHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3854:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3834:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3874:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3834:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "3834:44:0"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 210,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "3889:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 212,
														"indexExpression": {
															"id": 211,
															"name": "addressMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "3909:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3889:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3929:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3889:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "3889:44:0"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 216,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "3944:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 218,
														"indexExpression": {
															"id": 217,
															"name": "addressTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3964:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3944:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3979:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3944:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "3944:39:0"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 222,
															"name": "_isExcludedFromLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "3996:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 227,
														"indexExpression": {
															"arguments": [
																{
																	"id": 225,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4026:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4018:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4018:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4018:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3996:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4035:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3996:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3996:43:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 231,
															"name": "_isExcludedFromLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "4050:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 233,
														"indexExpression": {
															"id": 232,
															"name": "_uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4072:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4050:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4090:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4050:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "4050:44:0"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 237,
															"name": "_isExcludedFromLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "4105:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 239,
														"indexExpression": {
															"id": 238,
															"name": "_backend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4127:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4105:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4139:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4105:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4105:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "_owner1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "_addOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "4312:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "4312:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 248,
															"name": "_owner2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4351:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 247,
														"name": "_addOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "4341:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4341:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "4341:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"name": "_owner3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 251,
														"name": "_addOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "4370:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4370:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "4370:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "_backend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4509:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 255,
														"name": "_transferBackend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4492:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4492:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4492:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 262,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4694:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4686:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4686:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4686:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "_tokenTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4701:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 259,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "4680:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4680:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "4680:39:0"
											}
										]
									},
									"id": 268,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_owner1",
												"nameLocation": "3349:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_owner2",
												"nameLocation": "3366:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3358:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "_owner3",
												"nameLocation": "3383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_backend",
												"nameLocation": "3400:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3392:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3340:69:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3410:0:0"
									},
									"scope": 1392,
									"src": "3329:1398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "4819:101:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 272,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4834:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4838:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4834:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4846:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4834:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "4830:83:0",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "4849:64:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 277,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2975,
																			"src": "4877:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4877:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 279,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4891:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "4891:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 276,
																	"name": "Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "4869:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 282,
															"nodeType": "EmitStatement",
															"src": "4864:37:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "4735:51:0",
										"text": "@dev Fallback function allows to deposit ether."
									},
									"id": 286,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4799:2:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4819:0:0"
									},
									"scope": 1392,
									"src": "4792:128:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4960:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "salesEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "4979:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c652069736e277420656e61626c6564",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4993:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															},
															"value": "Presale isn't enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "4971:46:0"
											},
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "liquidityTokens",
														"nameLocation": "5036:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5028:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5091:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 299,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5072:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwishFish_$1392",
																						"typeString": "contract SwishFish"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwishFish_$1392",
																						"typeString": "contract SwishFish"
																					}
																				],
																				"id": 298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5064:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 297,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5064:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5064:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 296,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "5054:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5054:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5079:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2876,
																"src": "5054:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5054:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5087:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2893,
														"src": "5054:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5054:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5028:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 310,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5119:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5136:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5140:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5136:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 309,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "5106:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5106:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "5106:40:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "BuyEgg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "5162:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5162:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "EmitStatement",
												"src": "5157:13:0"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "4937:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4940:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4960:0:0"
									},
									"scope": 1392,
									"src": "4928:250:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "5251:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "firstLiquidityEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "5270:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c652069736e277420656e61626c6564",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5293:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															},
															"value": "Presale isn't enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e9bf276d2ca2ff64e3527b0937bc03bd50aa810d8aac9989662910353319d30",
																"typeString": "literal_string \"Presale isn't enabled\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5262:55:0"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "firstLiquidityEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "5328:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5352:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5328:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "5328:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5381:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5389:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5393:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5389:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "5368:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "5368:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 342,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5435:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5439:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5435:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"name": "FirstLiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "5415:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5415:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "EmitStatement",
												"src": "5410:35:0"
											}
										]
									},
									"functionSelector": "d8a0f828",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 323,
												"name": "onlyOwner",
												"nameLocations": [
													"5241:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "5241:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5241:9:0"
										}
									],
									"name": "firstLiquidity",
									"nameLocation": "5193:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "5216:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "5208:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:16:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:0"
									},
									"scope": 1392,
									"src": "5184:269:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "5501:539:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 357,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5536:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5528:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 355,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5528:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5528:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "addressHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "5543:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 360,
															"name": "_poolHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "5561:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 352,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1392_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5518:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "5512:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5512:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5512:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 368,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5611:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5603:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5603:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "addressMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "5618:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 371,
															"name": "_poolMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "5636:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 363,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5587:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1392_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5593:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "5587:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5587:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5587:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 379,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5686:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5678:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5678:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5678:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "addressTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "5693:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 382,
															"name": "_poolTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "5706:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 374,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5662:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1392_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5668:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "5662:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "5662:54:0"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5735:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "5727:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 387,
															"name": "_poolHeisenDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "5744:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 388,
															"name": "_poolMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "5761:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5744:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 390,
														"name": "_poolTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "5778:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5744:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5727:60:0"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_poolHeisenDev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "5798:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5815:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5798:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "5798:18:0"
											},
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "_poolMarketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "5827:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5844:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5827:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "5827:18:0"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_poolTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "5856:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5856:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5856:13:0"
											},
											{
												"assignments": [
													406,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "5886:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "5881:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 417,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5948:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 407,
																"name": "addressHeisenDev",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5896:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5913:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5896:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 411,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5933:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SwishFish_$1392",
																				"typeString": "contract SwishFish"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SwishFish_$1392",
																				"typeString": "contract SwishFish"
																			}
																		],
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5925:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 409,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5925:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5925:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5939:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5925:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5896:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5880:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 419,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420424e42",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5976:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ee519189d040f7fa288e5ec15c5a24a2fc54b5cf729bb0ea3fe75c8d86bdd80",
																"typeString": "literal_string \"Failed to send BNB\""
															},
															"value": "Failed to send BNB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ee519189d040f7fa288e5ec15c5a24a2fc54b5cf729bb0ea3fe75c8d86bdd80",
																"typeString": "literal_string \"Failed to send BNB\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5962:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "5962:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6025:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 423,
														"name": "TeamPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "6013:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "EmitStatement",
												"src": "6008:24:0"
											}
										]
									},
									"functionSelector": "d7196dd9",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 349,
												"name": "onlyOwner",
												"nameLocations": [
													"5491:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "5491:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5491:9:0"
										}
									],
									"name": "teamPayment",
									"nameLocation": "5468:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5479:2:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5501:0:0"
									},
									"scope": 1392,
									"src": "5459:581:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1950
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "6161:551:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "6180:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6188:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6188:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6188:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6180:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6172:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "6172:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "6259:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6273:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6265:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 450,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6265:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6265:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6259:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6277:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6251:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6251:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6251:64:0"
											},
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "6331:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "6326:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 458,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6326:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 469,
												"initialValue": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6341:55:0",
													"subExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 460,
																		"name": "_isExcludedFromFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "6343:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 462,
																	"indexExpression": {
																		"id": 461,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "6363:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6343:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"baseExpression": {
																		"id": 463,
																		"name": "_isExcludedFromFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "6372:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 465,
																	"indexExpression": {
																		"id": 464,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "6392:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6372:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6343:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6342:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6326:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 470,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 471,
															"name": "automatedMarketMakerPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "6424:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 473,
														"indexExpression": {
															"id": 472,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "6450:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6424:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6413:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 497,
												"nodeType": "IfStatement",
												"src": "6409:252:0",
												"trueBody": {
													"id": 496,
													"nodeType": "Block",
													"src": "6457:204:0",
													"statements": [
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "liquidityAmount",
																	"nameLocation": "6480:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 496,
																	"src": "6472:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6472:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 484,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6530:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 479,
																				"name": "taxFeeLiquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "6509:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 477,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "6498:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6505:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "6498:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6498:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6526:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "6498:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6472:62:0"
														},
														{
															"expression": {
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 485,
																	"name": "_poolLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "6549:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 488,
																			"name": "liquidityAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6585:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 486,
																			"name": "_poolLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "6566:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6581:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2796,
																		"src": "6566:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6566:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6549:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 491,
															"nodeType": "ExpressionStatement",
															"src": "6549:52:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 493,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "6642:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 492,
																	"name": "swapAndAddLiquidityTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "6616:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6616:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6616:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "6687:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "6693:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "6697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 498,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "6671:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1392_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6677:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "6671:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6671:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "6671:33:0"
											}
										]
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6057:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6152:8:0"
									},
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6085:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6108:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6100:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6129:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6121:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:76:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6161:0:0"
									},
									"scope": 1392,
									"src": "6048:664:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "6759:273:0",
										"statements": [
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "6778:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "6770:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 514,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6804:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwishFish_$1392",
																	"typeString": "contract SwishFish"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwishFish_$1392",
																	"typeString": "contract SwishFish"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6796:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6796:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6810:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6796:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6770:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 519,
															"name": "_poolLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "6845:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "6828:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "6828:32:0"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "liquidityTokens",
														"nameLocation": "6879:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "6871:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6934:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3330",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6926:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 527,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6915:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwishFish_$1392",
																						"typeString": "contract SwishFish"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwishFish_$1392",
																						"typeString": "contract SwishFish"
																					}
																				],
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6907:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 525,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6907:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6907:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 524,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "6897:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6897:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6922:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2876,
																"src": "6897:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6897:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6930:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2893,
														"src": "6897:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6897:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6871:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "6962:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 539,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "6979:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "6949:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6949:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "6949:46:0"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 542,
														"name": "_poolLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "7006:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7023:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7006:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "7006:18:0"
											}
										]
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndAddLiquidity",
									"nameLocation": "6729:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6748:2:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6759:0:0"
									},
									"scope": 1392,
									"src": "6720:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "7103:271:0",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "7122:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "7114:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7114:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 556,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7148:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwishFish_$1392",
																	"typeString": "contract SwishFish"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwishFish_$1392",
																	"typeString": "contract SwishFish"
																}
															],
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7140:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 554,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7140:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7140:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7154:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7140:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7114:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7189:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "7172:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7172:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "7172:30:0"
											},
											{
												"assignments": [
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "liquidityTokens",
														"nameLocation": "7221:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "7213:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7276:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3330",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7268:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 569,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "7257:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwishFish_$1392",
																						"typeString": "contract SwishFish"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwishFish_$1392",
																						"typeString": "contract SwishFish"
																					}
																				],
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7249:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7249:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7249:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 566,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "7239:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7239:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7264:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2876,
																"src": "7239:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7239:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2893,
														"src": "7239:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7213:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7304:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 581,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7321:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "7291:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7291:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "7291:46:0"
											},
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 584,
														"name": "_poolLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "7348:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7365:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7348:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "7348:18:0"
											}
										]
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndAddLiquidityTokens",
									"nameLocation": "7047:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "7081:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "7073:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:22:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7103:0:0"
									},
									"scope": 1392,
									"src": "7038:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "7435:420:0",
										"statements": [
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "7463:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "7446:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 597,
															"nodeType": "ArrayTypeName",
															"src": "7446:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7484:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7470:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7474:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 600,
															"nodeType": "ArrayTypeName",
															"src": "7474:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7470:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7446:40:0"
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 605,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7497:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 607,
														"indexExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 610,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7515:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwishFish_$1392",
																	"typeString": "contract SwishFish"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwishFish_$1392",
																	"typeString": "contract SwishFish"
																}
															],
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 608,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7507:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7507:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7497:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "7497:23:0"
											},
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 614,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 616,
														"indexExpression": {
															"hexValue": "31",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7536:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 617,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7541:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7557:4:0",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2383,
															"src": "7541:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7541:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7531:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "7531:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 625,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7593:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7585:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 623,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7585:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7585:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 629,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7608:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7600:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 627,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7600:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7600:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7626:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "7576:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7576:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "7576:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7732:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7758:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 639,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 642,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7801:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7793:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 640,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7793:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7793:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 644,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7821:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7827:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7821:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 634,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "7651:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7667:50:0",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2766,
														"src": "7651:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7651:196:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "7651:196:0"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "7389:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7414:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7406:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7405:21:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7435:0:0"
									},
									"scope": 1392,
									"src": "7380:475:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "7997:282:0",
										"statements": [
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 660,
														"name": "taxFeeHeisenverse",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "8008:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 661,
														"name": "_heisenVerseTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "8028:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8008:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "8008:38:0"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 664,
														"name": "taxFeeMarketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "8057:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 665,
														"name": "_marketingTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "8075:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8057:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "8057:34:0"
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "taxFeeTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "8102:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 669,
														"name": "_teamTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "8115:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8102:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "8102:24:0"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 672,
														"name": "taxFeeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "8137:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 673,
														"name": "_liquidityTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "8155:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8137:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "8137:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 677,
															"name": "_heisenVerseTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8203:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 678,
															"name": "_marketingTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "8223:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 679,
															"name": "_teamTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "8241:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 680,
															"name": "_liquidityTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "8254:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "UpdateTaxesFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "8187:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8187:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "EmitStatement",
												"src": "8182:89:0"
											}
										]
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTaxesFees",
									"nameLocation": "7872:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_heisenVerseTaxFee",
												"nameLocation": "7896:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7888:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "_marketingTaxFee",
												"nameLocation": "7924:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7916:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "_teamTaxFee",
												"nameLocation": "7950:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7942:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "_liquidityTaxFee",
												"nameLocation": "7971:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7963:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7887:101:0"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7997:0:0"
									},
									"scope": 1392,
									"src": "7863:416:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "8350:102:0",
										"statements": [
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 689,
														"name": "withdrawPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "8361:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "_withdrawPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "8377:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8361:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "8361:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "_withdrawPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "8429:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "UpdateWithdrawOptions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "8407:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8407:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "8402:42:0"
											}
										]
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateWithdrawOptions",
									"nameLocation": "8296:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_withdrawPrice",
												"nameLocation": "8326:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "8318:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8317:24:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8350:0:0"
									},
									"scope": 1392,
									"src": "8287:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "8515:88:0",
										"statements": [
											{
												"expression": {
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 703,
														"name": "salesEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "8526:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 704,
														"name": "_salesEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "8541:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8526:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "8526:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "_salesEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "8581:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 707,
														"name": "SalesState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "8570:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8570:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "EmitStatement",
												"src": "8565:30:0"
											}
										]
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateSalesStatus",
									"nameLocation": "8469:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "_salesEnabled",
												"nameLocation": "8492:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8487:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8486:20:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8515:0:0"
									},
									"scope": 1392,
									"src": "8460:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "8670:343:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 722,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8698:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 720,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8690:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8690:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 726,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8713:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 724,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 731,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8749:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SwishFish_$1392",
																				"typeString": "contract SwishFish"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SwishFish_$1392",
																				"typeString": "contract SwishFish"
																			}
																		],
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8741:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 729,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8741:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8741:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 728,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "8731:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8731:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "8681:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8681:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8681:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 743,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8834:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8826:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8826:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8826:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "8854:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8875:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8891:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 750,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8915:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 748,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "333030",
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8955:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "300"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 752,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8935:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8941:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8935:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8951:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2796,
																"src": "8935:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8935:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 736,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "8767:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2767",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8783:15:0",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2429,
															"src": "8767:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 739,
																"name": "bnb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "8807:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8767:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8767:203:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "8767:203:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 760,
															"name": "bnb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "9001:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 759,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8986:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8986:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "EmitStatement",
												"src": "8981:24:0"
											}
										]
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "8620:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "8641:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "8633:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "bnb",
												"nameLocation": "8657:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "8649:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:29:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8670:0:0"
									},
									"scope": 1392,
									"src": "8611:402:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "9114:1783:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9133:14:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 777,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "9144:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 776,
																	"name": "isAnOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "9134:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9134:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e6572732063616e2774206d616b65207769746864726177616c73",
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9149:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c70aa7dac05afdcc37899ab915937cb2f50b8965c39bd188a3887acfca21a7f4",
																"typeString": "literal_string \"Owners can't make withdrawals\""
															},
															"value": "Owners can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c70aa7dac05afdcc37899ab915937cb2f50b8965c39bd188a3887acfca21a7f4",
																"typeString": "literal_string \"Owners can't make withdrawals\""
															}
														],
														"id": 775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9125:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "9125:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9200:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 785,
																	"name": "backend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "9206:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9206:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9200:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261636b656e642063616e2774206d616b65207769746864726177616c73",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_087d903943e0111908d23dbd0bace84cd93f22f4d2e4354879c6c0ad8774b8cc",
																"typeString": "literal_string \"Backend can't make withdrawals\""
															},
															"value": "Backend can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_087d903943e0111908d23dbd0bace84cd93f22f4d2e4354879c6c0ad8774b8cc",
																"typeString": "literal_string \"Backend can't make withdrawals\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9192:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "9192:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 792,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9269:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 793,
																"name": "addressHeisenDev",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "9275:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9269:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48656973656e2063616e2774206d616b65207769746864726177616c73",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9293:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82ebf0ed1affdc6bc676ebd4931d90ecfde5400124bfa6d66b92076f643976bf",
																"typeString": "literal_string \"Heisen can't make withdrawals\""
															},
															"value": "Heisen can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82ebf0ed1affdc6bc676ebd4931d90ecfde5400124bfa6d66b92076f643976bf",
																"typeString": "literal_string \"Heisen can't make withdrawals\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9261:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9261:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9344:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 800,
																"name": "addressMarketing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "9350:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9344:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536b796c65722063616e2774206d616b65207769746864726177616c73",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9368:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8462903eb2c1faab9c8e71b283a41fb43dcff3a398504e31f5571f4e28aab807",
																"typeString": "literal_string \"Skyler can't make withdrawals\""
															},
															"value": "Skyler can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8462903eb2c1faab9c8e71b283a41fb43dcff3a398504e31f5571f4e28aab807",
																"typeString": "literal_string \"Skyler can't make withdrawals\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9336:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9336:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "9336:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9419:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 807,
																"name": "addressTeam",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "9425:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9419:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5465616d2063616e2774206d616b65207769746864726177616c73",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9438:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4e9192c23e6f9cd45406748560396a595dbab09597d8432d10f6cdf8b9fe498",
																"typeString": "literal_string \"Team can't make withdrawals\""
															},
															"value": "Team can't make withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4e9192c23e6f9cd45406748560396a595dbab09597d8432d10f6cdf8b9fe498",
																"typeString": "literal_string \"Team can't make withdrawals\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9411:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "9411:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 813,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "9487:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3735",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9494:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_75_by_1",
																	"typeString": "int_const 75"
																},
																"value": "75"
															},
															"src": "9487:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206665652063616e6e6f742065786365656420373525",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9498:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38ff6a08c02164c185f87c58e3e41fde8d362d51c111db731aa2015678688c19",
																"typeString": "literal_string \"The fee cannot exceed 75%\""
															},
															"value": "The fee cannot exceed 75%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38ff6a08c02164c185f87c58e3e41fde8d362d51c111db731aa2015678688c19",
																"typeString": "literal_string \"The fee cannot exceed 75%\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9479:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "9479:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 820,
																	"name": "_authorizedWithdraws",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "9545:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 822,
																"indexExpression": {
																	"id": 821,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "9566:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9545:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9573:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9545:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206861732070656e64696e67205769746864726177616c73",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9576:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db601e28a9a212a678822aa4d67ad9873f3bc27745156eda75a77e92138f1176",
																"typeString": "literal_string \"User has pending Withdrawals\""
															},
															"value": "User has pending Withdrawals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db601e28a9a212a678822aa4d67ad9873f3bc27745156eda75a77e92138f1176",
																"typeString": "literal_string \"User has pending Withdrawals\""
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9537:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "9537:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 829,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "9626:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 830,
																"name": "_maxTransactionWithdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "9636:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9626:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742063616e2774206578636565647320746865206d6178207472616e73616374696f6e20776974686472617720616d6f756e74",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9667:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78d04560e88fa98c9d1681cbefba44a9a270c44bdf20ffbc00add4b3113ec8e6",
																"typeString": "literal_string \"Amount can't exceeds the max transaction withdraw amount\""
															},
															"value": "Amount can't exceeds the max transaction withdraw amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78d04560e88fa98c9d1681cbefba44a9a270c44bdf20ffbc00add4b3113ec8e6",
																"typeString": "literal_string \"Amount can't exceeds the max transaction withdraw amount\""
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9618:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "9618:108:0"
											},
											{
												"assignments": [
													836
												],
												"declarations": [
													{
														"constant": false,
														"id": 836,
														"mutability": "mutable",
														"name": "amountFee",
														"nameLocation": "9747:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 974,
														"src": "9739:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 835,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9779:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 839,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "9770:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 837,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "9759:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9766:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2876,
																"src": "9759:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9759:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9775:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2893,
														"src": "9759:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9759:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9739:44:0"
											},
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "totalTaxes",
														"nameLocation": "9802:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 974,
														"src": "9794:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 847,
															"name": "taxFeeHeisenverse",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "9815:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 848,
															"name": "taxFeeMarketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "9835:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9815:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 850,
														"name": "taxFeeTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "9853:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9815:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9794:69:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "totalTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "9878:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9892:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9878:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "9983:863:0",
													"statements": [
														{
															"assignments": [
																865
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 865,
																	"mutability": "mutable",
																	"name": "currentTaxFeeHeisenDev",
																	"nameLocation": "10006:22:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "9998:30:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 864,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9998:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 873,
															"initialValue": {
																"arguments": [
																	{
																		"id": 871,
																		"name": "totalTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "10062:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10053:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"id": 866,
																				"name": "taxFeeHeisenverse",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 74,
																				"src": "10031:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10049:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "10031:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10031:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10058:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "10031:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10031:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9998:75:0"
														},
														{
															"assignments": [
																875
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 875,
																	"mutability": "mutable",
																	"name": "currentTaxFeeMarketing",
																	"nameLocation": "10096:22:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "10088:30:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 874,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10088:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 883,
															"initialValue": {
																"arguments": [
																	{
																		"id": 881,
																		"name": "totalTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "10150:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10141:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"id": 876,
																				"name": "taxFeeMarketing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 77,
																				"src": "10121:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10137:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "10121:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10121:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10146:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "10121:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10121:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10088:73:0"
														},
														{
															"assignments": [
																885
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 885,
																	"mutability": "mutable",
																	"name": "currentTaxFeeTeam",
																	"nameLocation": "10184:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "10176:25:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 884,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 893,
															"initialValue": {
																"arguments": [
																	{
																		"id": 891,
																		"name": "totalTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "10228:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10219:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"id": 886,
																				"name": "taxFeeTeam",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "10204:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10215:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "10204:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10204:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10224:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "10204:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10204:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10176:63:0"
														},
														{
															"assignments": [
																895
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 895,
																	"mutability": "mutable",
																	"name": "heisenVerseAmount",
																	"nameLocation": "10262:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "10254:25:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 894,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10254:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 903,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10324:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 898,
																				"name": "currentTaxFeeHeisenDev",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 865,
																				"src": "10296:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 896,
																				"name": "amountFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "10282:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10292:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "10282:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10282:37:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10320:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "10282:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10282:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10254:74:0"
														},
														{
															"assignments": [
																905
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 905,
																	"mutability": "mutable",
																	"name": "marketingAmount",
																	"nameLocation": "10351:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "10343:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 904,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10343:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 913,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10411:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 908,
																				"name": "currentTaxFeeMarketing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "10383:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 906,
																				"name": "amountFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "10369:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10379:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "10369:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10369:37:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10407:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "10369:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10369:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10343:72:0"
														},
														{
															"assignments": [
																915
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 915,
																	"mutability": "mutable",
																	"name": "teamAmount",
																	"nameLocation": "10438:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "10430:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 914,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10430:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 923,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10488:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 918,
																				"name": "currentTaxFeeTeam",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "10465:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 916,
																				"name": "amountFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "10451:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10461:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2876,
																			"src": "10451:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10451:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10484:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2893,
																	"src": "10451:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10451:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10430:62:0"
														},
														{
															"expression": {
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 924,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "10509:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 927,
																			"name": "heisenVerseAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "10529:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 925,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "10518:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10525:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2813,
																		"src": "10518:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10518:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10509:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 930,
															"nodeType": "ExpressionStatement",
															"src": "10509:38:0"
														},
														{
															"expression": {
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 931,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "10562:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 934,
																			"name": "marketingAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "10582:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 932,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "10571:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10578:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2813,
																		"src": "10571:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10571:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10562:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 937,
															"nodeType": "ExpressionStatement",
															"src": "10562:36:0"
														},
														{
															"expression": {
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 938,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "10613:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 941,
																			"name": "teamAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "10633:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 939,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "10622:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10629:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2813,
																		"src": "10622:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10622:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10613:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 944,
															"nodeType": "ExpressionStatement",
															"src": "10613:31:0"
														},
														{
															"expression": {
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 945,
																	"name": "_poolHeisenDev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "10661:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 948,
																			"name": "heisenVerseAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "10697:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 946,
																			"name": "_poolHeisenDev",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "10678:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10693:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2796,
																		"src": "10678:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10678:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10661:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 951,
															"nodeType": "ExpressionStatement",
															"src": "10661:54:0"
														},
														{
															"expression": {
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 952,
																	"name": "_poolMarketing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "10730:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 955,
																			"name": "marketingAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "10766:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 953,
																			"name": "_poolMarketing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 90,
																			"src": "10747:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10762:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2796,
																		"src": "10747:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10747:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10730:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 958,
															"nodeType": "ExpressionStatement",
															"src": "10730:52:0"
														},
														{
															"expression": {
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 959,
																	"name": "_poolTeam",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "10797:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 962,
																			"name": "teamAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "10823:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 960,
																			"name": "_poolTeam",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "10809:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10819:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2796,
																		"src": "10809:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10809:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10797:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "10797:37:0"
														}
													]
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "9874:972:0",
												"trueBody": {
													"id": 863,
													"nodeType": "Block",
													"src": "9895:73:0",
													"statements": [
														{
															"expression": {
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 856,
																	"name": "_poolHeisenDev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "9910:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 859,
																			"name": "amountFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "9946:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 857,
																			"name": "_poolHeisenDev",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "9927:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9942:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2796,
																		"src": "9927:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9927:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9910:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 862,
															"nodeType": "ExpressionStatement",
															"src": "9910:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 968,
															"name": "_authorizedWithdraws",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "10856:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 970,
														"indexExpression": {
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "10877:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10856:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 971,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "10883:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10856:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "10856:33:0"
											}
										]
									},
									"functionSelector": "8198c341",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 773,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 772,
												"name": "onlyBackend",
												"nameLocations": [
													"9102:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "9102:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9102:11:0"
										}
									],
									"name": "withdrawAuthorization",
									"nameLocation": "9030:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9060:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "9052:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9072:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "9064:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "9088:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "9080:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9051:41:0"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9114:0:0"
									},
									"scope": 1392,
									"src": "9021:1876:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "10981:55:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 982,
														"name": "_authorizedWithdraws",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "10999:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 984,
													"indexExpression": {
														"id": 983,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "11020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10999:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 981,
												"id": 985,
												"nodeType": "Return",
												"src": "10992:36:0"
											}
										]
									},
									"functionSelector": "fe7441e7",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAllowance",
									"nameLocation": "10914:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "10932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10931:17:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "10972:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10971:9:0"
									},
									"scope": 1392,
									"src": "10905:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "11122:371:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 994,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11137:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11143:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11137:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11191:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 996,
																	"name": "_accountWithdrawalLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "11155:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 998,
																"indexExpression": {
																	"id": 997,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "11178:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11155:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11187:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2796,
															"src": "11155:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11155:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11137:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"nodeType": "IfStatement",
												"src": "11133:193:0",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "11199:127:0",
													"statements": [
														{
															"expression": {
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1003,
																		"name": "_accountWithdrawalLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "11214:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1005,
																	"indexExpression": {
																		"id": 1004,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "11237:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11214:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1006,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11248:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11254:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11248:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11214:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "11214:49:0"
														},
														{
															"expression": {
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1010,
																		"name": "_accountWithdrawalCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "11278:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1012,
																	"indexExpression": {
																		"id": 1011,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "11302:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11278:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11313:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11278:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1015,
															"nodeType": "ExpressionStatement",
															"src": "11278:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1018,
															"name": "_accountWithdrawalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "11336:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1020,
														"indexExpression": {
															"id": 1019,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11336:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11408:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1021,
																	"name": "_accountWithdrawalCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "11371:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1023,
																"indexExpression": {
																	"id": 1022,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "11395:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11371:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11404:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2796,
															"src": "11371:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11371:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11336:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "11336:74:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1029,
																	"name": "_accountWithdrawalCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "11429:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1031,
																"indexExpression": {
																	"id": 1030,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "11453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11429:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1032,
																"name": "_maxWithdrawalCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "11465:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11429:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1034,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11428:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 993,
												"id": 1035,
												"nodeType": "Return",
												"src": "11421:64:0"
											}
										]
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUnderDailyWithdrawalLimit",
									"nameLocation": "11053:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11080:17:0"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11115:6:0"
									},
									"scope": 1392,
									"src": "11044:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "11538:447:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1042,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2975,
																		"src": "11585:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11585:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1041,
																"name": "isUnderDailyWithdrawalLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "11557:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) returns (bool)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11557:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f74206d616b65206d6f7265207468616e206f6e65207769746864726177616c2070657220646179",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11600:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa3e1a48a111edc3918551979db0c35d329138c58eca1178380e7c6dc08484aa",
																"typeString": "literal_string \"You cannot make more than one withdrawal per day\""
															},
															"value": "You cannot make more than one withdrawal per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa3e1a48a111edc3918551979db0c35d329138c58eca1178380e7c6dc08484aa",
																"typeString": "literal_string \"You cannot make more than one withdrawal per day\""
															}
														],
														"id": 1040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11549:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "11549:102:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1049,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11670:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11674:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "11670:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"id": 1051,
																		"name": "withdrawPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "11684:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11683:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11670:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520616d6f756e742073656e74206973206e6f7420657175616c20746f2074686520424e4220616d6f756e7420726571756972656420666f72207769746864726177",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11700:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63fc0d5f4edc6e17f1f372aebf68cd18310995f5d1e15dca27497b81fbf4ab72",
																"typeString": "literal_string \"The amount sent is not equal to the BNB amount required for withdraw\""
															},
															"value": "The amount sent is not equal to the BNB amount required for withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63fc0d5f4edc6e17f1f372aebf68cd18310995f5d1e15dca27497b81fbf4ab72",
																"typeString": "literal_string \"The amount sent is not equal to the BNB amount required for withdraw\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11662:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "11662:109:0"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "11790:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "11782:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"baseExpression": {
														"id": 1059,
														"name": "_authorizedWithdraws",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "11799:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1062,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1060,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "11820:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11820:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11799:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11782:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1069,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11868:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwishFish_$1392",
																		"typeString": "contract SwishFish"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11860:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11860:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11860:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1071,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "11875:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11875:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "11889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1064,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "11844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwishFish_$1392_$",
																"typeString": "type(contract super SwishFish)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11850:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "11844:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11844:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "11844:52:0"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1076,
															"name": "_authorizedWithdraws",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "11907:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1079,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1077,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "11928:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11928:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11907:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11944:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11907:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "11907:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1084,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "11970:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "11961:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11961:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "EmitStatement",
												"src": "11956:21:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11510:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11518:2:0"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11538:0:0"
									},
									"scope": 1392,
									"src": "11501:484:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "12443:1270:0",
										"statements": [
											{
												"condition": {
													"id": 1117,
													"name": "_updateWithdrawOptions",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1096,
													"src": "12458:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "12454:161:0",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "12482:133:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1119,
																			"name": "withdrawPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "12505:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "35303030303030303030303030303030",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12522:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5000000000000000_by_1",
																				"typeString": "int_const 5000000000000000"
																			},
																			"value": "5000000000000000"
																		},
																		"src": "12505:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d756c74695369676e617475726557616c6c65743a204d757374206b656570203530303030303030303030303030303020576569206f72206c657373",
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12540:62:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b1af6e9e78247a111ba17a159dd4360ea3481c7f2e76797f5cf69bbf3bed489e",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\""
																		},
																		"value": "MultiSignatureWallet: Must keep 5000000000000000 Wei or less"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b1af6e9e78247a111ba17a159dd4360ea3481c7f2e76797f5cf69bbf3bed489e",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep 5000000000000000 Wei or less\""
																		}
																	],
																	"id": 1118,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12497:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12497:106:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1124,
															"nodeType": "ExpressionStatement",
															"src": "12497:106:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1127,
													"name": "_updateTaxesFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1100,
													"src": "12629:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "12625:241:0",
												"trueBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "12647:219:0",
													"statements": [
														{
															"assignments": [
																1129
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1129,
																	"mutability": "mutable",
																	"name": "sellTotalFees",
																	"nameLocation": "12670:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1145,
																	"src": "12662:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1128,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12662:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1137,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1130,
																			"name": "_heisenVerseTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1102,
																			"src": "12686:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1131,
																			"name": "_marketingTaxFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "12707:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12686:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1133,
																		"name": "_teamTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "12726:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12686:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1135,
																	"name": "_liquidityTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "12740:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12686:70:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12662:94:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1139,
																			"name": "sellTotalFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "12779:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12796:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "12779:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d756c74695369676e617475726557616c6c65743a204d757374206b656570206665657320617420313025206f72206c657373",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12800:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_64d7da9d3627bed486e3571b002047ac22bd302023ad9ca8c7b8066b1d42a5ac",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep fees at 10% or less\""
																		},
																		"value": "MultiSignatureWallet: Must keep fees at 10% or less"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_64d7da9d3627bed486e3571b002047ac22bd302023ad9ca8c7b8066b1d42a5ac",
																			"typeString": "literal_string \"MultiSignatureWallet: Must keep fees at 10% or less\""
																		}
																	],
																	"id": 1138,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12771:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12771:83:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "12771:83:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1147,
													"name": "_transferBackend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1110,
													"src": "12880:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "12876:142:0",
												"trueBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "12898:120:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1149,
																			"name": "_backendAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "12921:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1152,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12948:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12940:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1150,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "12940:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12940:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12921:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d756c74695369676e617475726557616c6c65743a206e6577206f776e657220697320746865207a65726f2061646472657373",
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f9a40112b701da5565c96754f9ce4cac286167c1b4f1dd9ec7cfbe39e7eac9ee",
																			"typeString": "literal_string \"MultiSignatureWallet: new owner is the zero address\""
																		},
																		"value": "MultiSignatureWallet: new owner is the zero address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f9a40112b701da5565c96754f9ce4cac286167c1b4f1dd9ec7cfbe39e7eac9ee",
																			"typeString": "literal_string \"MultiSignatureWallet: new owner is the zero address\""
																		}
																	],
																	"id": 1148,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12913:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12913:93:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "12913:93:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1164,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2975,
																		"src": "13071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13071:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13104:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"id": 1167,
																	"name": "_updateEggSales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "13139:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1168,
																	"name": "_salesEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "13179:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1169,
																	"name": "_swapAndAddLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "13224:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1170,
																	"name": "_updateWithdrawOptions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "13278:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1171,
																	"name": "_withdrawPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "13326:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1172,
																	"name": "_updateTaxesFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "13368:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1173,
																	"name": "_heisenVerseTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "13414:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1174,
																	"name": "_marketingTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "13460:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1175,
																	"name": "_teamTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "13499:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1176,
																	"name": "_liquidityTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "13538:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1177,
																	"name": "_transferBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "13582:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1178,
																	"name": "_backendAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "13625:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1163,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3038,
																"src": "13043:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$3038_storage_ptr_$",
																	"typeString": "type(struct MultiSignature.Proposal storage pointer)"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"13063:6:0",
																"13094:8:0",
																"13120:17:0",
																"13165:12:0",
																"13203:19:0",
																"13255:21:0",
																"13311:13:0",
																"13351:15:0",
																"13395:17:0",
																"13443:15:0",
																"13487:10:0",
																"13521:15:0",
																"13565:15:0",
																"13609:14:0"
															],
															"names": [
																"author",
																"executed",
																"updateSalesStatus",
																"salesEnabled",
																"swapAndAddLiquidity",
																"updateWithdrawOptions",
																"withdrawPrice",
																"updateTaxesFees",
																"heisenVerseTaxFee",
																"marketingTaxFee",
																"teamTaxFee",
																"liquidityTaxFee",
																"transferBackend",
																"backendAddress"
															],
															"nodeType": "FunctionCall",
															"src": "13043:609:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$3038_memory_ptr",
																"typeString": "struct MultiSignature.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$3038_memory_ptr",
																"typeString": "struct MultiSignature.Proposal memory"
															}
														],
														"expression": {
															"id": 1160,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3042,
															"src": "13028:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage",
																"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13038:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "13028:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$3038_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MultiSignature.Proposal storage ref[] storage pointer,struct MultiSignature.Proposal storage ref)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13028:625:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "13028:625:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1183,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3042,
																	"src": "13684:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13694:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13684:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13703:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13684:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "SubmitProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "13669:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13669:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "EmitStatement",
												"src": "13664:41:0"
											}
										]
									},
									"functionSelector": "dce165a6",
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyOwner",
												"nameLocations": [
													"12433:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "12433:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12433:9:0"
										}
									],
									"name": "submitProposal",
									"nameLocation": "12000:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_updateEggSales",
												"nameLocation": "12030:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12025:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_salesEnabled",
												"nameLocation": "12061:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12056:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_swapAndAddLiquidity",
												"nameLocation": "12090:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12085:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1093,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_updateWithdrawOptions",
												"nameLocation": "12126:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12121:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_withdrawPrice",
												"nameLocation": "12167:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12159:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "_updateTaxesFees",
												"nameLocation": "12197:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12192:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "_heisenVerseTaxFee",
												"nameLocation": "12232:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12224:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "_marketingTaxFee",
												"nameLocation": "12269:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12261:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_teamTaxFee",
												"nameLocation": "12304:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12296:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "_liquidityTaxFee",
												"nameLocation": "12334:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12326:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_transferBackend",
												"nameLocation": "12366:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12361:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_backendAddress",
												"nameLocation": "12401:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12393:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12014:409:0"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12443:0:0"
									},
									"scope": 1392,
									"src": "11991:1722:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "13882:127:0",
										"statements": [
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1206,
																"name": "proposalApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3048,
																"src": "13893:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1210,
															"indexExpression": {
																"id": 1207,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "13910:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13893:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1211,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1208,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "13923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13923:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13893:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13939:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13893:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "13893:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1216,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "13975:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13975:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "_proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "13989:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "ApproveProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "13959:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13959:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "EmitStatement",
												"src": "13954:47:0"
											}
										]
									},
									"functionSelector": "98951b56",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1194,
												"name": "onlyOwner",
												"nameLocations": [
													"13773:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "13773:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13773:9:0"
										},
										{
											"arguments": [
												{
													"id": 1197,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "13798:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1196,
												"name": "proposalExists",
												"nameLocations": [
													"13783:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3066,
												"src": "13783:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13783:27:0"
										},
										{
											"arguments": [
												{
													"id": 1200,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "13831:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1199,
												"name": "proposalNotApproved",
												"nameLocations": [
													"13811:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3083,
												"src": "13811:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13811:32:0"
										},
										{
											"arguments": [
												{
													"id": 1203,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "13864:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "proposalNotExecuted",
												"nameLocations": [
													"13844:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3098,
												"src": "13844:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13844:32:0"
										}
									],
									"name": "approveProposal",
									"nameLocation": "13730:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "13751:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "13746:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13745:18:0"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13882:0:0"
									},
									"scope": 1392,
									"src": "13721:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "14093:235:0",
										"statements": [
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "14112:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "14104:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"hexValue": "30",
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14120:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14104:17:0"
											},
											{
												"body": {
													"id": 1256,
													"nodeType": "Block",
													"src": "14179:119:0",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1243,
																		"name": "proposalApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3048,
																		"src": "14198:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 1245,
																	"indexExpression": {
																		"id": 1244,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "14215:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14198:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1249,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 1247,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1234,
																			"src": "14237:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1246,
																		"name": "getOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "14228:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14228:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14198:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1255,
															"nodeType": "IfStatement",
															"src": "14194:93:0",
															"trueBody": {
																"id": 1254,
																"nodeType": "Block",
																"src": "14242:45:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1250,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1230,
																				"src": "14261:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14270:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "14261:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1253,
																		"nodeType": "ExpressionStatement",
																		"src": "14261:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "14145:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1237,
															"name": "requiredConfirmations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "14149:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14149:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14145:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1257,
												"initializationExpression": {
													"assignments": [
														1234
													],
													"declarations": [
														{
															"constant": false,
															"id": 1234,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14142:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1257,
															"src": "14137:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1233,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "14137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1235,
													"nodeType": "VariableDeclarationStatement",
													"src": "14137:6:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14174:3:0",
														"subExpression": {
															"id": 1240,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "14174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1242,
													"nodeType": "ExpressionStatement",
													"src": "14174:3:0"
												},
												"nodeType": "ForStatement",
												"src": "14132:166:0"
											},
											{
												"expression": {
													"id": 1258,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1230,
													"src": "14315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1259,
												"nodeType": "Return",
												"src": "14308:12:0"
											}
										]
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovalCount",
									"nameLocation": "14026:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "14049:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "14044:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14044:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14043:18:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "14084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14083:9:0"
									},
									"scope": 1392,
									"src": "14017:311:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "14449:916:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1274,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "14486:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1273,
																	"name": "_getApprovalCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "14468:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14468:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1276,
																	"name": "requiredConfirmations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "14502:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14502:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14468:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a20617070726f76616c73206973206c657373207468616e207265717569726564",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14527:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_953de992fe3126690fbccd56c3eb41bf5101b499e0b29d5ebef10e29539c7131",
																"typeString": "literal_string \"MultiSignatureWallet: approvals is less than required\""
															},
															"value": "MultiSignatureWallet: approvals is less than required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_953de992fe3126690fbccd56c3eb41bf5101b499e0b29d5ebef10e29539c7131",
																"typeString": "literal_string \"MultiSignatureWallet: approvals is less than required\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14460:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "14460:123:0"
											},
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "14611:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1351,
														"src": "14594:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
															"typeString": "struct MultiSignature.Proposal"
														},
														"typeName": {
															"id": 1283,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1282,
																"name": "Proposal",
																"nameLocations": [
																	"14594:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3038,
																"src": "14594:8:0"
															},
															"referencedDeclaration": 3038,
															"src": "14594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																"typeString": "struct MultiSignature.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1288,
												"initialValue": {
													"baseExpression": {
														"id": 1285,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3042,
														"src": "14622:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage",
															"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
														}
													},
													"id": 1287,
													"indexExpression": {
														"id": 1286,
														"name": "_proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "14632:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14622:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$3038_storage",
														"typeString": "struct MultiSignature.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14594:50:0"
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1289,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "14655:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																"typeString": "struct MultiSignature.Proposal storage pointer"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14664:8:0",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3013,
														"src": "14655:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14675:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "14655:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "14655:24:0"
											},
											{
												"condition": {
													"expression": {
														"id": 1295,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "14694:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14703:17:0",
													"memberName": "updateSalesStatus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3015,
													"src": "14694:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "14690:99:0",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "14722:67:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1298,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "14755:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14764:12:0",
																		"memberName": "salesEnabled",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3017,
																		"src": "14755:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1297,
																	"name": "updateSalesStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "14737:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
																		"typeString": "function (bool)"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14737:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1301,
															"nodeType": "ExpressionStatement",
															"src": "14737:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1304,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "14803:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14812:19:0",
													"memberName": "swapAndAddLiquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3019,
													"src": "14803:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "IfStatement",
												"src": "14799:82:0",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "14833:48:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1306,
																	"name": "swapAndAddLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "14848:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14848:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1308,
															"nodeType": "ExpressionStatement",
															"src": "14848:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1311,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "14895:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14904:21:0",
													"memberName": "updateWithdrawOptions",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3021,
													"src": "14895:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "14891:108:0",
												"trueBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "14927:72:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1314,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "14964:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14973:13:0",
																		"memberName": "withdrawPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3023,
																		"src": "14964:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1313,
																	"name": "updateWithdrawOptions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "14942:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14942:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1317,
															"nodeType": "ExpressionStatement",
															"src": "14942:45:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1320,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "15013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15022:15:0",
													"memberName": "updateTaxesFees",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3025,
													"src": "15013:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "15009:173:0",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "15039:143:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1323,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "15070:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15079:17:0",
																		"memberName": "heisenVerseTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3027,
																		"src": "15070:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1325,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "15098:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15107:15:0",
																		"memberName": "marketingTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "15098:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1327,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "15124:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15133:10:0",
																		"memberName": "teamTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3031,
																		"src": "15124:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1329,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "15145:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15154:15:0",
																		"memberName": "liquidityTaxFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3033,
																		"src": "15145:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1322,
																	"name": "updateTaxesFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "15054:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15054:116:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1332,
															"nodeType": "ExpressionStatement",
															"src": "15054:116:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1335,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "15196:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
															"typeString": "struct MultiSignature.Proposal storage pointer"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15205:15:0",
													"memberName": "transferBackend",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3035,
													"src": "15196:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "IfStatement",
												"src": "15192:166:0",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "15222:136:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1338,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "15254:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15263:14:0",
																		"memberName": "backendAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3037,
																		"src": "15254:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1337,
																	"name": "_transferBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "15237:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15237:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1341,
															"nodeType": "ExpressionStatement",
															"src": "15237:41:0"
														},
														{
															"expression": {
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1342,
																		"name": "_isExcludedFromLimits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "15293:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1345,
																	"indexExpression": {
																		"expression": {
																			"id": 1343,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "15315:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
																				"typeString": "struct MultiSignature.Proposal storage pointer"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15324:14:0",
																		"memberName": "backendAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3037,
																		"src": "15315:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15293:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15342:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "15293:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "15293:53:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1266,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1263,
													"src": "14403:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "proposalExists",
												"nameLocations": [
													"14388:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3066,
												"src": "14388:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14388:27:0"
										},
										{
											"arguments": [
												{
													"id": 1269,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1263,
													"src": "14436:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "proposalNotExecuted",
												"nameLocations": [
													"14416:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3098,
												"src": "14416:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14416:32:0"
										}
									],
									"name": "executeProposal",
									"nameLocation": "14345:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "14366:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "14361:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14360:18:0"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14449:0:0"
									},
									"scope": 1392,
									"src": "14336:1029:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "15500:240:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1366,
																	"name": "proposalApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3048,
																	"src": "15519:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(uint256 => mapping(address => bool))"
																	}
																},
																"id": 1368,
																"indexExpression": {
																	"id": 1367,
																	"name": "_proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "15536:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15519:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1371,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1369,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "15549:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15549:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15519:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2050726f706f73616c206973206e6f7420617070726f766564",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15564:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16bf0dfdf621e13211addd9bc2d05822a44f1a962fe2989d13a49a0ab872e198",
																"typeString": "literal_string \"MultiSignatureWallet: Proposal is not approved\""
															},
															"value": "MultiSignatureWallet: Proposal is not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16bf0dfdf621e13211addd9bc2d05822a44f1a962fe2989d13a49a0ab872e198",
																"typeString": "literal_string \"MultiSignatureWallet: Proposal is not approved\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15511:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "15511:102:0"
											},
											{
												"expression": {
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1375,
																"name": "proposalApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3048,
																"src": "15624:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1379,
															"indexExpression": {
																"id": 1376,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "15641:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15624:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1380,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1377,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "15654:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15654:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15624:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15670:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "15624:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "15624:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1385,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "15706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15706:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "_proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "15720:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "RevokeProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "15691:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15691:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "EmitStatement",
												"src": "15686:46:0"
											}
										]
									},
									"functionSelector": "85a6a091",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "onlyOwner",
												"nameLocations": [
													"15424:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "15424:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15424:9:0"
										},
										{
											"arguments": [
												{
													"id": 1359,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "15449:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1358,
												"name": "proposalExists",
												"nameLocations": [
													"15434:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3066,
												"src": "15434:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15434:27:0"
										},
										{
											"arguments": [
												{
													"id": 1362,
													"name": "_proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "15482:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1361,
												"name": "proposalNotExecuted",
												"nameLocations": [
													"15462:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3098,
												"src": "15462:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15462:32:0"
										}
									],
									"name": "revokeProposal",
									"nameLocation": "15382:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "15402:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "15397:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15396:18:0"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15500:0:0"
									},
									"scope": 1392,
									"src": "15373:367:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1393,
							"src": "348:15395:0",
							"usedErrors": []
						}
					],
					"src": "79:15666:0"
				},
				"id": 0
			},
			"access/Ownable.sol": {
				"ast": {
					"absolutePath": "access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2985
						],
						"MultiSignature": [
							3099
						],
						"Ownable": [
							1595
						]
					},
					"id": 1596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:1"
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1596,
							"sourceUnit": 2986,
							"src": "106:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "utils/MultiSignature.sol",
							"file": "../utils/MultiSignature.sol",
							"id": 1396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1596,
							"sourceUnit": 3100,
							"src": "138:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1398,
										"name": "Context",
										"nameLocations": [
											"706:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2985,
										"src": "706:7:1"
									},
									"id": 1399,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:1"
								},
								{
									"baseName": {
										"id": 1400,
										"name": "MultiSignature",
										"nameLocations": [
											"715:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3099,
										"src": "715:14:1"
									},
									"id": 1401,
									"nodeType": "InheritanceSpecifier",
									"src": "715:14:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1397,
								"nodeType": "StructuredDocumentation",
								"src": "179:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1595,
							"linearizedBaseContracts": [
								1595,
								3099,
								2985
							],
							"name": "Ownable",
							"nameLocation": "695:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1403,
									"mutability": "mutable",
									"name": "_backend",
									"nameLocation": "753:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "737:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1402,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "737:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1405,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "784:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "768:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1404,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1408,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "815:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "797:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1406,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1407,
										"nodeType": "ArrayTypeName",
										"src": "797:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1412,
									"mutability": "mutable",
									"name": "isOwner",
									"nameLocation": "862:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "829:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1411,
										"keyType": {
											"id": 1409,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "829:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1410,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "848:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1418,
									"name": "OwnershipTransferred",
									"nameLocation": "882:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "919:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "903:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "950:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "934:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:57:1"
									},
									"src": "876:84:1"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "1082:139:1",
										"statements": [
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "1101:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "1093:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1422,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1093:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1424,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "1113:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1113:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1093:32:1"
											},
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1427,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "1136:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1428,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "1145:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1136:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "1136:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1191:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1191:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1191:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1436,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "1203:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1431,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "1170:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "EmitStatement",
												"src": "1165:48:1"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "968:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1440,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:1"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:1"
									},
									"scope": 1595,
									"src": "1067:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "1349:32:1",
										"statements": [
											{
												"expression": {
													"id": 1446,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "1367:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1445,
												"id": 1447,
												"nodeType": "Return",
												"src": "1360:13:1"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "1229:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1311:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:1"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1340:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:9:1"
									},
									"scope": 1595,
									"src": "1302:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "1452:40:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1454,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1478:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1470:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1456,
												"nodeType": "Return",
												"src": "1463:21:1"
											}
										]
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requiredConfirmations",
									"nameLocation": "1396:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:2:1"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1443:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:9:1"
									},
									"scope": 1595,
									"src": "1387:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "1624:34:1",
										"statements": [
											{
												"expression": {
													"id": 1464,
													"name": "_backend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1403,
													"src": "1642:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1465,
												"nodeType": "Return",
												"src": "1635:15:1"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "1498:69:1",
										"text": " @dev Returns the address of the current backend."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backend",
									"nameLocation": "1582:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:2:1"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:9:1"
									},
									"scope": 1595,
									"src": "1573:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "1770:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1471,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "1789:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1474,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1472,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "1797:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1797:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1789:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420616e206f776e6572",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b6d0df19670ce9d74d6071860854e74d491a0093c7d99e46fae002c9d4c3571",
																"typeString": "literal_string \"Ownable: caller is not an owner\""
															},
															"value": "Ownable: caller is not an owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b6d0df19670ce9d74d6071860854e74d491a0093c7d99e46fae002c9d4c3571",
																"typeString": "literal_string \"Ownable: caller is not an owner\""
															}
														],
														"id": 1470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1781:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1781:66:1"
											},
											{
												"id": 1478,
												"nodeType": "PlaceholderStatement",
												"src": "1858:1:1"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "1664:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1480,
									"name": "onlyOwner",
									"nameLocation": "1758:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:2:1"
									},
									"src": "1749:118:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "1981:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1484,
																	"name": "backend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "2000:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2000:9:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1486,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "2013:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2013:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2000:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206261636b656e64",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d46c274cbe8ea53ac374353ba303ce29994acea6c1d9e568f58b06c758508642",
																"typeString": "literal_string \"Ownable: caller is not the backend\""
															},
															"value": "Ownable: caller is not the backend"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d46c274cbe8ea53ac374353ba303ce29994acea6c1d9e568f58b06c758508642",
																"typeString": "literal_string \"Ownable: caller is not the backend\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1992:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "1992:72:1"
											},
											{
												"id": 1492,
												"nodeType": "PlaceholderStatement",
												"src": "2075:1:1"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "1873:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1494,
									"name": "onlyBackend",
									"nameLocation": "1967:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:2:1"
									},
									"src": "1958:126:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "2219:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1502,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "2237:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1504,
													"indexExpression": {
														"id": 1503,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1505,
												"nodeType": "Return",
												"src": "2230:23:1"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "2092:56:1",
										"text": " @dev Throws if account is an owner."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAnOwner",
									"nameLocation": "2163:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2181:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "2173:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:17:1"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "2213:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2213:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:6:1"
									},
									"scope": 1595,
									"src": "2154:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "2387:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1515,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "2405:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1517,
													"indexExpression": {
														"id": 1516,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "2413:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2405:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1518,
												"nodeType": "Return",
												"src": "2398:21:1"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "2267:49:1",
										"text": " @dev Returns owner by Index."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2331:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2348:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2340:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2339:15:1"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2378:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:9:1"
									},
									"scope": 1595,
									"src": "2322:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "2644:186:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1527,
																"name": "newBackend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "2663:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2685:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2677:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1528,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2677:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2677:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2663:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2689:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2655:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "2655:75:1"
											},
											{
												"expression": {
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1536,
														"name": "_backend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "2741:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1537,
														"name": "newBackend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "2752:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2741:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "2741:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2807:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2799:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2799:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2799:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "newBackend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2811:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1540,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "2778:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2778:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "EmitStatement",
												"src": "2773:49:1"
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "2433:149:1",
										"text": " @dev Transfers backend Control of the contract to a new account (`newBackend`).\n Can only be called by the current owner."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBackend",
									"nameLocation": "2597:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "newBackend",
												"nameLocation": "2622:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "2614:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:20:1"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2644:0:1"
									},
									"scope": 1595,
									"src": "2588:242:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "2988:284:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1556,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "3007:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3027:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1557,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3019:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3007:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a204f776e657220697320746865207a65726f2061646472657373",
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3031:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d084375de230cc546b866c6253d28f96190ca0b9b5b3f51477039ab8d760478c",
																"typeString": "literal_string \"Ownable: Owner is the zero address\""
															},
															"value": "Ownable: Owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d084375de230cc546b866c6253d28f96190ca0b9b5b3f51477039ab8d760478c",
																"typeString": "literal_string \"Ownable: Owner is the zero address\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "2999:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3087:18:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1566,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "3088:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1568,
																"indexExpression": {
																	"id": 1567,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "3096:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3088:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a204f776e6572206973206e6f7420756e69717565",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3107:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25754d6d77e7be9e21c65850febd109c14007cd1035042c8c674f5440eb9eba8",
																"typeString": "literal_string \"Ownable: Owner is not unique\""
															},
															"value": "Ownable: Owner is not unique"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25754d6d77e7be9e21c65850febd109c14007cd1035042c8c674f5440eb9eba8",
																"typeString": "literal_string \"Ownable: Owner is not unique\""
															}
														],
														"id": 1565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "3079:59:1"
											},
											{
												"expression": {
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1573,
															"name": "isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "3149:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1575,
														"indexExpression": {
															"id": 1574,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "3157:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3149:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3169:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3149:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "3149:24:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1582,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "3197:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1579,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "3184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3192:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3184:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3184:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "3184:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3251:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3243:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3243:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3243:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1590,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "3255:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1585,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "3222:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "EmitStatement",
												"src": "3217:47:1"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "2836:100:1",
										"text": " @dev Set owners of the contract\n Is Only called in the contract creation"
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addOwner",
									"nameLocation": "2951:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2969:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "2961:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:18:1"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:0:1"
									},
									"scope": 1595,
									"src": "2942:330:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1596,
							"src": "686:2589:1",
							"usedErrors": []
						}
					],
					"src": "79:3198:1"
				},
				"id": 1
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							2985
						],
						"ERC20": [
							2205
						],
						"IERC20": [
							2283
						],
						"IERC20Metadata": [
							2308
						],
						"SafeMath": [
							2963
						]
					},
					"id": 2206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2206,
							"sourceUnit": 2986,
							"src": "135:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2206,
							"sourceUnit": 2284,
							"src": "167:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20Metadata.sol",
							"file": "../interfaces/IERC20Metadata.sol",
							"id": 1600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2206,
							"sourceUnit": 2309,
							"src": "203:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 1601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2206,
							"sourceUnit": 2964,
							"src": "247:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1603,
										"name": "Context",
										"nameLocations": [
											"1500:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2985,
										"src": "1500:7:2"
									},
									"id": 1604,
									"nodeType": "InheritanceSpecifier",
									"src": "1500:7:2"
								},
								{
									"baseName": {
										"id": 1605,
										"name": "IERC20",
										"nameLocations": [
											"1509:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2283,
										"src": "1509:6:2"
									},
									"id": 1606,
									"nodeType": "InheritanceSpecifier",
									"src": "1509:6:2"
								},
								{
									"baseName": {
										"id": 1607,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1517:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2308,
										"src": "1517:14:2"
									},
									"id": 1608,
									"nodeType": "InheritanceSpecifier",
									"src": "1517:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "286:1194:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 2205,
							"linearizedBaseContracts": [
								2205,
								2308,
								2283,
								2985
							],
							"name": "ERC20",
							"nameLocation": "1491:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1611,
									"libraryName": {
										"id": 1609,
										"name": "SafeMath",
										"nameLocations": [
											"1545:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2963,
										"src": "1545:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1539:27:2",
									"typeName": {
										"id": 1610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1558:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1615,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1610:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 2205,
									"src": "1574:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1614,
										"keyType": {
											"id": 1612,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1582:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1574:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1613,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1593:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1621,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1684:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 2205,
									"src": "1628:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1620,
										"keyType": {
											"id": 1616,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1636:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1628:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1619,
											"keyType": {
												"id": 1617,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1655:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1647:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1618,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1666:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1623,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1720:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 2205,
									"src": "1704:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1622,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1704:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1625,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1756:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 2205,
									"src": "1741:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1624,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1741:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1627,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 2205,
									"src": "1768:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1626,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1768:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "2125:64:2",
										"statements": [
											{
												"expression": {
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1631,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2136:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "537769736846697368",
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_f68be8422a71ef1830af3c898e131cb4c34a1c11d8da48fb9cdcfe95fb2bbc4c",
															"typeString": "literal_string \"SwishFish\""
														},
														"value": "SwishFish"
													},
													"src": "2136:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "2136:19:2"
											},
											{
												"expression": {
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1635,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "2166:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "534648",
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2176:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_57e62b5e1d08aa47727608e4636dd9ac1fe1ed6c6bfabd35d03c71a8d352957c",
															"typeString": "literal_string \"SFH\""
														},
														"value": "SFH"
													},
													"src": "2166:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "2166:15:2"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "1799:306:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1640,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:2:2"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:2"
									},
									"scope": 2205,
									"src": "2111:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2295
									],
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "2328:31:2",
										"statements": [
											{
												"expression": {
													"id": 1647,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1625,
													"src": "2346:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1648,
												"nodeType": "Return",
												"src": "2339:12:2"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "2197:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2268:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1643,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2295:8:2"
									},
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2272:2:2"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "2313:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2313:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2312:15:2"
									},
									"scope": 2205,
									"src": "2259:100:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2301
									],
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "2549:33:2",
										"statements": [
											{
												"expression": {
													"id": 1657,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "2567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1656,
												"id": 1658,
												"nodeType": "Return",
												"src": "2560:14:2"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "2367:105:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2487:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1653,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2516:8:2"
									},
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:2:2"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2534:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2534:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:15:2"
									},
									"scope": 2205,
									"src": "2478:104:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2307
									],
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "3286:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3304:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1666,
												"id": 1668,
												"nodeType": "Return",
												"src": "3297:9:2"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "2590:625:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3230:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1663,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3261:8:2"
									},
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:2"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "3279:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1664,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:7:2"
									},
									"scope": 2205,
									"src": "3221:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2232
									],
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "3449:38:2",
										"statements": [
											{
												"expression": {
													"id": 1677,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1623,
													"src": "3467:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1676,
												"id": 1678,
												"nodeType": "Return",
												"src": "3460:19:2"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "3322:51:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3388:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1673,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3422:8:2"
									},
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3399:2:2"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "3440:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:2"
									},
									"scope": 2205,
									"src": "3379:108:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2240
									],
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "3633:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1689,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "3651:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1691,
													"indexExpression": {
														"id": 1690,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "3661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3651:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1692,
												"nodeType": "Return",
												"src": "3644:25:2"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "3495:49:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3559:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1685,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3606:8:2"
									},
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3577:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3569:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:17:2"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3624:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:9:2"
									},
									"scope": 2205,
									"src": "3550:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2250
									],
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "3968:108:2",
										"statements": [
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3987:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "3979:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1705,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3979:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1707,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "3995:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3995:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3979:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1711,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "4028:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "4035:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "4039:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1710,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "4018:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "4018:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4064:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1704,
												"id": 1717,
												"nodeType": "Return",
												"src": "4057:11:2"
											}
										]
									},
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "3685:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3892:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1701,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3944:8:2"
									},
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3909:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "3901:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3921:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "3913:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3900:28:2"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "3962:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3962:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:6:2"
									},
									"scope": 2205,
									"src": "3883:193:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2260
									],
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4237:53:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1730,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "4255:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1732,
														"indexExpression": {
															"id": 1731,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "4267:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4255:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1734,
													"indexExpression": {
														"id": 1733,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "4274:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4255:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1729,
												"id": 1735,
												"nodeType": "Return",
												"src": "4248:34:2"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "4084:49:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4148:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1726,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4210:8:2"
									},
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4181:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4173:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4157:32:2"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4228:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:2"
									},
									"scope": 2205,
									"src": "4139:151:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2270
									],
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "4699:112:2",
										"statements": [
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4718:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "4710:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1750,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "4726:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4726:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4710:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1754,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "4758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "4765:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "4774:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1753,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "4749:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "4749:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4799:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1747,
												"id": 1760,
												"nodeType": "Return",
												"src": "4792:11:2"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "4298:306:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4619:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1744,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4675:8:2"
									},
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4635:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4627:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4652:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4644:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4626:33:2"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4693:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4693:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4692:6:2"
									},
									"scope": 2205,
									"src": "4610:201:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2282
									],
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "5528:158:2",
										"statements": [
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5547:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "5539:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5539:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1777,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "5557:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5557:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5539:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "5596:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1782,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "5602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "5611:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1780,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2182,
														"src": "5580:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5580:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "5580:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1787,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "5639:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "5645:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1789,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "5649:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1786,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "5629:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5629:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "5629:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5674:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1774,
												"id": 1793,
												"nodeType": "Return",
												"src": "5667:11:2"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "4819:566:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5400:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5504:8:2"
									},
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5431:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5423:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5454:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5446:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5475:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5467:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5412:76:2"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5522:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5522:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:6:2"
									},
									"scope": 2205,
									"src": "5391:295:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "6189:147:2",
										"statements": [
											{
												"assignments": [
													1806
												],
												"declarations": [
													{
														"constant": false,
														"id": 1806,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6208:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1824,
														"src": "6200:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1805,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6200:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1809,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1807,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "6216:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6216:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6200:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1811,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "6248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1812,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "6255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1818,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "6294:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1814,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "6274:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1815,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "6281:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1813,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "6264:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address,address) view returns (uint256)"
																		}
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6264:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6290:3:2",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2796,
																"src": "6264:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6264:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1810,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "6239:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6239:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "6239:67:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6324:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1804,
												"id": 1823,
												"nodeType": "Return",
												"src": "6317:11:2"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "5694:395:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6104:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "6122:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6147:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "6139:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6121:37:2"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "6183:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6183:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6182:6:2"
									},
									"scope": 2205,
									"src": "6095:241:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "6938:328:2",
										"statements": [
											{
												"assignments": [
													1836
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6957:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1866,
														"src": "6949:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1835,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6949:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1837,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "6965:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6965:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6949:28:2"
											},
											{
												"assignments": [
													1841
												],
												"declarations": [
													{
														"constant": false,
														"id": 1841,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6996:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1866,
														"src": "6988:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6988:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"id": 1843,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "7025:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1844,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "7032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1842,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "7015:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6988:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "7059:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1849,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "7079:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7059:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7096:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7051:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "7051:85:2"
											},
											{
												"id": 1863,
												"nodeType": "UncheckedBlock",
												"src": "7143:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1855,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "7173:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1856,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "7180:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1859,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "7210:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1857,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "7189:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7206:3:2",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2813,
																		"src": "7189:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7189:37:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1854,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2138,
																"src": "7164:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7164:63:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1862,
														"nodeType": "ExpressionStatement",
														"src": "7164:63:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1834,
												"id": 1865,
												"nodeType": "Return",
												"src": "7247:11:2"
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "6344:489:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6848:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6874:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "6866:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6891:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "6883:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6883:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6865:42:2"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "6932:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6932:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6931:6:2"
									},
									"scope": 2205,
									"src": "6839:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "7848:725:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1878,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "7867:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7883:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7875:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1879,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7875:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7875:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7867:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7887:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7859:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "7859:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1888,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "7946:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7960:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7952:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1889,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7952:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7952:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7946:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7964:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7938:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "7938:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1898,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8036:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1899,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8042:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1900,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "8046:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1897,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "8015:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8015:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "8015:38:2"
											},
											{
												"assignments": [
													1904
												],
												"declarations": [
													{
														"constant": false,
														"id": 1904,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8074:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "8066:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8066:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1908,
												"initialValue": {
													"baseExpression": {
														"id": 1905,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "8088:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1907,
													"indexExpression": {
														"id": 1906,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "8098:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8088:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8066:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1910,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "8122:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1911,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "8137:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8122:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8145:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8114:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8114:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "8114:72:2"
											},
											{
												"id": 1936,
												"nodeType": "UncheckedBlock",
												"src": "8193:279:2",
												"statements": [
													{
														"expression": {
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1916,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "8214:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1918,
																"indexExpression": {
																	"id": 1917,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "8224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8214:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1921,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1874,
																		"src": "8248:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1919,
																		"name": "fromBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "8232:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8244:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2813,
																	"src": "8232:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8232:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8214:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1924,
														"nodeType": "ExpressionStatement",
														"src": "8214:41:2"
													},
													{
														"expression": {
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1925,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "8423:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1927,
																"indexExpression": {
																	"id": 1926,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "8433:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8423:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1932,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1874,
																		"src": "8457:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1928,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "8439:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1930,
																		"indexExpression": {
																			"id": 1929,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "8449:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8439:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8453:3:2",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2796,
																	"src": "8439:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8439:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8423:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1935,
														"nodeType": "ExpressionStatement",
														"src": "8423:41:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1938,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8498:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8504:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1940,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "8508:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1937,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "8489:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8489:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "EmitStatement",
												"src": "8484:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1944,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8548:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1945,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8554:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "8558:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1943,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "8528:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8528:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1948,
												"nodeType": "ExpressionStatement",
												"src": "8528:37:2"
											}
										]
									},
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "7274:456:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7745:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7773:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "7765:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7796:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "7788:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7817:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "7809:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7754:76:2"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7848:0:2"
									},
									"scope": 2205,
									"src": "7736:837:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "8925:507:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1959,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "8944:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8963:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8955:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1960,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8955:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8955:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8944:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8967:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8936:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8936:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "8936:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9043:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9035:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9035:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9035:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1973,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "9047:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1974,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "9056:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1968,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "9014:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9014:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "9014:49:2"
											},
											{
												"expression": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1977,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "9076:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1980,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "9108:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1978,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "9091:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9104:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2796,
															"src": "9091:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9091:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9076:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "9076:39:2"
											},
											{
												"id": 1995,
												"nodeType": "UncheckedBlock",
												"src": "9122:189:2",
												"statements": [
													{
														"expression": {
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1984,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "9252:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1986,
																"indexExpression": {
																	"id": 1985,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "9262:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9252:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1991,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "9296:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1987,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "9273:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1989,
																		"indexExpression": {
																			"id": 1988,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "9283:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9273:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9292:3:2",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2796,
																	"src": "9273:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9273:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9252:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1994,
														"nodeType": "ExpressionStatement",
														"src": "9252:51:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9343:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9335:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1997,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9335:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9335:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2001,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "9347:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2002,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "9356:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1996,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "9326:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9326:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "EmitStatement",
												"src": "9321:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9404:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9396:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9396:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9396:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2010,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "9408:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2011,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "9417:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2005,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "9376:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9376:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "9376:48:2"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "8581:273:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8869:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8883:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "8875:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "8892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8874:33:2"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8925:0:2"
									},
									"scope": 2205,
									"src": "8860:572:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "9830:626:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2024,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "9849:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9868:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9860:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2025,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9860:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9860:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9849:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9872:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9841:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9841:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "9841:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2034,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2035,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2039,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2033,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "9919:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9919:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "9919:49:2"
											},
											{
												"assignments": [
													2043
												],
												"declarations": [
													{
														"constant": false,
														"id": 2043,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9987:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "9979:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9979:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2047,
												"initialValue": {
													"baseExpression": {
														"id": 2044,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "10004:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2046,
													"indexExpression": {
														"id": 2045,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "10014:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10004:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9979:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "10041:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2050,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "10059:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10041:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10067:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 2048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10033:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10033:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "10033:71:2"
											},
											{
												"id": 2073,
												"nodeType": "UncheckedBlock",
												"src": "10115:222:2",
												"statements": [
													{
														"expression": {
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2055,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "10140:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2057,
																"indexExpression": {
																	"id": 2056,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "10150:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10140:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2062,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "10184:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 2058,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "10161:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2060,
																		"indexExpression": {
																			"id": 2059,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "10171:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10161:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10180:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2813,
																	"src": "10161:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10161:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10140:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2065,
														"nodeType": "ExpressionStatement",
														"src": "10140:51:2"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2066,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "10286:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2069,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "10318:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2067,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1623,
																		"src": "10301:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10314:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2813,
																	"src": "10301:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10301:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10286:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "10286:39:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2075,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "10361:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10378:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10370:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10370:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "10382:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2074,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "10352:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10352:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "EmitStatement",
												"src": "10347:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2084,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "10420:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10437:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10429:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2085,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10429:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10429:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2089,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "10441:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2083,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "10400:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10400:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "10400:48:2"
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "9440:319:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9774:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9788:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "9780:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9805:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "9797:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9779:33:2"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9830:0:2"
									},
									"scope": 2205,
									"src": "9765:691:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "11011:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2104,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "11030:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11047:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11039:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2105,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11039:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11039:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11030:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11051:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11022:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11022:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "11022:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2114,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "11109:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11128:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11120:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11120:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11120:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11109:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11132:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11101:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11101:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "11101:68:2"
											},
											{
												"expression": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2123,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "11182:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2126,
															"indexExpression": {
																"id": 2124,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "11194:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11182:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2127,
														"indexExpression": {
															"id": 2125,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "11201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11182:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2128,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "11212:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11182:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "11182:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2132,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "11243:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2133,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "11250:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "11259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2131,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "11234:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11234:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2136,
												"nodeType": "EmitStatement",
												"src": "11229:37:2"
											}
										]
									},
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "10464:424:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10903:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10930:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "10922:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10954:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "10946:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10980:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "10972:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10911:82:2"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11011:0:2"
									},
									"scope": 2205,
									"src": "10894:380:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "11689:320:2",
										"statements": [
											{
												"assignments": [
													2149
												],
												"declarations": [
													{
														"constant": false,
														"id": 2149,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11708:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 2181,
														"src": "11700:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11700:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2154,
												"initialValue": {
													"arguments": [
														{
															"id": 2151,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "11737:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2152,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "11744:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2150,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "11727:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11727:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11700:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2155,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2149,
														"src": "11767:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11792:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2157,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11792:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2156,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11787:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11787:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11801:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11787:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11767:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2180,
												"nodeType": "IfStatement",
												"src": "11763:239:2",
												"trueBody": {
													"id": 2179,
													"nodeType": "Block",
													"src": "11806:196:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2163,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2149,
																			"src": "11829:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2164,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2145,
																			"src": "11849:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11829:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11857:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 2162,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11821:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11821:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2168,
															"nodeType": "ExpressionStatement",
															"src": "11821:68:2"
														},
														{
															"id": 2178,
															"nodeType": "UncheckedBlock",
															"src": "11900:91:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2170,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2141,
																				"src": "11934:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2171,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2143,
																				"src": "11941:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 2174,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2145,
																						"src": "11971:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2172,
																						"name": "currentAllowance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2149,
																						"src": "11950:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11967:3:2",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2813,
																					"src": "11950:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11950:28:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2169,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2138,
																			"src": "11925:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11925:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2177,
																	"nodeType": "ExpressionStatement",
																	"src": "11925:54:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "11282:277:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11574:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "11600:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11632:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "11624:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11624:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11658:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "11650:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11650:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11589:82:2"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11689:0:2"
									},
									"scope": 2205,
									"src": "11565:444:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "12732:2:2",
										"statements": []
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "12017:586:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12618:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12657:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "12649:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12680:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "12672:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12701:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "12693:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12638:76:2"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12732:0:2"
									},
									"scope": 2205,
									"src": "12609:125:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "13460:2:2",
										"statements": []
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "12742:590:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13347:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13385:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "13377:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13408:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "13400:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13429:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "13421:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13366:76:2"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13460:0:2"
									},
									"scope": 2205,
									"src": "13338:124:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2206,
							"src": "1482:11983:2",
							"usedErrors": []
						}
					],
					"src": "108:13359:2"
				},
				"id": 2
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2283
						]
					},
					"id": 2284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2207,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2208,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2283,
							"linearizedBaseContracts": [
								2283
							],
							"name": "IERC20",
							"nameLocation": "220:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2217,
									"name": "Transfer",
									"nameLocation": "409:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "418:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "440:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "460:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:3"
									},
									"src": "403:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2226,
									"name": "Approval",
									"nameLocation": "646:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "655:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "678:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "703:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:3"
									},
									"src": "640:78:3"
								},
								{
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:3"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:3"
									},
									"scope": 2283,
									"src": "800:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1002:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:3"
									},
									"scope": 2283,
									"src": "943:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:3"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:3"
									},
									"scope": 2283,
									"src": "1233:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1606:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:3"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1661:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:3"
									},
									"scope": 2283,
									"src": "1587:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "2356:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "2373:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:3"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "2407:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:3"
									},
									"scope": 2283,
									"src": "2339:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2754:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2777:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2798:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:3"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2838:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:3"
									},
									"scope": 2283,
									"src": "2722:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2284,
							"src": "210:2637:3",
							"usedErrors": []
						}
					],
					"src": "109:2740:3"
				},
				"id": 3
			},
			"interfaces/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2283
						],
						"IERC20Metadata": [
							2308
						]
					},
					"id": 2309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2285,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2309,
							"sourceUnit": 2284,
							"src": "140:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2288,
										"name": "IERC20",
										"nameLocations": [
											"316:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2283,
										"src": "316:6:4"
									},
									"id": 2289,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2287,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 2308,
							"linearizedBaseContracts": [
								2308,
								2283
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:4"
									},
									"returnParameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "431:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:4"
									},
									"scope": 2308,
									"src": "392:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:4"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "559:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2298,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:4"
									},
									"scope": 2308,
									"src": "518:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2302,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:4"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "698:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2304,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:4"
									},
									"scope": 2308,
									"src": "655:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2309,
							"src": "288:420:4",
							"usedErrors": []
						}
					],
					"src": "113:597:4"
				},
				"id": 4
			},
			"interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							2371
						]
					},
					"id": 2372,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2310,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2371,
							"linearizedBaseContracts": [
								2371
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "76:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 2320,
									"name": "PairCreated",
									"nameLocation": "107:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "135:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "119:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "159:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "143:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "175:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "167:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "181:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "181:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:68:5"
									},
									"src": "101:86:5"
								},
								{
									"functionSelector": "017e7e58",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "204:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:5"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "235:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:9:5"
									},
									"scope": 2371,
									"src": "195:49:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 2330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "259:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:2:5"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "296:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:9:5"
									},
									"scope": 2371,
									"src": "250:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "322:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "338:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "330:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "354:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "346:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:32:5"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "393:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "385:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:14:5"
									},
									"scope": 2371,
									"src": "313:86:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 2346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "414:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "423:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "423:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:6:5"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "460:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "452:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:14:5"
									},
									"scope": 2371,
									"src": "405:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 2351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "481:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:5"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "521:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "521:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:6:5"
									},
									"scope": 2371,
									"src": "472:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 2360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "544:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "563:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "555:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "579:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "571:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:32:5"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "613:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "605:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:14:5"
									},
									"scope": 2371,
									"src": "535:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 2365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "636:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "645:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:9:5"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 2371,
									"src": "627:36:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 2370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "678:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:5"
									},
									"scope": 2371,
									"src": "669:42:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2372,
							"src": "66:648:5",
							"usedErrors": []
						}
					],
					"src": "39:677:5"
				},
				"id": 5
			},
			"interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2679
						]
					},
					"id": 2680,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2373,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2679,
							"linearizedBaseContracts": [
								2679
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "76:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "111:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:6"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "144:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:9:6"
									},
									"scope": 2679,
									"src": "102:51:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "168:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:6"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "198:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:9:6"
									},
									"scope": 2679,
									"src": "159:48:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 2408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "224:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "255:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "247:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "280:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "272:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "302:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "297:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "332:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "327:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "362:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "357:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "388:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "383:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "417:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "409:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "435:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "430:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:214:6"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "474:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "469:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "469:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "488:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "483:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "502:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "497:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "497:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:44:6"
									},
									"scope": 2679,
									"src": "215:298:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 2429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "528:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "562:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "554:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "583:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "578:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "617:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "612:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "612:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "647:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "642:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "642:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "678:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "670:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "696:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "691:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "691:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:168:6"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "743:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "738:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "738:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "761:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "756:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "756:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "777:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "772:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:50:6"
									},
									"scope": 2679,
									"src": "519:269:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 2450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "803:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "884:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "879:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "879:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "909:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "904:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "935:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "964:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "956:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "982:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "977:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "977:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:179:6"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1021:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "1016:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "1030:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1030:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:28:6"
									},
									"scope": 2679,
									"src": "794:250:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 2469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1059:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1096:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1088:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1117:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1112:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1112:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1142:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1137:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1137:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1172:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1167:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1167:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1195:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1221:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1216:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1216:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:159:6"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1260:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1255:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1255:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1278:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1273:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1273:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:34:6"
									},
									"scope": 2679,
									"src": "1050:239:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1304:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1348:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1340:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1373:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1365:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1395:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1390:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1390:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1420:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1415:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1415:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1446:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1441:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1441:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1475:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1467:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1493:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1488:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1488:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1517:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1512:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1512:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1535:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1529:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2486,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1529:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1546:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1538:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1557:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1549:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:236:6"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1584:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1584:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1603:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1598:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1598:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:28:6"
									},
									"scope": 2679,
									"src": "1295:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 2525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1627:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1674:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1666:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1695:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1690:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1720:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1715:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1715:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1750:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1745:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1745:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1781:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1773:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1799:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1794:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1794:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1823:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1818:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1818:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2513,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1835:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1852:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1844:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2515,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1863:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1855:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:216:6"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1895:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1890:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1890:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1913:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "1908:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:34:6"
									},
									"scope": 2679,
									"src": "1618:306:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1939:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1979:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1974:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2003:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1998:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1998:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2045:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "2026:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2530,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2026:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2531,
													"nodeType": "ArrayTypeName",
													"src": "2026:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2068:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "2060:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2086:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "2081:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2081:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:138:6"
									},
									"returnParameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "2120:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2538,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2120:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2539,
													"nodeType": "ArrayTypeName",
													"src": "2120:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:23:6"
									},
									"scope": 2679,
									"src": "1930:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2158:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2198:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2193:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2193:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2223:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2218:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2218:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2264:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2245:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2547,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2245:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2548,
													"nodeType": "ArrayTypeName",
													"src": "2245:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2287:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2279:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2305:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2300:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2300:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:138:6"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2353:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2339:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2555,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2339:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2556,
													"nodeType": "ArrayTypeName",
													"src": "2339:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:23:6"
									},
									"scope": 2679,
									"src": "2149:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2377:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2404:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2399:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2399:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2418:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2562,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2418:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2563,
													"nodeType": "ArrayTypeName",
													"src": "2418:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2460:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2455:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2455:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:71:6"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2525:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2511:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2570,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2511:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2571,
													"nodeType": "ArrayTypeName",
													"src": "2511:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:23:6"
									},
									"scope": 2679,
									"src": "2368:166:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 2591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2549:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2576:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "2571:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2592:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "2587:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2587:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2624:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "2605:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2605:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2580,
													"nodeType": "ArrayTypeName",
													"src": "2605:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2638:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "2630:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2647:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "2642:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2642:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:86:6"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "2685:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2587,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2685:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2588,
													"nodeType": "ArrayTypeName",
													"src": "2685:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:23:6"
									},
									"scope": 2679,
									"src": "2540:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2723:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2750:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "2745:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2745:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2765:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "2760:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2760:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2798:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "2779:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2596,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2779:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2597,
													"nodeType": "ArrayTypeName",
													"src": "2779:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2812:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "2804:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2821:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "2816:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2816:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:86:6"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2873:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "2859:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2604,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2859:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2605,
													"nodeType": "ArrayTypeName",
													"src": "2859:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:23:6"
									},
									"scope": 2679,
									"src": "2714:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 2623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2897:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2924:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2919:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2919:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2954:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2935:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2935:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2612,
													"nodeType": "ArrayTypeName",
													"src": "2935:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2968:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2960:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2972:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2972:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:68:6"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3042:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "3028:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2619,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3028:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2620,
													"nodeType": "ArrayTypeName",
													"src": "3028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:23:6"
									},
									"scope": 2679,
									"src": "2888:163:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3068:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3079:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "3074:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3093:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "3088:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3088:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3108:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "3103:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3103:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:44:6"
									},
									"returnParameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3146:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "3141:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3141:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:6"
									},
									"scope": 2679,
									"src": "3059:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3170:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3188:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "3183:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3203:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "3198:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3219:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "3214:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3214:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:48:6"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3259:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "3254:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3254:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:16:6"
									},
									"scope": 2679,
									"src": "3161:109:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3285:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3302:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "3297:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3318:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "3313:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3334:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "3329:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3329:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:49:6"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3374:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "3369:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3369:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:15:6"
									},
									"scope": 2679,
									"src": "3276:108:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3399:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3418:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3413:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3413:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3447:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3428:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2659,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3428:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2660,
													"nodeType": "ArrayTypeName",
													"src": "3428:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:40:6"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3490:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3476:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2663,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3476:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2664,
													"nodeType": "ArrayTypeName",
													"src": "3476:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:23:6"
									},
									"scope": 2679,
									"src": "3390:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3514:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3532:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3527:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3562:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3543:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2670,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3543:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2671,
													"nodeType": "ArrayTypeName",
													"src": "3543:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3526:41:6"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3605:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3591:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2674,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3591:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2675,
													"nodeType": "ArrayTypeName",
													"src": "3591:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:23:6"
									},
									"scope": 2679,
									"src": "3505:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2680,
							"src": "66:3551:6",
							"usedErrors": []
						}
					],
					"src": "39:3580:6"
				},
				"id": 6
			},
			"interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2679
						],
						"IUniswapV2Router02": [
							2767
						]
					},
					"id": 2768,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2681,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"absolutePath": "interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 2680,
							"src": "66:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2683,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"136:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2679,
										"src": "136:18:7"
									},
									"id": 2684,
									"nodeType": "InheritanceSpecifier",
									"src": "136:18:7"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2767,
							"linearizedBaseContracts": [
								2767,
								2679
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "114:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "171:47:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "237:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "229:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "258:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "253:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "253:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "283:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "278:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "313:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "308:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "344:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "336:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "362:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "357:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:159:7"
									},
									"returnParameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "401:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "396:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "396:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:16:7"
									},
									"scope": 2767,
									"src": "162:250:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "427:57:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "503:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "495:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "524:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "519:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "549:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "544:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "579:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "574:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "610:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "602:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "628:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "623:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "652:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "647:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "670:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "664:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2716,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "664:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "681:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "673:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "692:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "684:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2720,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:216:7"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "724:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "719:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:16:7"
									},
									"scope": 2767,
									"src": "418:317:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "752:53:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "821:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "816:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "845:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "840:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "840:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "887:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "868:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2731,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "868:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2732,
													"nodeType": "ArrayTypeName",
													"src": "868:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "910:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "902:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "928:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "923:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "923:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:138:7"
									},
									"returnParameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:7"
									},
									"scope": 2767,
									"src": "743:210:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "968:50:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1034:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "1029:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1029:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1076:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "1057:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2743,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1057:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2744,
													"nodeType": "ArrayTypeName",
													"src": "1057:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1099:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "1091:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1117:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "1112:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1112:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:114:7"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:0:7"
									},
									"scope": 2767,
									"src": "959:191:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1165:50:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1231:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "1226:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1226:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1255:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "1250:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1250:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1297:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "1278:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2757,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1278:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2758,
													"nodeType": "ArrayTypeName",
													"src": "1278:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1320:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "1312:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1338:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "1333:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:138:7"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:0:7"
									},
									"scope": 2767,
									"src": "1156:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2768,
							"src": "104:1262:7",
							"usedErrors": []
						}
					],
					"src": "39:1329:7"
				},
				"id": 7
			},
			"libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2963
						]
					},
					"id": 2964,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2769,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2770,
								"nodeType": "StructuredDocumentation",
								"src": "137:85:8",
								"text": " @title SafeMath\n @dev Wrappers over Solidity's arithmetic operations."
							},
							"fullyImplemented": true,
							"id": 2963,
							"linearizedBaseContracts": [
								2963
							],
							"name": "SafeMath",
							"nameLocation": "232:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "554:114:8",
										"statements": [
											{
												"assignments": [
													2781
												],
												"declarations": [
													{
														"constant": false,
														"id": 2781,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "573:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2795,
														"src": "565:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "565:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2785,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2782,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2773,
														"src": "577:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2783,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2775,
														"src": "581:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "577:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "565:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2787,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2781,
																"src": "601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2788,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2773,
																"src": "606:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "601:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "609:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "593:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2792,
												"nodeType": "ExpressionStatement",
												"src": "593:46:8"
											},
											{
												"expression": {
													"id": 2793,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2781,
													"src": "659:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2779,
												"id": 2794,
												"nodeType": "Return",
												"src": "652:8:8"
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "248:233:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "496:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "508:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "500:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "519:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "511:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:22:8"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "545:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:9:8"
									},
									"scope": 2963,
									"src": "487:181:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "1018:69:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "1040:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2808,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2801,
															"src": "1043:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1046:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2806,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2813,
															2841
														],
														"referencedDeclaration": 2841,
														"src": "1036:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2805,
												"id": 2811,
												"nodeType": "Return",
												"src": "1029:50:8"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "676:269:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "960:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "972:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "964:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "983:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "975:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:22:8"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "1009:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:9:8"
									},
									"scope": 2963,
									"src": "951:136:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2840,
										"nodeType": "Block",
										"src": "1485:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "1504:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2827,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2816,
																"src": "1509:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1504:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2829,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "1512:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1496:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2831,
												"nodeType": "ExpressionStatement",
												"src": "1496:29:8"
											},
											{
												"assignments": [
													2833
												],
												"declarations": [
													{
														"constant": false,
														"id": 2833,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1544:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2840,
														"src": "1536:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1536:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2837,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "1548:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2818,
														"src": "1552:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1536:17:8"
											},
											{
												"expression": {
													"id": 2838,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2833,
													"src": "1573:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2824,
												"id": 2839,
												"nodeType": "Return",
												"src": "1566:8:8"
											}
										]
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "1095:289:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1399:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1411:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "1403:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1422:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "1414:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1439:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "1425:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1425:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:50:8"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "1476:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:9:8"
									},
									"scope": 2963,
									"src": "1390:192:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2875,
										"nodeType": "Block",
										"src": "1908:404:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2851,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "2144:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2149:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2144:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2857,
												"nodeType": "IfStatement",
												"src": "2140:47:8",
												"trueBody": {
													"id": 2856,
													"nodeType": "Block",
													"src": "2152:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2174:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2850,
															"id": 2855,
															"nodeType": "Return",
															"src": "2167:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													2859
												],
												"declarations": [
													{
														"constant": false,
														"id": 2859,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2207:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2875,
														"src": "2199:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2199:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2863,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2860,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "2211:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2861,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "2215:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2199:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2865,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "2235:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2866,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2844,
																	"src": "2239:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2235:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2868,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "2244:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2235:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2247:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2227:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2227:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "2227:56:8"
											},
											{
												"expression": {
													"id": 2873,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2859,
													"src": "2303:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2850,
												"id": 2874,
												"nodeType": "Return",
												"src": "2296:8:8"
											}
										]
									},
									"documentation": {
										"id": 2842,
										"nodeType": "StructuredDocumentation",
										"src": "1590:245:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1850:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1862:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "1854:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1873:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "1865:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1853:22:8"
									},
									"returnParameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "1899:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:9:8"
									},
									"scope": 2963,
									"src": "1841:471:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2892,
										"nodeType": "Block",
										"src": "2855:65:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2887,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "2877:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2888,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "2880:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2883:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2886,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2893,
															2921
														],
														"referencedDeclaration": 2921,
														"src": "2873:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2873:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2885,
												"id": 2891,
												"nodeType": "Return",
												"src": "2866:46:8"
											}
										]
									},
									"documentation": {
										"id": 2877,
										"nodeType": "StructuredDocumentation",
										"src": "2320:462:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2797:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2809:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "2801:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2820:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "2812:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2800:22:8"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "2846:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:9:8"
									},
									"scope": 2963,
									"src": "2788:132:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2920,
										"nodeType": "Block",
										"src": "3511:183:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2898,
																"src": "3530:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3534:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3530:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2909,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "3537:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "3522:28:8"
											},
											{
												"assignments": [
													2913
												],
												"declarations": [
													{
														"constant": false,
														"id": 2913,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3569:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2920,
														"src": "3561:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2917,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2914,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2896,
														"src": "3573:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2915,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2898,
														"src": "3577:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3573:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3561:17:8"
											},
											{
												"expression": {
													"id": 2918,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2913,
													"src": "3685:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2904,
												"id": 2919,
												"nodeType": "Return",
												"src": "3678:8:8"
											}
										]
									},
									"documentation": {
										"id": 2894,
										"nodeType": "StructuredDocumentation",
										"src": "2928:482:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3425:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3437:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "3429:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3448:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "3440:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3465:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "3451:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3451:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:50:8"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "3502:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3501:9:8"
									},
									"scope": 2963,
									"src": "3416:278:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2937,
										"nodeType": "Block",
										"src": "4226:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2932,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "4248:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2933,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2926,
															"src": "4251:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4254:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2931,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2938,
															2962
														],
														"referencedDeclaration": 2962,
														"src": "4244:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4244:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2930,
												"id": 2936,
												"nodeType": "Return",
												"src": "4237:44:8"
											}
										]
									},
									"documentation": {
										"id": 2922,
										"nodeType": "StructuredDocumentation",
										"src": "3702:451:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4168:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4180:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "4172:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4191:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "4183:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:22:8"
									},
									"returnParameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "4217:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4216:9:8"
									},
									"scope": 2963,
									"src": "4159:130:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2961,
										"nodeType": "Block",
										"src": "4869:71:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2951,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2943,
																"src": "4888:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4893:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4888:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2954,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2945,
															"src": "4896:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4880:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "4880:29:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2957,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "4927:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2958,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "4931:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4927:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2949,
												"id": 2960,
												"nodeType": "Return",
												"src": "4920:12:8"
											}
										]
									},
									"documentation": {
										"id": 2939,
										"nodeType": "StructuredDocumentation",
										"src": "4297:471:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4783:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4795:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "4787:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4806:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "4798:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4823:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "4809:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4809:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:50:8"
									},
									"returnParameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "4860:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:9:8"
									},
									"scope": 2963,
									"src": "4774:166:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2964,
							"src": "224:4719:8",
							"usedErrors": []
						}
					],
					"src": "110:4835:8"
				},
				"id": 8
			},
			"utils/Context.sol": {
				"ast": {
					"absolutePath": "utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2985
						]
					},
					"id": 2986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2965,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2966,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2985,
							"linearizedBaseContracts": [
								2985
							],
							"name": "Context",
							"nameLocation": "641:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "718:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2971,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2973,
												"nodeType": "Return",
												"src": "729:17:9"
											}
										]
									},
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 2985,
									"src": "656:98:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2983,
										"nodeType": "Block",
										"src": "829:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2980,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2979,
												"id": 2982,
												"nodeType": "Return",
												"src": "840:15:9"
											}
										]
									},
									"id": 2984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:9"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "813:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:9"
									},
									"scope": 2985,
									"src": "762:101:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2986,
							"src": "623:243:9",
							"usedErrors": []
						}
					],
					"src": "89:779:9"
				},
				"id": 9
			},
			"utils/MultiSignature.sol": {
				"ast": {
					"absolutePath": "utils/MultiSignature.sol",
					"exportedSymbols": {
						"MultiSignature": [
							3099
						]
					},
					"id": 3100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2987,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MultiSignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3099,
							"linearizedBaseContracts": [
								3099
							],
							"name": "MultiSignature",
							"nameLocation": "121:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e2d546b974d25b0ea62bb38332411ff2debd385eef5ec2d515baa97cf82ded8e",
									"id": 2993,
									"name": "DepositProposal",
									"nameLocation": "149:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "181:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "165:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2991,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "194:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "189:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "189:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "164:37:10"
									},
									"src": "143:59:10"
								},
								{
									"anonymous": false,
									"eventSelector": "096aa03a7cd4aba017b05ce697df0e528a91d045a01285c50e931b0c0c4939ce",
									"id": 2997,
									"name": "SubmitProposal",
									"nameLocation": "214:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "242:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "229:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:25:10"
									},
									"src": "208:46:10"
								},
								{
									"anonymous": false,
									"eventSelector": "12c8d6025943157cbcb4e904b3e3d97d2ac7eae9f61f343b2e7cb23be24bdbb7",
									"id": 3003,
									"name": "ApproveProposal",
									"nameLocation": "266:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "298:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "282:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3001,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "318:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "305:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "305:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:48:10"
									},
									"src": "260:70:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b8b1cbdd07c030bed9e01f4ee5465e3a3fd2aa8f7135c84467c0f3cf203925eb",
									"id": 3009,
									"name": "RevokeProposal",
									"nameLocation": "342:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "373:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "357:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3007,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "393:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "380:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:48:10"
									},
									"src": "336:69:10"
								},
								{
									"canonicalName": "MultiSignature.Proposal",
									"id": 3038,
									"members": [
										{
											"constant": false,
											"id": 3011,
											"mutability": "mutable",
											"name": "author",
											"nameLocation": "448:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "440:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3010,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3013,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "470:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "465:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3012,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "465:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3015,
											"mutability": "mutable",
											"name": "updateSalesStatus",
											"nameLocation": "494:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "489:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3014,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "489:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3017,
											"mutability": "mutable",
											"name": "salesEnabled",
											"nameLocation": "527:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "522:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3016,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "522:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3019,
											"mutability": "mutable",
											"name": "swapAndAddLiquidity",
											"nameLocation": "555:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "550:24:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3018,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "550:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3021,
											"mutability": "mutable",
											"name": "updateWithdrawOptions",
											"nameLocation": "590:21:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "585:26:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3020,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "585:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3023,
											"mutability": "mutable",
											"name": "withdrawPrice",
											"nameLocation": "630:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "622:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3022,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "622:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3025,
											"mutability": "mutable",
											"name": "updateTaxesFees",
											"nameLocation": "659:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "654:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3024,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "654:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3027,
											"mutability": "mutable",
											"name": "heisenVerseTaxFee",
											"nameLocation": "693:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "685:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3029,
											"mutability": "mutable",
											"name": "marketingTaxFee",
											"nameLocation": "729:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "721:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3031,
											"mutability": "mutable",
											"name": "teamTaxFee",
											"nameLocation": "763:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "755:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "755:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3033,
											"mutability": "mutable",
											"name": "liquidityTaxFee",
											"nameLocation": "792:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "784:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3032,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3035,
											"mutability": "mutable",
											"name": "transferBackend",
											"nameLocation": "823:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "818:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3034,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "818:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3037,
											"mutability": "mutable",
											"name": "backendAddress",
											"nameLocation": "857:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "849:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3036,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "420:8:10",
									"nodeType": "StructDefinition",
									"scope": 3099,
									"src": "413:466:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 3042,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "905:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "887:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage",
										"typeString": "struct MultiSignature.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 3040,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3039,
												"name": "Proposal",
												"nameLocations": [
													"887:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3038,
												"src": "887:8:10"
											},
											"referencedDeclaration": 3038,
											"src": "887:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$3038_storage_ptr",
												"typeString": "struct MultiSignature.Proposal"
											}
										},
										"id": 3041,
										"nodeType": "ArrayTypeName",
										"src": "887:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage_ptr",
											"typeString": "struct MultiSignature.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3048,
									"mutability": "mutable",
									"name": "proposalApproved",
									"nameLocation": "974:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "923:67:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 3047,
										"keyType": {
											"id": 3043,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "931:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "923:41:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 3046,
											"keyType": {
												"id": 3044,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "947:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "939:24:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 3045,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "958:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "1011:2:10",
										"statements": []
									},
									"id": 3052,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:10"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:10"
									},
									"scope": 3099,
									"src": "997:16:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "1063:119:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3057,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3054,
																"src": "1082:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 3058,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3042,
																	"src": "1096:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1106:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1096:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1082:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c20646f6573206e6f74206578697374",
															"id": 3061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7134604142226820b0c8fedb24fd81f2d2a42b34b5fe14d1293b8ecab78336e8",
																"typeString": "literal_string \"MultiSignatureWallet: proposal does not exist\""
															},
															"value": "MultiSignatureWallet: proposal does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7134604142226820b0c8fedb24fd81f2d2a42b34b5fe14d1293b8ecab78336e8",
																"typeString": "literal_string \"MultiSignatureWallet: proposal does not exist\""
															}
														],
														"id": 3056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1074:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:88:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3063,
												"nodeType": "ExpressionStatement",
												"src": "1074:88:10"
											},
											{
												"id": 3064,
												"nodeType": "PlaceholderStatement",
												"src": "1173:1:10"
											}
										]
									},
									"id": 3066,
									"name": "proposalExists",
									"nameLocation": "1030:14:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1050:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "1045:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:18:10"
									},
									"src": "1021:161:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "1237:146:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1256:42:10",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3071,
																		"name": "proposalApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3048,
																		"src": "1257:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 3073,
																	"indexExpression": {
																		"id": 3072,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3068,
																		"src": "1274:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1257:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3076,
																"indexExpression": {
																	"expression": {
																		"id": 3074,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1287:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1291:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1287:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1257:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c20616c72656164792077617320617070726f766564206279206f776e6572",
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1300:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa7cad984062c30132dfca98f4b20d3f464e95f2262414c65f15a47ba92265db",
																"typeString": "literal_string \"MultiSignatureWallet: proposal already was approved by owner\""
															},
															"value": "MultiSignatureWallet: proposal already was approved by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa7cad984062c30132dfca98f4b20d3f464e95f2262414c65f15a47ba92265db",
																"typeString": "literal_string \"MultiSignatureWallet: proposal already was approved by owner\""
															}
														],
														"id": 3070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:115:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3080,
												"nodeType": "ExpressionStatement",
												"src": "1248:115:10"
											},
											{
												"id": 3081,
												"nodeType": "PlaceholderStatement",
												"src": "1374:1:10"
											}
										]
									},
									"id": 3083,
									"name": "proposalNotApproved",
									"nameLocation": "1199:19:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1224:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "1219:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3067,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1219:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:18:10"
									},
									"src": "1190:193:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "1438:127:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1457:32:10",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3088,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3042,
																		"src": "1458:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$3038_storage_$dyn_storage",
																			"typeString": "struct MultiSignature.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 3090,
																	"indexExpression": {
																		"id": 3089,
																		"name": "_proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3085,
																		"src": "1468:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1458:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$3038_storage",
																		"typeString": "struct MultiSignature.Proposal storage ref"
																	}
																},
																"id": 3091,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1481:8:10",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3013,
																"src": "1458:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c74695369676e617475726557616c6c65743a2070726f706f73616c2077617320616c7265616479206578656375746564",
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1491:53:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a43ebb18702115f1ad81dad5a175aeb8cc974aa6cca1c9f507bbd0bec3a0b11",
																"typeString": "literal_string \"MultiSignatureWallet: proposal was already executed\""
															},
															"value": "MultiSignatureWallet: proposal was already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a43ebb18702115f1ad81dad5a175aeb8cc974aa6cca1c9f507bbd0bec3a0b11",
																"typeString": "literal_string \"MultiSignatureWallet: proposal was already executed\""
															}
														],
														"id": 3087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1449:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:96:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3095,
												"nodeType": "ExpressionStatement",
												"src": "1449:96:10"
											},
											{
												"id": 3096,
												"nodeType": "PlaceholderStatement",
												"src": "1556:1:10"
											}
										]
									},
									"id": 3098,
									"name": "proposalNotExecuted",
									"nameLocation": "1400:19:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1425:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "1420:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1420:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:18:10"
									},
									"src": "1391:174:10",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3100,
							"src": "112:1456:10",
							"usedErrors": []
						}
					],
					"src": "85:1485:10"
				},
				"id": 10
			}
		}
	}
}